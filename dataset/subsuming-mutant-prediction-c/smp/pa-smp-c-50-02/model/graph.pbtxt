node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "../pa-smp-c-50-00/train/lhs.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read/filenames/Size"
  input: "train_input_fn/parallel_read/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read/filenames/Greater"
  input: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read/filenames/Const"
  input: "^train_input_fn/parallel_read/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read/filenames"
  input: "train_input_fn/parallel_read/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/filenames/ToFloat"
  input: "train_input_fn/parallel_read/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/ToFloat"
  input: "train_input_fn/parallel_read/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read/TextLineReaderV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read/common_queue"
  input: "train_input_fn/parallel_read/ReaderReadV2"
  input: "train_input_fn/parallel_read/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "../pa-smp-c-50-00/train/rhs.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read_1/filenames/Size"
  input: "train_input_fn/parallel_read_1/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read_1/filenames/Greater"
  input: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read_1/filenames/Const"
  input: "^train_input_fn/parallel_read_1/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read_1/filenames"
  input: "train_input_fn/parallel_read_1/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/filenames/ToFloat"
  input: "train_input_fn/parallel_read_1/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read_1/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/ToFloat"
  input: "train_input_fn/parallel_read_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read_1/TextLineReaderV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  input: "train_input_fn/parallel_read_1/ReaderReadV2"
  input: "train_input_fn/parallel_read_1/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 659595505
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/random_shuffle_queue"
  input: "train_input_fn/parallel_read/common_queue_Dequeue:1"
  input: "train_input_fn/parallel_read_1/common_queue_Dequeue:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit"
  op: "StringSplit"
  input: "train_input_fn/packed"
  input: "train_input_fn/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "skip_empty"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat"
  op: "ConcatV2"
  input: "train_input_fn/StringSplit:1"
  input: "train_input_fn/concat/values_1"
  input: "train_input_fn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size"
  op: "Size"
  input: "train_input_fn/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed_1"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit_1"
  op: "StringSplit"
  input: "train_input_fn/packed_1"
  input: "train_input_fn/Const_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "skip_empty"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_START"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1"
  op: "ConcatV2"
  input: "train_input_fn/concat_1/values_0"
  input: "train_input_fn/StringSplit_1:1"
  input: "train_input_fn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2"
  op: "ConcatV2"
  input: "train_input_fn/concat_1"
  input: "train_input_fn/concat_2/values_1"
  input: "train_input_fn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size_1"
  op: "Size"
  input: "train_input_fn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual"
  op: "GreaterEqual"
  input: "train_input_fn/Size"
  input: "train_input_fn/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\200\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual"
  op: "LessEqual"
  input: "train_input_fn/bucket_queue/LessEqual/x"
  input: "train_input_fn/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000\377\377\377\177"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less"
  op: "Less"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LogicalAnd"
  op: "LogicalAnd"
  input: "train_input_fn/bucket_queue/LessEqual"
  input: "train_input_fn/bucket_queue/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Where"
  op: "Where"
  input: "train_input_fn/bucket_queue/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Min"
  op: "Min"
  input: "train_input_fn/bucket_queue/Where"
  input: "train_input_fn/bucket_queue/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/ToInt32"
  op: "Cast"
  input: "train_input_fn/bucket_queue/Min"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5016
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Switch"
  op: "Switch"
  input: "train_input_fn/GreaterEqual"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/ToInt32"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/concat"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6"
  op: "Switch"
  input: "train_input_fn/Size_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8"
  op: "Switch"
  input: "train_input_fn/concat_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_0"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_1"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_2"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_3"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_4"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/group_deps"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/group_deps_1"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_1"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_2"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_3"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_4"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_5"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019936203898396343
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul"
  op: "Mul"
  input: "train_input_fn/bucket_queue/bucket/Cast_5"
  input: "train_input_fn/bucket_queue/bucket/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5016_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5016_full"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5016_full"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5016_full/tags"
  input: "train_input_fn/bucket_queue/bucket/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/dequeue_top"
  op: "QueueDequeueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3577
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: ","
        string_val: "="
        string_val: "if"
        string_val: "0"
        string_val: "{"
        string_val: "}"
        string_val: "]"
        string_val: "["
        string_val: ":"
        string_val: "*"
        string_val: "1"
        string_val: "case"
        string_val: "break;"
        string_val: "=="
        string_val: "i"
        string_val: "argv"
        string_val: "optind"
        string_val: "argc"
        string_val: "-"
        string_val: "&&"
        string_val: "_"
        string_val: "error"
        string_val: "&"
        string_val: "!="
        string_val: "++"
        string_val: "NULL"
        string_val: "EXIT_FAILURE"
        string_val: "!"
        string_val: "c"
        string_val: "<"
        string_val: "true"
        string_val: "int"
        string_val: "else"
        string_val: "+"
        string_val: "char"
        string_val: "ok"
        string_val: "errno"
        string_val: "usage"
        string_val: "false"
        string_val: "."
        string_val: "||"
        string_val: "while"
        string_val: "2"
        string_val: "for"
        string_val: "optarg"
        string_val: "->"
        string_val: "switch"
        string_val: "<="
        string_val: "quote"
        string_val: "return"
        string_val: "?"
        string_val: "f"
        string_val: "const"
        string_val: "s"
        string_val: "file"
        string_val: "stdout"
        string_val: "size_t"
        string_val: "MST[STMT!TRAPSTMT]MSP[]"
        string_val: "bool"
        string_val: "()"
        string_val: "getopt_long"
        string_val: "toprint"
        string_val: "p"
        string_val: "fputs"
        string_val: "sum"
        string_val: "j"
        string_val: "MST[@!ABS$@$]MSP[]"
        string_val: "+="
        string_val: "default:"
        string_val: "line"
        string_val: "len"
        string_val: "EXIT_SUCCESS"
        string_val: "PROGRAM_NAME"
        string_val: ">"
        string_val: "MST[SWITCH!SHUFFLECASESDESTS$2$]MSP[]"
        string_val: "|="
        string_val: "unsigned"
        string_val: "length"
        string_val: "static"
        string_val: "printf"
        string_val: "&="
        string_val: "lo"
        string_val: "long_options"
        string_val: "exit"
        string_val: "AUTHORS"
        string_val: "void"
        string_val: "optc"
        string_val: "n"
        string_val: "--"
        string_val: "\'c\'"
        string_val: "status"
        string_val: "format"
        string_val: "\'a\'"
        string_val: "|"
        string_val: "fp"
        string_val: "STREQ"
        string_val: "MST[STMT!DELSTMT]MSP[]"
        string_val: "fd"
        string_val: "binary"
        string_val: "crc"
        string_val: "chopt"
        string_val: "struct"
        string_val: "case_GETOPT_VERSION_CHAR"
        string_val: "putchar"
        string_val: "(;"
        string_val: "10"
        string_val: "bit_flags"
        string_val: "cnt"
        string_val: "\'d\'"
        string_val: "\'b\'"
        string_val: "lr_13"
        string_val: "case_GETOPT_HELP_CHAR"
        string_val: ">>"
        string_val: "nfiles"
        string_val: "\'"
        string_val: "fts"
        string_val: "lr_4"
        string_val: "PACKAGE"
        string_val: "oi"
        string_val: "lr_12"
        string_val: "thisline"
        string_val: "lr_10"
        string_val: "bytes_read"
        string_val: "\'0\'"
        string_val: "name"
        string_val: "\'\\n\'"
        string_val: "time_type"
        string_val: "newtime"
        string_val: "free"
        string_val: "ent"
        string_val: "can_mode"
        string_val: "/"
        string_val: "template"
        string_val: "lr_14"
        string_val: "checksum"
        string_val: "LONGINT_OK"
        string_val: "lr_7"
        string_val: "MST[C!ADD$C$1$]MSP[]"
        string_val: "err"
        string_val: "files"
        string_val: "dereference"
        string_val: "inbuf"
        string_val: "buffer"
        string_val: "longopts"
        string_val: "lr_5"
        string_val: "set_quoting_style"
        string_val: "in"
        string_val: "ignore_mode"
        string_val: "stat"
        string_val: "time_ctime"
        string_val: "~"
        string_val: "escape_quoting_style"
        string_val: "order"
        string_val: "st"
        string_val: "hi"
        string_val: "close_stdout"
        string_val: "atexit"
        string_val: "IGNORE_MINIMAL"
        string_val: "ferror"
        string_val: "lr_9"
        string_val: "FTS_PHYSICAL"
        string_val: "lr_16"
        string_val: "stdin"
        string_val: "\'s\'"
        string_val: "e"
        string_val: "suffix"
        string_val: "lr_8"
        string_val: "MST[C!ADD$C$-1$]MSP[]"
        string_val: "8"
        string_val: "ch"
        string_val: "fclose"
        string_val: "^"
        string_val: "sizeof"
        string_val: "lr_24"
        string_val: "lr_3"
        string_val: "reference_file"
        string_val: "\'\\0\'"
        string_val: "lr_2"
        string_val: "lr_6"
        string_val: "lr_17"
        string_val: "lo_carry"
        string_val: "width"
        string_val: "tv_nsec"
        string_val: "lr_15"
        string_val: "descriptors"
        string_val: "uptime"
        string_val: "change_times"
        string_val: "MST[CALL!SHUFFLEARGS$2$]MSP[]"
        string_val: "mode"
        string_val: "this"
        string_val: "filename"
        string_val: "start"
        string_val: "newmode"
        string_val: "k"
        string_val: "\'L\'"
        string_val: "dir"
        string_val: "textdomain"
        string_val: "direc_length"
        string_val: "\'\\\\\'"
        string_val: "old_mode"
        string_val: "long"
        string_val: "program_name"
        string_val: "arg"
        string_val: "expected_operands"
        string_val: "feof"
        string_val: "do_check"
        string_val: "tv_sec"
        string_val: "alt"
        string_val: "long_format"
        string_val: "fstatus"
        string_val: "#endif"
        string_val: "O_BINARY"
        string_val: "human_output_opts"
        string_val: "lr_11"
        string_val: "lr_18"
        string_val: "output_block_size"
        string_val: "ret"
        string_val: "lr_19"
        string_val: "line_length"
        string_val: "bad_cast"
        string_val: "buf"
        string_val: "gid"
        string_val: "print_element"
        string_val: "is_stdin"
        string_val: "lr_1"
        string_val: "exit_status"
        string_val: "getenv"
        string_val: "lr_20"
        string_val: "bin_buffer"
        string_val: "groups"
        string_val: "3"
        string_val: "uintmax_t"
        string_val: "main"
        string_val: "lr_22"
        string_val: "<<"
        string_val: "size"
        string_val: "prefix_tag"
        string_val: ");"
        string_val: "delimiter"
        string_val: "tm"
        string_val: "\'t\'"
        string_val: "needs_escape"
        string_val: "updays"
        string_val: "\'p\'"
        string_val: "uid"
        string_val: "4"
        string_val: "bindtextdomain"
        string_val: "LOCALEDIR"
        string_val: "\'m\'"
        string_val: "change"
        string_val: "lr_23"
        string_val: "EOF"
        string_val: "\'P\'"
        string_val: "\'r\'"
        string_val: "lr_25"
        string_val: "precision"
        string_val: "logical"
        string_val: "gid_t"
        string_val: "outbuf"
        string_val: "status_only"
        string_val: "egid"
        string_val: "optc_status"
        string_val: "\'e\'"
        string_val: "scontext"
        string_val: "STDIN_FILENO"
        string_val: "rel_mode"
        string_val: "digest_bin_bytes"
        string_val: "total_bytes"
        string_val: "use_nuls"
        string_val: "lr_21"
        string_val: "1024"
        string_val: "ref_stats"
        string_val: "emit_try_help"
        string_val: "which"
        string_val: "opt"
        string_val: "\'7\'"
        string_val: "rgid"
        string_val: "notnow"
        string_val: "-="
        string_val: "CH_ATIME"
        string_val: "\'i\'"
        string_val: "\'X\'"
        string_val: "MST[C!CONSTVAL$0$]MSP[]"
        string_val: "sort_type"
        string_val: "\'v\'"
        string_val: "uid_t"
        string_val: "new_mode_len"
        string_val: "new_mode"
        string_val: "recurse"
        string_val: "W_TYPE_SIZE"
        string_val: "val"
        string_val: "setlocale"
        string_val: "check_input_order"
        string_val: "n_entries"
        string_val: "issued_disorder_warning"
        string_val: "affect_symlink_referent"
        string_val: "tmp_ulong"
        string_val: "hex_digest"
        string_val: "header_mode"
        string_val: "conversion"
        string_val: "no_create"
        string_val: "date_set"
        string_val: "uphours"
        string_val: "streams"
        string_val: "CAN_NOLINKS"
        string_val: "digest_hex_bytes"
        string_val: "u"
        string_val: "LC_ALL"
        string_val: "newpath"
        string_val: "86400"
        string_val: "n_mismatched_checksums"
        string_val: "XARGMATCH"
        string_val: "prev"
        string_val: "r"
        string_val: "CH_MTIME"
        string_val: "strlen"
        string_val: "q"
        string_val: "t"
        string_val: "EXIT_CANCELED"
        string_val: "sig"
        string_val: "field_width"
        string_val: "ai"
        string_val: "set_program_name"
        string_val: "initialize_main"
        string_val: "current"
        string_val: "close"
        string_val: "PRINT_MACHINE"
        string_val: "have_precision"
        string_val: "prev_optc_status"
        string_val: "args_used"
        string_val: "check_basic_portability"
        string_val: "\'h\'"
        string_val: "wd"
        string_val: "join_field_1"
        string_val: "direc_start"
        string_val: "set_join_field"
        string_val: "ENC_BLOCKSIZE"
        string_val: "24"
        string_val: "tmn"
        string_val: "filelen"
        string_val: "padding_width"
        string_val: "ref_file"
        string_val: "#if"
        string_val: "FILE"
        string_val: "mode_len"
        string_val: "PRIuMAX"
        string_val: "joption_count"
        string_val: "\'w\'"
        string_val: "BASE64_LENGTH"
        string_val: "LONGINT_OVERFLOW"
        string_val: "st_mode"
        string_val: "lr_26"
        string_val: "factors"
        string_val: "verbosity"
        string_val: "now"
        string_val: "operand_status"
        string_val: "emit_ancillary_info"
        string_val: "crctab"
        string_val: "0xFF"
        string_val: "files_given"
        string_val: "3600"
        string_val: "dest_name"
        string_val: "stats"
        string_val: "have_read_stdin"
        string_val: "files_from"
        string_val: "PACKAGE_NAME"
        string_val: "g_names"
        string_val: "bin2hex"
        string_val: "tmp_size"
        string_val: "have_field_width"
        string_val: "wrap_column"
        string_val: "quote_n"
        string_val: "PRINT_KERNEL_NAME"
        string_val: "temp"
        string_val: "\'2\'"
        string_val: "xnmalloc"
        string_val: "time_now"
        string_val: "n_open_or_read_failures"
        string_val: "i_major"
        string_val: "force_silent"
        string_val: "print_filename"
        string_val: "regular_total"
        string_val: "minimum_width"
        string_val: "PRINT_KERNEL_VERSION"
        string_val: "PRINT_KERNEL_RELEASE"
        string_val: "checkfile_stream"
        string_val: "checkfile_name"
        string_val: "mode_alloc"
        string_val: "0xffff"
        string_val: "MST[NEQ$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "STDOUT_FILENO"
        string_val: "\'z\'"
        string_val: "mode_comma_len"
        string_val: "join_field_2"
        string_val: "arg_len"
        string_val: "act"
        string_val: "flex_date"
        string_val: "env"
        string_val: "color_indicator"
        string_val: "file_full_name"
        string_val: "sort_type_specified"
        string_val: "options"
        string_val: "local"
        string_val: "umask_value"
        string_val: "file_is_binary"
        string_val: "pending_dirs"
        string_val: "all_line"
        string_val: "\'H\'"
        string_val: "60"
        string_val: "xstrtoul"
        string_val: "ptr"
        string_val: "notnow1"
        string_val: "indicator_style"
        string_val: "do"
        string_val: "required_uid"
        string_val: "required_gid"
        string_val: "perform_basename"
        string_val: "lr_28"
        string_val: "dired"
        string_val: "style"
        string_val: "debug"
        string_val: "tolower"
        string_val: "path"
        string_val: "HELP_OPTION_DESCRIPTION"
        string_val: "root_dev_ino"
        string_val: "continue;"
        string_val: "\'*\'"
        string_val: "fs_incl"
        string_val: "MST[NEQ$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "\'n\'"
        string_val: "MST[NEQ$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "long_time_format"
        string_val: "\'/\'"
        string_val: "\'1\'"
        string_val: "\'+\'"
        string_val: "FTS_COMFOLLOW"
        string_val: "specified_mode"
        string_val: "ruid"
        string_val: "Version"
        string_val: "\'E\'"
        string_val: "s_major"
        string_val: "16"
        string_val: "maxsize"
        string_val: "\'x\'"
        string_val: "mode_adjust"
        string_val: "t1"
        string_val: "PRINT_NODENAME"
        string_val: "opt_fileno"
        string_val: "ncolumns"
        string_val: "cp"
        string_val: "fill_up"
        string_val: "lr_44"
        string_val: "print_name"
        string_val: "fname"
        string_val: "_invalid"
        string_val: "isatty"
        string_val: "PRINT_PROCESSOR"
        string_val: "MST[A!CONSTVAL$0$]MSP[]"
        string_val: "FTS_LOGICAL"
        string_val: "\'o\'"
        string_val: "MUST_BE_OPERAND"
        string_val: "lr_36"
        string_val: "goto"
        string_val: "_suffix"
        string_val: "chmod_succeeded"
        string_val: "fopen"
        string_val: "\'f\'"
        string_val: "set_security_context"
        string_val: "lr_30"
        string_val: "assert"
        string_val: "SIZE_MAX"
        string_val: "CAN_MODE_MASK"
        string_val: "tmp"
        string_val: "cwd_n_used"
        string_val: ">="
        string_val: "VERSION_OPTION_DESCRIPTION"
        string_val: "\'l\'"
        string_val: "warn"
        string_val: "preserve_root"
        string_val: "strtol_error"
        string_val: "length_modifier_len"
        string_val: "i_minor"
        string_val: "whatfile"
        string_val: "\'j\'"
        string_val: "lr_34"
        string_val: "header"
        string_val: "dry_run"
        string_val: "NO_GID"
        string_val: "pdir"
        string_val: "out"
        string_val: "quiet"
        string_val: "S_ISDIR"
        string_val: "S_IRWXUGO"
        string_val: "ngettext"
        string_val: "boot_time"
        string_val: "UNLIKELY"
        string_val: "upmins"
        string_val: "newtab"
        string_val: "localtime"
        string_val: "strict"
        string_val: "MST[EQ$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[EQ$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "stderr"
        string_val: "MST[EQ$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "num"
        string_val: "MST[EQ$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "lr_27"
        string_val: "prevline"
        string_val: "loads"
        string_val: "group_name"
        string_val: "ENOENT"
        string_val: "enum"
        string_val: "can_relative_to"
        string_val: "hextobin"
        string_val: "valid_numbers"
        string_val: "select_plural"
        string_val: "infiles"
        string_val: "file_name"
        string_val: "dest_dir_arg"
        string_val: "u_argc"
        string_val: "shell"
        string_val: "gids"
        string_val: "fts_close"
        string_val: "result"
        string_val: "columns"
        string_val: "#else"
        string_val: "option_specified_date"
        string_val: "MST[EQ$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "fts_read"
        string_val: "value"
        string_val: "stream"
        string_val: "device"
        string_val: "suffix_len"
        string_val: "pwd"
        string_val: "\'%\'"
        string_val: "component_specified"
        string_val: "no_dereference"
        string_val: "ISDIGIT"
        string_val: "immediate_dirs"
        string_val: "newline"
        string_val: "FADVISE_SEQUENTIAL"
        string_val: "xstrtoumax"
        string_val: "fadvise"
        string_val: "MST[SWITCH!REMOVECASES$1$]MSP[]"
        string_val: "line_allocated"
        string_val: "stat_flags"
        string_val: "parse_long_options"
        string_val: "lr_29"
        string_val: "xalloc_die"
        string_val: "sum_func"
        string_val: "read_tokens"
        string_val: "caught_signals"
        string_val: "intmax_t"
        string_val: "name_max"
        string_val: "got_size"
        string_val: "MST[EQ$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "mode_t"
        string_val: "when"
        string_val: "str"
        string_val: "nproc"
        string_val: "invalid"
        string_val: "MST[EQ$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "hp"
        string_val: "check_extra_portability"
        string_val: "set_date"
        string_val: "file_stats"
        string_val: "MIN"
        string_val: "nsigs"
        string_val: "fail"
        string_val: "MST[EQ$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "fstat"
        string_val: "base"
        string_val: "MST[EQ$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "format_str"
        string_val: "element"
        string_val: "naively_expected_mode"
        string_val: "active_dir_set"
        string_val: "multiple_names"
        string_val: "st_size"
        string_val: "length_modifier"
        string_val: "NO_UID"
        string_val: "digest_file"
        string_val: "ls_block_size"
        string_val: "lr_42"
        string_val: "valid_number"
        string_val: "print_with_color"
        string_val: "lr_32"
        string_val: "s_minor"
        string_val: "open"
        string_val: "O_NOCTTY"
        string_val: "infile"
        string_val: "IF_LINT"
        string_val: "dest_dir"
        string_val: "fprintf"
        string_val: "can_relative_base"
        string_val: "lr_37"
        string_val: "can_fname"
        string_val: "devmsg"
        string_val: "is_j2"
        string_val: "print_group"
        string_val: "\'A\'"
        string_val: "open_errno"
        string_val: "MST[NEQ$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "time_style_option"
        string_val: "\'-\'"
        string_val: "st2"
        string_val: "st1"
        string_val: "filename_quoting_options"
        string_val: "field"
        string_val: "FTS"
        string_val: "S_ISREG"
        string_val: "use_dest_dir"
        string_val: "CAN_MISSING"
        string_val: "g"
        string_val: "wc_file"
        string_val: "fp1"
        string_val: "slash"
        string_val: "entries"
        string_val: "setvbuf"
        string_val: "xprintf"
        string_val: "string_to_join_field"
        string_val: "show_all_fs"
        string_val: "file_size"
        string_val: "n_args"
        string_val: "human_options"
        string_val: "sort_time"
        string_val: "n_gids"
        string_val: "field_data"
        string_val: "ws"
        string_val: "V_off"
        string_val: "MIGHT_BE_O_ARG"
        string_val: "MODE_RW_UGO"
        string_val: "current_column"
        string_val: "MST[EQ$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "getline"
        string_val: "fputc"
        string_val: "MST[PADD$A1$@2$!OPERAND$@2$]MSP[]"
        string_val: "defaultcon"
        string_val: "restorecon_private"
        string_val: "MST[NEQ$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "FTSENT"
        string_val: "\'u\'"
        string_val: "not_an_escape:"
        string_val: "STATUS_OPTION"
        string_val: "OUTPUT_MODE"
        string_val: "FTS_NOSTAT"
        string_val: "15"
        string_val: "verbose"
        string_val: "lr_31"
        string_val: "wrap_write"
        string_val: "table"
        string_val: "relative_to"
        string_val: "base64_encode"
        string_val: "MST[NEQ$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "NO_PRESERVE_ROOT"
        string_val: "MST[NEQ$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "CHECK_ORDER_ENABLED"
        string_val: "relative_base"
        string_val: "isxdigit"
        string_val: "digest_check"
        string_val: "nrows"
        string_val: "IS_USER_PROCESS"
        string_val: "lr_41"
        string_val: "do_v9"
        string_val: "cksum"
        string_val: "use_names"
        string_val: "pre"
        string_val: "linep"
        string_val: "\'q\'"
        string_val: "scale_from"
        string_val: "MST[PADD$A1$@2$!PSUB$A1$@2$]MSP[]"
        string_val: "process_line"
        string_val: "fread"
        string_val: "check_order"
        string_val: "node_type"
        string_val: "C_LEFT"
        string_val: "new_format"
        string_val: "double"
        string_val: "grouping"
        string_val: "strstr"
        string_val: "string"
        string_val: "input_fh"
        string_val: "errors"
        string_val: "memcmp"
        string_val: "lr_35"
        string_val: "MST[EQ$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "n_misformatted_lines"
        string_val: "MST[EQ$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "msg_mut_excl"
        string_val: "xmemcoll"
        string_val: "xfts_open"
        string_val: "to_uchar"
        string_val: "prec"
        string_val: "get_reldate"
        string_val: "n_files"
        string_val: "posix_format"
        string_val: "getc"
        string_val: "MST[NEQ$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "STRUCT_UTMP"
        string_val: "failed"
        string_val: "MST[NEQ$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "specified_context"
        string_val: "isspace"
        string_val: "stdbuf"
        string_val: "print_block_size"
        string_val: "avg"
        string_val: "UTIME_OMIT"
        string_val: "unknown"
        string_val: "MST[ADD$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "0xFFFFFFFF"
        string_val: "MST[P!PLEFTINC$P$]MSP[]"
        string_val: "MST[ADD$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "pw"
        string_val: "n_properly_formatted_lines"
        string_val: "\'\\b\'"
        string_val: "\'\\a\'"
        string_val: "lr_39"
        string_val: "0xf"
        string_val: "O_RDONLY"
        string_val: "t0"
        string_val: "_prefix"
        string_val: "MST[P!PLEFTDEC$P$]MSP[]"
        string_val: "\'=\'"
        string_val: "diagnose_surprises"
        string_val: "scale_none"
        string_val: "ctx"
        string_val: "users"
        string_val: "fts_path"
        string_val: "memmove"
        string_val: "puts"
        string_val: "MST[ADD$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "isbase64"
        string_val: "tab"
        string_val: "multiplier"
        string_val: "MST[ADD$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "LS_FAILURE"
        string_val: "MST[ADD$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "ws_col"
        string_val: "vstrtoimax"
        string_val: "MST[P!PRIGHTDEC$P$]MSP[]"
        string_val: "MST[ADD$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "CHECK_ORDER_DISABLED"
        string_val: "\'3\'"
        string_val: "names"
        string_val: "fts_set"
        string_val: "batch_file"
        string_val: "match"
        string_val: "MST[ADD$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "validlen"
        string_val: "x_count"
        string_val: "reference"
        string_val: "mbstate"
        string_val: "_data"
        string_val: "upsecs"
        string_val: "maxlen"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!ABS$@1$]MSP[]"
        string_val: "O_WRONLY"
        string_val: "O_NONBLOCK"
        string_val: "strchr"
        string_val: "hbuf"
        string_val: "fwrite"
        string_val: "O_CREAT"
        string_val: "MST[P!PRIGHTINC$P$]MSP[]"
        string_val: "DELIMITER_DEFAULT"
        string_val: "fs_excl"
        string_val: "ftspath"
        string_val: "CAN_EXISTING"
        string_val: "time_atime"
        string_val: "MST[ADD$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!BITOR$V1$@2$]MSP[]"
        string_val: "INT_MAX"
        string_val: "512"
        string_val: "DEREFERENCE_OPTION"
        string_val: "mkstemp_len"
        string_val: "mempcpy"
        string_val: "off_t"
        string_val: "conv_exit_code"
        string_val: "datestr"
        string_val: "version_etc"
        string_val: "set_char_quoting"
        string_val: "ch_status"
        string_val: "used"
        string_val: "hardware_platform"
        string_val: "delim"
        string_val: "_IONBF"
        string_val: "PRINT_OPERATING_SYSTEM"
        string_val: "argv_iter_n_args"
        string_val: "MST[EQ$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "DEC_B64BLOCKSIZE"
        string_val: "file_exists"
        string_val: "argument"
        string_val: "args"
        string_val: "PRINT_HARDWARE_PLATFORM"
        string_val: "MST[EQ$@1$@2$!NEG$@1$]MSP[]"
        string_val: "signal"
        string_val: "line_number"
        string_val: "show_listed_fs"
        string_val: "lr_38"
        string_val: "MST[EQ$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "print_bytes"
        string_val: "obstack_init"
        string_val: "memcpy"
        string_val: "MST[EQ$@1$@2$!ABS$@1$]MSP[]"
        string_val: "timespec"
        string_val: "FROM_OPTION"
        string_val: "C_RIGHT"
        string_val: "LONGINT_INVALID"
        string_val: "ignore_garbage"
        string_val: "op0"
        string_val: "allow_options"
        string_val: "lr_43"
        string_val: "is_smack_enabled"
        string_val: "ssize_t"
        string_val: "\'.\'"
        string_val: "x_len"
        string_val: "tmpl"
        string_val: "suff_len"
        string_val: "USAGE_BUILTIN_WARNING"
        string_val: "input"
        string_val: "MST[EQ$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "\'F\'"
        string_val: "seen_unpairable"
        string_val: "file_output_block_size"
        string_val: "file_human_output_opts"
        string_val: "LC_TIME"
        string_val: "username"
        string_val: "version"
        string_val: "release"
        string_val: "machine"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "p0"
        string_val: "o"
        string_val: "many_per_line"
        string_val: "user_name"
        string_val: "recursive"
        string_val: "UTMP_FILE"
        string_val: "MST[PADD$A1$@2$!OPERAND$A1$]MSP[]"
        string_val: "tok"
        string_val: "known_name_max"
        string_val: "xnrealloc"
        string_val: "check_component_lengths"
        string_val: "fp2"
        string_val: "p1"
        string_val: "ignore"
        string_val: "fs_select_list"
        string_val: "rsize"
        string_val: "process_file"
        string_val: "human_autoscale"
        string_val: "bin_result"
        string_val: "CHECK_ORDER_DEFAULT"
        string_val: "xfreopen"
        string_val: "uname_mode"
        string_val: "remove_empty_parents"
        string_val: "set_defaultcon"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "raise"
        string_val: "INODES_MODE"
        string_val: "trimmed_name"
        string_val: "hard_locale"
        string_val: "dev_t"
        string_val: "hard_LC_COLLATE"
        string_val: "display_return"
        string_val: "dev_ino_buf"
        string_val: "HAVE_UTMP_H"
        string_val: "HAVE_UTMPX_H"
        string_val: "\'#\'"
        string_val: "human_readable"
        string_val: "get_entry"
        string_val: "NOT_AN_INODE_NUMBER"
        string_val: "qmark_funny_chars"
        string_val: "thispend"
        string_val: "sigaction"
        string_val: "gobble_file"
        string_val: "gmp_printf"
        string_val: "saved_errno"
        string_val: "lr_93"
        string_val: "color_always"
        string_val: "lr_94"
        string_val: "context"
        string_val: "print_formatted"
        string_val: "file_type"
        string_val: "touch"
        string_val: "kibibytes_specified"
        string_val: "MST[EQ$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "IS_ABSOLUTE_FILE_NAME"
        string_val: "return;"
        string_val: "defined"
        string_val: "print_scontext"
        string_val: "inval_ignore"
        string_val: "human_ceiling"
        string_val: "SSIZE_MAX"
        string_val: "DEC_BLOCKSIZE"
        string_val: "eolchar"
        string_val: "grp"
        string_val: "FTS_SKIP"
        string_val: "end_ptr"
        string_val: "lop"
        string_val: "hip"
        string_val: "oflags"
        string_val: "userspec"
        string_val: "rm_rup"
        string_val: "rm_rdn"
        string_val: "UINT_MAX"
        string_val: "scale_to"
        string_val: "ref_fd"
        string_val: "decimal_point"
        string_val: "next"
        string_val: "format_needs_stat"
        string_val: "format_int"
        string_val: "time_t"
        string_val: "physmem_available"
        string_val: "memcmp2"
        string_val: "fileno"
        string_val: "changed"
        string_val: "show_local_fs"
        string_val: "FTS_DEFER_STAT"
        string_val: "lr_45"
        string_val: "emit_mandatory_arg_note"
        string_val: "describe_change"
        string_val: "canonicalize_filename_mode"
        string_val: "umaxtostr"
        string_val: "print_direc"
        string_val: "just_echo;"
        string_val: "amtime_now"
        string_val: "SIG_IGN"
        string_val: "DIGEST_TYPE_STRING"
        string_val: "tabsize"
        string_val: "print_words"
        string_val: "n_improperly_formatted_lines"
        string_val: "clear_files"
        string_val: "n_groups"
        string_val: "V_high"
        string_val: "fs_name"
        string_val: "empty_filler"
        string_val: "EINVAL"
        string_val: "st_gid"
        string_val: "n_gids_allocated"
        string_val: "file_end"
        string_val: "classify"
        string_val: "EPERM"
        string_val: "fd_reopen"
        string_val: "decode_switches"
        string_val: "EISDIR"
        string_val: "UT_TYPE_BOOT_TIME"
        string_val: "UT_TIME_MEMBER"
        string_val: "readlinebuffer"
        string_val: "MST[PADD$P1$@2$!PRIGHTINC$P1$]MSP[]"
        string_val: "INT_MIN"
        string_val: "argv_iter_done:"
        string_val: "MST[PADD$P1$@2$!PLEFTDEC$P1$]MSP[]"
        string_val: "*descriptors"
        string_val: "(int)"
        string_val: "use_ref"
        string_val: "mkfifo"
        string_val: "S_IFIFO"
        string_val: "v"
        string_val: "print_lines"
        string_val: "lstat"
        string_val: "fs_exclude_list"
        string_val: "\'6\'"
        string_val: "\'5\'"
        string_val: "\'4\'"
        string_val: "MST[EQ$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "ignore_interrupts"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "stdin_only"
        string_val: "process_path"
        string_val: "dirname_quoting_options"
        string_val: "argv_iter_init_argv"
        string_val: "[]"
        string_val: "MIGHT_BE_J1_ARG"
        string_val: "fts_cwd_fd"
        string_val: "\'R\'"
        string_val: "one_per_line"
        string_val: "MST[PADD$P1$@2$!PLEFTINC$P1$]MSP[]"
        string_val: "\'Z\'"
        string_val: "\'B\'"
        string_val: "print_type"
        string_val: "lr_107"
        string_val: "inval_abort"
        string_val: "c_strtod"
        string_val: "quotearg"
        string_val: "READ_UTMP_CHECK_PIDS"
        string_val: "validate_file_name"
        string_val: "print_group_list"
        string_val: "no_leading_hyphen"
        string_val: "lr_33"
        string_val: "lchmod"
        string_val: "getgid"
        string_val: "getegid"
        string_val: "S_ISLNK"
        string_val: "EOVERFLOW"
        string_val: "suf"
        string_val: "is_colored"
        string_val: "get_stat_mtime"
        string_val: "dev_ino"
        string_val: "chown_files"
        string_val: "ROOT_DEV_INO_WARN"
        string_val: "ROOT_DEV_INO_CHECK"
        string_val: "ref_context"
        string_val: "lr_40"
        string_val: "link"
        string_val: "MST[PADD$P1$@2$!PRIGHTDEC$P1$]MSP[]"
        string_val: "/="
        string_val: "tty"
        string_val: "skip_fields"
        string_val: "dev_ino_free"
        string_val: "MST[EQ$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "ignore_value"
        string_val: "suppress_file_err"
        string_val: "posixtime"
        string_val: "escape"
        string_val: "7"
        string_val: "number_width"
        string_val: "clone_quoting_options"
        string_val: "SAME_INODE"
        string_val: "change_file_owner"
        string_val: "add_file_name"
        string_val: "x"
        string_val: "sort_size"
        string_val: "chmodat"
        string_val: "add_field_list"
        string_val: "DEREF_UNDEFINED"
        string_val: "posix_prefix"
        string_val: "print_dir_name"
        string_val: "linebuffer"
        string_val: "MST[EQ$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "sb"
        string_val: "print_factors"
        string_val: "decode_output_arg"
        string_val: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR"
        string_val: "__GLIBC__"
        string_val: "min_digest_line_length"
        string_val: "MST[EQ$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[EQ$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "free_spareline"
        string_val: "charlen"
        string_val: "block_mode"
        string_val: "MST[EQ$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[EQ$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "min"
        string_val: "max_line_length"
        string_val: "SIG_DFL"
        string_val: "total_words"
        string_val: "total_lines"
        string_val: "total_chars"
        string_val: "TAG_OPTION"
        string_val: "STRICT_OPTION"
        string_val: "MST[SUB$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MIN_DIGEST_LINE_LENGTH"
        string_val: "DIGEST_HEX_BYTES"
        string_val: "silent"
        string_val: "sigismember"
        string_val: "sa_handler"
        string_val: "SA_NOCLDSTOP"
        string_val: "MST[SUB$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "uname"
        string_val: "sysname"
        string_val: "nodename"
        string_val: "deprecated_t_option"
        string_val: "MST[EQ$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!OPERAND$V1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!NEG$@1$]MSP[]"
        string_val: "0xffffffff"
        string_val: "list_entries_users"
        string_val: "do_stdin"
        string_val: "MST[ADD$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "last_component"
        string_val: "add_ignore_pattern"
        string_val: "HAVE_PROC_UPTIME"
        string_val: "*u"
        string_val: "restorecon"
        string_val: "fts_number"
        string_val: "MST[SUB$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "process_files"
        string_val: "pathconf"
        string_val: "execvp"
        string_val: "arch_long_options"
        string_val: "UNAME_ARCH"
        string_val: "EXIT_ENOENT"
        string_val: "EXIT_CANNOT_INVOKE"
        string_val: "ARCH_AUTHORS"
        string_val: "skip_file"
        string_val: "dot"
        string_val: "MST[NEQ$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!NEG$@2$]MSP[]"
        string_val: "xmalloc"
        string_val: "getuid"
        string_val: "dev_ino_obstack"
        string_val: "MST[NEQ$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "DEFAULT_ECHO_TO_XPG"
        string_val: "print_chars"
        string_val: "nl_langinfo"
        string_val: "default_template"
        string_val: "b"
        string_val: "MST[SUB$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!ABS$@1$]MSP[]"
        string_val: "\'G\'"
        string_val: "xstrdup"
        string_val: "valid_date"
        string_val: "utmp_buf"
        string_val: "dev_ino_hash"
        string_val: "dev_ino_compare"
        string_val: "MST[ASSIGN$V1$@2$!LE$@2$V1$]MSP[]"
        string_val: "time_args"
        string_val: "print_linelength"
        string_val: "hash_initialize"
        string_val: "dev_debug"
        string_val: "TIME_OPTION"
        string_val: "INITIAL_TABLE_SIZE"
        string_val: "time"
        string_val: "n_users"
        string_val: "create_directory"
        string_val: "REFERENCE_FILE_OPTION"
        string_val: "PRESERVE_ROOT"
        string_val: "NOCHECK_ORDER_OPTION"
        string_val: "CHECK_ORDER_OPTION"
        string_val: "umask"
        string_val: "freecon"
        string_val: "dir_name"
        string_val: "alloc_field"
        string_val: "DEV_DEBUG_OPTION"
        string_val: "line_chars_allocated"
        string_val: "cwd_n_alloc"
        string_val: "mknod"
        string_val: "MST[ADD$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "#ifdef"
        string_val: "mbstate_t"
        string_val: "writeline"
        string_val: "sort_none"
        string_val: "print_pairables"
        string_val: "VERSION"
        string_val: "MST[SUB$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "set_datestr"
        string_val: "MST[SUB$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "mbrlen"
        string_val: "human_SI"
        string_val: "fileinfo"
        string_val: "dir_len"
        string_val: "can_fname2"
        string_val: "MST[SUB$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[SUB$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[SUB$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[SUB$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[ADD$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "print_grand_total"
        string_val: "only_file_2"
        string_val: "setuid"
        string_val: "setgid"
        string_val: "fs_type_list"
        string_val: "fs_next"
        string_val: "bin_buffer_unaligned"
        string_val: "MST[SUB$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "DIGEST_ALIGN"
        string_val: "print_table"
        string_val: "MST[SUB$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "AT_FDCWD"
        string_val: "only_file_1"
        string_val: "need_dir"
        string_val: "MST[NEQ$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "ARRAY_CARDINALITY"
        string_val: "strto2uintmax"
        string_val: "queue_directory"
        string_val: "sort_files"
        string_val: "both"
        string_val: "NAME_MAX_MINIMUM"
        string_val: "lr_108"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTINC$P1$]MSP[]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTDEC$P1$]MSP[]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTINC$P1$]MSP[]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[]"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[]"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_ADD$A1$@2$]MSP[]"
        string_val: "MST[EQ$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "DIGEST_STREAM"
        string_val: "SUFFIX_OPTION"
        string_val: "MAX"
        string_val: "DEREF_NEVER"
        string_val: "0x03"
        string_val: "tee_files"
        string_val: "siginterrupt"
        string_val: "print_factors_single"
        string_val: "posix2_version"
        string_val: "mpz_clear"
        string_val: "DIRED_PUTCHAR"
        string_val: "200112"
        string_val: "print_current_files"
        string_val: "parse_len"
        string_val: "get_quoting_style"
        string_val: "max_idx"
        string_val: "inval_warn"
        string_val: "fdutimensat"
        string_val: "extract_dirs_from_files"
        string_val: "V_changes_only"
        string_val: "EXIT_CONVERSION_WARNINGS"
        string_val: "AT_SYMLINK_NOFOLLOW"
        string_val: "\'I\'"
        string_val: "uname_long_options"
        string_val: "mp_factor_clear"
        string_val: "freeline"
        string_val: "a"
        string_val: "QUIET_OPTION"
        string_val: "sync"
        string_val: "quoting_style_args"
        string_val: "MIN_COLUMN_WIDTH"
        string_val: "xfields"
        string_val: "line_no"
        string_val: "q_style"
        string_val: "getpwuid"
        string_val: "alg"
        string_val: "xstrtol"
        string_val: "sorted_file"
        string_val: "read"
        string_val: "component_start"
        string_val: "EINTR"
        string_val: "MST[ASSIGN$V1$@2$!LT$@2$V1$]MSP[]"
        string_val: "xstrtol_fatal"
        string_val: "sa_mask"
        string_val: "sa_flags"
        string_val: "prog_fprintf"
        string_val: "SA_RESTART"
        string_val: "mount_list"
        string_val: "lr_103"
        string_val: "SI_PLATFORM"
        string_val: "\'k\'"
        string_val: "initialize_exit_failure"
        string_val: "spareline"
        string_val: "show_date"
        string_val: "quoting_style_vals"
        string_val: "quotearg_colon"
        string_val: "hide"
        string_val: "MST[ASSIGN$V1$@2$!ABS$V1$]MSP[]"
        string_val: "num_processors"
        string_val: "nfactors"
        string_val: "field_data_t"
        string_val: "alloc_table_row"
        string_val: "MST[ADD$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "BUFLEN"
        string_val: "lba"
        string_val: "SWAPLINES"
        string_val: "reset_line"
        string_val: "res"
        string_val: "init_linep"
        string_val: "MST[AND$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "seconds"
        string_val: "readlinebuffer_delim"
        string_val: "do_ftruncate"
        string_val: "MST[BITAND$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[AND$@1$@2$!OR$@1$@2$]MSP[]"
        string_val: "MST[AND$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "ALG_SQUFOF"
        string_val: "X2NREALLOC"
        string_val: "S_IFBLK"
        string_val: "MST[LT$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "#ifndef"
        string_val: "xstrtod"
        string_val: "time_masks"
        string_val: "_IOLBF"
        string_val: "MST[LT$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "\'<\'"
        string_val: "setup_padding_buffer"
        string_val: "gid_to_name"
        string_val: "get_root_dev_ino"
        string_val: "free_ent"
        string_val: "MST[LT$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "EXIT_STATUS"
        string_val: "set_additional_groups"
        string_val: "make_ancestor_function"
        string_val: "gr_gid"
        string_val: "MST[LT$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[LT$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[LT$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "pw_gid"
        string_val: "getgrnam"
        string_val: "format_sp_int"
        string_val: "color_types"
        string_val: "color_if_tty"
        string_val: "color_args"
        string_val: "auto_padding"
        string_val: "COLOR_OPTION"
        string_val: "optc_to_fileno"
        string_val: "new_perms"
        string_val: "naively_expected_perms"
        string_val: "lr_106"
        string_val: "interrupt_signal"
        string_val: "THOUSEP"
        string_val: "NODEV"
        string_val: "MST[LT$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "ENC_B64BLOCKSIZE"
        string_val: "stop_signal_count"
        string_val: "setfscreatecon"
        string_val: "MST[LT$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "short_options"
        string_val: "refstats"
        string_val: "MST[LT$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[EQ$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "80"
        string_val: "smack_set_label_for_self"
        string_val: "MST[LT$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "\'T\'"
        string_val: "append"
        string_val: "SIGSTOP"
        string_val: "subdired_obstack"
        string_val: "apply_suffix"
        string_val: "dired_obstack"
        string_val: "MST[BITAND$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[AND$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "xcharalloc"
        string_val: "locale_time_style"
        string_val: "iso_time_style"
        string_val: "decode"
        string_val: "component_len"
        string_val: "\'\\v\'"
        string_val: "prepare_padded_number"
        string_val: "sigaddset"
        string_val: "pw_name"
        string_val: "posixly_correct"
        string_val: "none"
        string_val: "memset"
        string_val: "ai_err"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MIGHT_BE_J2_ARG"
        string_val: "\'D\'"
        string_val: "\'C\'"
        string_val: "*stats"
        string_val: "stdout_closed"
        string_val: "not_an_escape;"
        string_val: "lr_88"
        string_val: "close_stream"
        string_val: "utsname"
        string_val: "settime"
        string_val: "set_libstdbuf_options"
        string_val: "chopt_free"
        string_val: "MST[LT$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "\'9\'"
        string_val: "\'8\'"
        string_val: "mpz_init_set_str"
        string_val: "mp_factor"
        string_val: "mode_string"
        string_val: "count_consecutive_X_s"
        string_val: "chdir"
        string_val: "_GL_ATTRIBUTE_PURE"
        string_val: "SIGINT"
        string_val: "MST[LT$@1$@2$!ABS$@1$]MSP[]"
        string_val: "tm_mon"
        string_val: "require_sync"
        string_val: "chroot"
        string_val: "\':\'"
        string_val: "tm_year"
        string_val: "tm_sec"
        string_val: "tm_min"
        string_val: "tm_mday"
        string_val: "tm_hour"
        string_val: "save_argc"
        string_val: "passwd"
        string_val: "getgrgid"
        string_val: "dired_dump_obstack"
        string_val: "OFF_T_MAX"
        string_val: "MST[LT$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "1900L"
        string_val: "12"
        string_val: "parse_user_spec"
        string_val: "just_echo:"
        string_val: "c_isspace"
        string_val: "MST[SUB$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "argv_iter_done;"
        string_val: "OFF_T_MIN"
        string_val: "EBADF"
        string_val: "MST[LT$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "Chown_option"
        string_val: "remove_parents"
        string_val: "is_selinux_enabled"
        string_val: "group"
        string_val: "found"
        string_val: "directory"
        string_val: "directories_first"
        string_val: "print_unpairables_2"
        string_val: "print_unpairables_1"
        string_val: "ignore_fail_on_non_empty"
        string_val: "cwd_file"
        string_val: "_POSIX_PATH_MAX"
        string_val: "POSIX_MODE"
        string_val: "PATH_MAX_MINIMUM"
        string_val: "MST[LT$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[AND$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "restore_default_color"
        string_val: "print_inode"
        string_val: "parse_group"
        string_val: "MST[LT$@1$@2$!NEG$@1$]MSP[]"
        string_val: "HUMAN_MODE"
        string_val: "xstrtoimax"
        string_val: "MST[SUB$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "fflush"
        string_val: "caption"
        string_val: "DEFAULT_MODE"
        string_val: "*cwd_file"
        string_val: "split_3"
        string_val: "lr_99"
        string_val: "hex_digits"
        string_val: "add_excluded_fs_type"
        string_val: "MST[LT$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "DEBUG_OPTION"
        string_val: "process_dir"
        string_val: "getloadavg"
        string_val: "getfilecon"
        string_val: "OUTPUT_OPTION"
        string_val: "MST[NEQ$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "IGNORE_DEFAULT"
        string_val: "\',\'"
        string_val: "warning"
        string_val: "strrchr"
        string_val: "sort_version"
        string_val: "numeric_ids"
        string_val: "do_decode"
        string_val: "batch_convert"
        string_val: "_PC_NAME_MAX"
        string_val: "length_buf"
        string_val: "\'\\\'\'"
        string_val: "process_suffixed_number"
        string_val: "nextarg"
        string_val: "lr_91"
        string_val: "lr_90"
        string_val: "hide_patterns"
        string_val: "geteuid"
        string_val: "MST[LT$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!NEQ$V1$@2$]MSP[]"
        string_val: "ptr_align"
        string_val: "minor_t"
        string_val: "major_t"
        string_val: "__GLIBC_MINOR__"
        string_val: "X2REALLOC"
        string_val: ">>="
        string_val: "suffix_char"
        string_val: "q_freq"
        string_val: "base64_decode_ctx"
        string_val: "MST[EQ$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "IGNORE_FAIL_ON_NON_EMPTY_OPTION"
        string_val: "setgroups"
        string_val: "context_t"
        string_val: "TIOCGWINSZ"
        string_val: "NPROC_ALL"
        string_val: "MST[SUB$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[LT$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "ALL_OPTION"
        string_val: "sysv_sum_file"
        string_val: "sort_reverse"
        string_val: "lr_89"
        string_val: "lr_102"
        string_val: "bsd_sum_file"
        string_val: "TOTAL_OPTION"
        string_val: "MST[SUB$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[SUB$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[SUB$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[SUB$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[SUB$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[SUB$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[SUB$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "current_time"
        string_val: "MST[LT$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "LOOP_DETECT"
        string_val: "safe_read"
        string_val: "fts_level"
        string_val: "SAFE_READ_ERROR"
        string_val: "PORTABILITY_OPTION"
        string_val: "MST[SUB$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "FTS_NS"
        string_val: "FTS_AGAIN"
        string_val: "print_esc"
        string_val: "mode_compile"
        string_val: "logical_getcwd"
        string_val: "context_free"
        string_val: "MST[SUB$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[SUB$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "AI_ERR_MEM"
        string_val: "userid_compare"
        string_val: "human_base_1024"
        string_val: "MST[SUB$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "qsort"
        string_val: "extract_trimmed_name"
        string_val: "UNAME_UNAME"
        string_val: "ignorable_failure"
        string_val: "extern"
        string_val: "do_encode"
        string_val: "compute_number_width"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "ioctl"
        string_val: "autoformat"
        string_val: "MST[SUB$@1$@2$!TRAPSTMT]MSP[]"
        string_val: "MST[NEQ$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!LT$V1$@2$]MSP[]"
        string_val: "_round"
        string_val: "N_"
        string_val: "MST[SUB$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "strip_trailing_slashes"
        string_val: "round_types"
        string_val: "round_args"
        string_val: "rfc_2822_format"
        string_val: "lr_96"
        string_val: "UTIME_NOW"
        string_val: "TYPE_MAXIMUM"
        string_val: "PADDING_OPTION"
        string_val: "MST[SUB$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!ABS$@2$]MSP[]"
        string_val: "GROUPING_OPTION"
        string_val: "Change_status"
        string_val: "CH_SUCCEEDED"
        string_val: "CH_NO_CHANGE_REQUESTED"
        string_val: "CH_NOT_APPLIED"
        string_val: "CH_FAILED"
        string_val: "security_context_t"
        string_val: "nomoreargs"
        string_val: "HEADER_OPTION"
        string_val: "ttyname"
        string_val: "mode_create_from_ref"
        string_val: "get_stat_atime"
        string_val: "endgrent"
        string_val: "created_directory_format"
        string_val: "_PC_PATH_MAX"
        string_val: "TTY_FAILURE"
        string_val: "MST[SUB$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MAXGID"
        string_val: "GID_T_MAX"
        string_val: "print_padded_number"
        string_val: "portable_chars_only"
        string_val: "parse_size"
        string_val: "get_input_fstatus"
        string_val: "mode_changed"
        string_val: "mode_change"
        string_val: "lseek"
        string_val: "argv_iter_err"
        string_val: "_POSIX_NAME_MAX"
        string_val: "type"
        string_val: "l"
        string_val: "di"
        string_val: "SEEK_END"
        string_val: "EXPR_INVALID"
        string_val: "\'g\'"
        string_val: "savewd_process_files"
        string_val: "no_more_flag_characters;"
        string_val: "no_more_flag_characters:"
        string_val: "mode_bits"
        string_val: "MST[PDEREF_ADD$A1$@2$!PSUB_DEREF$A1$@2$]MSP[]"
        string_val: "MST[PDEREF_ADD$A1$@2$!PADD_DEREF$A1$@2$]MSP[]"
        string_val: "MST[LT$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "LONGEST_HUMAN_READABLE"
        string_val: "rmdir"
        string_val: "long_opts"
        string_val: "grand_fsu"
        string_val: "fprintftime"
        string_val: "chopt_init"
        string_val: "VALUE"
        string_val: "USERSPEC"
        string_val: "GROUPS"
        string_val: "257"
        string_val: "color_symlink_as_referent"
        string_val: "check_symlink_color"
        string_val: "MST[LT$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "C_EXEC"
        string_val: "sysinfo"
        string_val: "print_esc_string"
        string_val: "fts_errno"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "HAVE_SYSINFO"
        string_val: "C_MISSING"
        string_val: "stophandler"
        string_val: "program_path"
        string_val: "print_author"
        string_val: "me"
        string_val: "eval"
        string_val: "_field"
        string_val: "HOST_OPERATING_SYSTEM"
        string_val: "FSTYPE_FIELD"
        string_val: "*="
        string_val: "tcgetpgrp"
        string_val: "sighandler"
        string_val: "sigemptyset"
        string_val: "ignorable_ctx_err"
        string_val: "abort"
        string_val: "SIGTSTP"
        string_val: "MST[LT$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "IGNORE_DOT_AND_DOTDOT"
        string_val: "FORMAT_OPTION"
        string_val: "remove_suffix"
        string_val: "parse_format_string"
        string_val: "padding_alignment"
        string_val: "file_systems_processed"
        string_val: "MBS_ALIGN_LEFT"
        string_val: "\'U\'"
        string_val: "y"
        string_val: "time_style_args"
        string_val: "sort_extension"
        string_val: "pw_uid"
        string_val: "lr_105"
        string_val: "lr_104"
        string_val: "getpwnam"
        string_val: "base_name"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[LE$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "IS_RELATIVE_FILE_NAME"
        string_val: "HIDE_OPTION"
        string_val: "FILE_SYSTEM_PREFIX_LEN"
        string_val: "AUTHOR_OPTION"
        string_val: "100"
        string_val: "write_counts"
        string_val: "get_line"
        string_val: "free_pending_ent"
        string_val: "MST[LE$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[LE$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[ADD$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "lr_97"
        string_val: "lr_87"
        string_val: "format_needs_type"
        string_val: "MST[LE$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "FIELD_OPTION"
        string_val: "\'>\'"
        string_val: "rm_min"
        string_val: "rm_max"
        string_val: "read_file_system_list"
        string_val: "fts_statp"
        string_val: "MST[ASSIGN$V1$@2$!MOD$@2$V1$]MSP[]"
        string_val: "DIGEST_BIN_BYTES"
        string_val: "time_style_types"
        string_val: "strmode"
        string_val: "fmt"
        string_val: "WTMP_FILE"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "realpath_canon"
        string_val: "n0"
        string_val: "makedev"
        string_val: "initbuffer"
        string_val: "indicator_style_types"
        string_val: "indicator_style_args"
        string_val: "context_new"
        string_val: "QUOTING_STYLE_OPTION"
        string_val: "MST[OR$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "INDICATOR_STYLE_OPTION"
        string_val: "ls_mode"
        string_val: "MST[OR$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[OR$@1$@2$!AND$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "LS_MULTI_COL"
        string_val: "unit_to_umax"
        string_val: "putenv"
        string_val: "fts_info"
        string_val: "file_size_width"
        string_val: "MST[LE$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "FTS_DP"
        string_val: "DATE_FMT_LANGINFO"
        string_val: "#"
        string_val: "mpz_t"
        string_val: "lr_98"
        string_val: "lines"
        string_val: "UCHAR_MAX"
        string_val: "MST[SUB$@1$@2$!DELSTMT]MSP[]"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "INT_BUFSIZE_BOUND"
        string_val: "xgetgroups"
        string_val: "scontext_width"
        string_val: "readtokens0_free"
        string_val: "minor_device_number_width"
        string_val: "major_device_number_width"
        string_val: "inode_number_width"
        string_val: "command_line_arg"
        string_val: "caught_sig"
        string_val: "block_size_width"
        string_val: "argv_iter_free"
        string_val: "TZSET"
        string_val: "PDS_TRAILING_YEAR"
        string_val: "OUTPUT_DELIMITER_OPTION"
        string_val: "MST[LE$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "argv_iterator"
        string_val: "MST[LE$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[EQ$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITAND$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "LC_COLLATE"
        string_val: "padding_buffer"
        string_val: "owner_width"
        string_val: "nlink_width"
        string_val: "group_width"
        string_val: "gettime"
        string_val: "author_width"
        string_val: "FILES0_FROM_OPTION"
        string_val: "time_spec_string"
        string_val: "time_spec"
        string_val: "n1"
        string_val: "iso_8601_format"
        string_val: "format_str_suffix"
        string_val: "format_str_prefix"
        string_val: "file_number"
        string_val: "any_has_acl"
        string_val: "MST[OR$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "LS_LS"
        string_val: "LS_LONG_FORMAT"
        string_val: "\'\\t\'"
        string_val: "specified_type"
        string_val: "specified_role"
        string_val: "specified_range"
        string_val: "maybe_close_stdout"
        string_val: "hash_get_n_entries"
        string_val: "hash_free"
        string_val: "bytes"
        string_val: "MST[ASSIGN$V1$@2$!GE$V1$@2$]MSP[]"
        string_val: "\'\\r\'"
        string_val: "\'\\f\'"
        string_val: "with_commas"
        string_val: "rc"
        string_val: "count"
        string_val: "candidate"
        string_val: "MST[LE$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "\'V\'"
        string_val: "print_owner"
        string_val: "join_header_lines"
        string_val: "MST[LE$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "mib"
        string_val: "endif"
        string_val: "PDS_SECONDS"
        string_val: "PDS_CENTURY"
        string_val: "MST[SUB$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!EQ$V1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "HEADER_LINE_OPTION"
        string_val: "\'\\x1B\'"
        string_val: "sysctl"
        string_val: "nsize"
        string_val: "mkdir_options"
        string_val: "get_header"
        string_val: "get_field_list"
        string_val: "flag_prove_primality"
        string_val: "STRNCMP_LIT"
        string_val: "time_mtime"
        string_val: "lr_109"
        string_val: "fxn"
        string_val: "decimal_point_length"
        string_val: "cputype"
        string_val: "MST[BITOR$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "FILE_TYPE_INDICATOR_OPTION"
        string_val: "sort_name"
        string_val: "rm_rel"
        string_val: "perms"
        string_val: "lr_92"
        string_val: "linelength"
        string_val: "MST[SUB$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "tcon"
        string_val: "quit;"
        string_val: "fts_accpath"
        string_val: "TIME_STYLE_OPTION"
        string_val: "SHOW_CONTROL_CHARS_OPTION"
        string_val: "RADIXCHAR"
        string_val: "MST[BITOR$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!ABS$@1$]MSP[]"
        string_val: "CHMOD_MODE_BITS"
        string_val: "BLOCK_SIZE_OPTION"
        string_val: "11"
        string_val: "join"
        string_val: "int)"
        string_val: "STAT_SQUFOF"
        string_val: "RELATIVE_TO_OPTION"
        string_val: "RELATIVE_BASE_OPTION"
        string_val: "MST[ASSIGN$V1$@2$!GE$@2$V1$]MSP[]"
        string_val: "C_ORPHAN"
        string_val: "(unsigned"
        string_val: "usable_st_size"
        string_val: "path_prefix"
        string_val: "one"
        string_val: "STREQ_LEN"
        string_val: "MST[LE$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "CPU_TYPE_POWERPC"
        string_val: "CPU_SUBTYPE_MULTIPLE"
        string_val: "ARGMATCH"
        string_val: "words"
        string_val: "s_len"
        string_val: "readtokens0_init"
        string_val: "readtokens0"
        string_val: "parse_ls_color"
        string_val: "fsu_blocksize"
        string_val: "SI_OPTION"
        string_val: "14"
        string_val: "13"
        string_val: "announce_mkdir"
        string_val: "TYPE_MINIMUM"
        string_val: "MST[LE$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[LE$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "realname"
        string_val: "compare_files"
        string_val: "chars"
        string_val: "TIME_SPEC_DATE"
        string_val: "MST[SUB$@1$@2$!ABS$@2$]MSP[]"
        string_val: "time_types"
        string_val: "set_LD_PRELOAD"
        string_val: "format_types"
        string_val: "format_args"
        string_val: "cell"
        string_val: "abmon_init"
        string_val: "__linux__"
        string_val: "_GL_UNUSED"
        string_val: "P"
        string_val: "MST[LE$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!NEG$@2$]MSP[]"
        string_val: "IGNORE_OPTION"
        string_val: "GROUP_DIRECTORIES_FIRST_OPTION"
        string_val: "FULL_TIME_OPTION"
        string_val: "ENOTDIR"
        string_val: "DEREF_COMMAND_LINE_ARGUMENTS"
        string_val: "DEREF_ALWAYS"
        string_val: "ni"
        string_val: "isdir"
        string_val: "gen_tempname_len"
        string_val: "dcgettext"
        string_val: "MST[OR$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[LE$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[EQ$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "GT_NOCREATE"
        string_val: "\'N\'"
        string_val: "xnanosleep"
        string_val: "strtok"
        string_val: "state"
        string_val: "specified_user"
        string_val: "scon"
        string_val: "pattern"
        string_val: "col"
        string_val: "b0"
        string_val: "_exit"
        string_val: "MST[LE$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[LE$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "GT_DIR"
        string_val: "DEREFERENCE_COMMAND_LINE_SYMLINK_TO_DIR_OPTION"
        string_val: "ignore_pattern"
        string_val: "evaluate"
        string_val: "error_number"
        string_val: "MST[LE$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "5"
        string_val: "32"
        string_val: "used_color"
        string_val: "block_or_character;"
        string_val: "argmatch_invalid"
        string_val: "S_IFCHR"
        string_val: "MST[SUB$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "z"
        string_val: "r1"
        string_val: "dev_ino_pop"
        string_val: "a0"
        string_val: "MST[PSUB$A1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "tcontext"
        string_val: "stat_ok"
        string_val: "sort_types"
        string_val: "sort_args"
        string_val: "seq"
        string_val: "print_dir"
        string_val: "nm1"
        string_val: "make_ancestor"
        string_val: "hash_delete"
        string_val: "S_IFDIR"
        string_val: "SORT_OPTION"
        string_val: "MST[GT$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "*hide"
        string_val: "rfc_3339_format"
        string_val: "long_iso_time_style"
        string_val: "full_iso_time_style"
        string_val: "Time_spec"
        string_val: "MST[LE$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "to_unit_size"
        string_val: "st_uid"
        string_val: "seq2"
        string_val: "seq1"
        string_val: "ptrdiff_t"
        string_val: "mkdir_errno"
        string_val: "from_unit_size"
        string_val: "argmatch"
        string_val: "add_fs_type"
        string_val: "SOURCE_FIELD"
        string_val: "MST[MUL$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[LE$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!ABS$@2$]MSP[]"
        string_val: "rel_mode_t"
        string_val: "r0"
        string_val: "pos"
        string_val: "m"
        string_val: "get_dev"
        string_val: "endptr"
        string_val: "SYNC_OPTION"
        string_val: "NO_SYNC_OPTION"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "BUFSIZ"
        string_val: "scale_to_types"
        string_val: "scale_to_args"
        string_val: "scale_from_types"
        string_val: "scale_from_args"
        string_val: "lr_95"
        string_val: "lr_101"
        string_val: "lr_100"
        string_val: "inval_types"
        string_val: "inval_args"
        string_val: "ignore_patterns"
        string_val: "extract_fields"
        string_val: "bv"
        string_val: "TO_UNIT_OPTION"
        string_val: "TO_OPTION"
        string_val: "ROUND_OPTION"
        string_val: "MST[MUL$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!LE$V1$@2$]MSP[]"
        string_val: "INVALID_OPTION"
        string_val: "FROM_UNIT_OPTION"
        string_val: "\'S\'"
        string_val: "\'Q\'"
        string_val: "%"
        string_val: "literal_quoting_style"
        string_val: "file_name_free"
        string_val: "ext"
        string_val: "diff"
        string_val: "dest"
        string_val: "c_quoting_style"
        string_val: "Q"
        string_val: "MST[PLEFTINC$P1$!PLEFTDEC$P1$]MSP[]"
        string_val: "MST[LE$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[EQ$@1$@2$!NEG$@2$]MSP[]"
        string_val: "parse_datetime"
        string_val: "mp_factors"
        string_val: "constr"
        string_val: "MST[LE$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[EQ$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[EQ$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "LD_PRELOAD"
        string_val: "user"
        string_val: "use_name"
        string_val: "get_all_entries"
        string_val: "file_name_concat"
        string_val: "emit_cycle_warning"
        string_val: "cycle_warning_required"
        string_val: "best_match"
        string_val: "b1"
        string_val: "MST[GT$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "FTS_DC"
        string_val: "spec"
        string_val: "r1m"
        string_val: "old_libs"
        string_val: "n_tok"
        string_val: "mkdtemp_len"
        string_val: "crc_remainder"
        string_val: "argv_iter_init_stream"
        string_val: "MST[LE$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[LE$@1$@2$!NEG$@2$]MSP[]"
        string_val: "FTS_DNR"
        string_val: "CAN_ALL_BUT_LAST"
        string_val: "xgetcwd"
        string_val: "relpath"
        string_val: "make_dir_parents"
        string_val: "inline"
        string_val: "ignore_case"
        string_val: "filesno"
        string_val: "a1"
        string_val: "MST[PSUB$P1$@2$!PRIGHTINC$P1$]MSP[]"
        string_val: "MST[PSUB$P1$@2$!PLEFTINC$P1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "vstrtoumax"
        string_val: "st_dev"
        string_val: "ssize"
        string_val: "savewd"
        string_val: "pending"
        string_val: "oldset"
        string_val: "iv"
        string_val: "is_prime"
        string_val: "input_filename"
        string_val: "in_stream"
        string_val: "gr_name"
        string_val: "fsp"
        string_val: "\\"
        string_val: "STDERR_FILENO"
        string_val: "MST[PSUB$P1$@2$!PRIGHTDEC$P1$]MSP[]"
        string_val: "MST[PSUB$P1$@2$!PLEFTDEC$P1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "FTS_ERR"
        string_val: "y1"
        string_val: "y0"
        string_val: "tokenbuffer"
        string_val: "sigprocmask"
        string_val: "rm_abs"
        string_val: "remove"
        string_val: "lint"
        string_val: "freev"
        string_val: "devlist"
        string_val: "algo_name_len"
        string_val: "PRIdMAX"
        string_val: "MST[GT$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITOR$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!GT$@2$V1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!BITNOT$V1$]MSP[]"
        string_val: "FTS_SLNONE"
        string_val: "nproc_query"
        string_val: "lr_46"
        string_val: "linkname"
        string_val: "linepos"
        string_val: "horizontal"
        string_val: "gidtostr"
        string_val: "column_info"
        string_val: "TTY_WRITE_ERROR"
        string_val: "SIG_SETMASK"
        string_val: "NPROC_CURRENT_OVERRIDABLE"
        string_val: "MST[BITOR$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[ADD$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "EXPR_FAILURE"
        string_val: "0.0"
        string_val: "x1"
        string_val: "x0"
        string_val: "src"
        string_val: "print_uptime"
        string_val: "np"
        string_val: "filetype"
        string_val: "MST[BITOR$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!NEG$@2$]MSP[]"
        string_val: "HAVE_GMP"
        string_val: "timetostr"
        string_val: "quit:"
        string_val: "indicator_name"
        string_val: "escaped_filename"
        string_val: "dst"
        string_val: "argv_iter"
        string_val: "RFC_3339_OPTION"
        string_val: "MST[LE$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!GT$V1$@2$]MSP[]"
        string_val: "MST[ADD$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "AI_ERR_READ"
        string_val: "AI_ERR_EOF"
        string_val: "umul_ppmm"
        string_val: "trace"
        string_val: "set_program_path"
        string_val: "power"
        string_val: "pad"
        string_val: "dot_sb"
        string_val: "dirp"
        string_val: "block_or_character:"
        string_val: "PDS_PRE_2000"
        string_val: "MST[PDEREF_SUB$A1$@2$!PSUB_DEREF$A1$@2$]MSP[]"
        string_val: "MST[PDEREF_SUB$A1$@2$!PADD_DEREF$A1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[ADD$@1$@2$!ABS$@2$]MSP[]"
        string_val: "to_write"
        string_val: "processor"
        string_val: "lsetfilecon"
        string_val: "fstype"
        string_val: "fields"
        string_val: "emit_size_note"
        string_val: "do_chown"
        string_val: "component"
        string_val: "cmp"
        string_val: "a_prim"
        string_val: "PKGLIBDIR"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_RIGHTINC$P1$]MSP[]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_RIGHTDEC$P1$]MSP[]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_LEFTINC$P1$]MSP[]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[]"
        string_val: "MST[PSUB_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[]"
        string_val: "MST[PSUB_DEREF$A1$@2$!PDEREF_ADD$A1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[DIV$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "8192"
        string_val: "row"
        string_val: "robust_getcwd"
        string_val: "printed"
        string_val: "null"
        string_val: "int_value"
        string_val: "getlogin"
        string_val: "file_name_init"
        string_val: "dirname"
        string_val: "S_IRUSR"
        string_val: "P1"
        string_val: "MST[PRIGHTINC$P1$!PLEFTINC$P1$]MSP[]"
        string_val: "MST[PRIGHTINC$P1$!PLEFTDEC$P1$]MSP[]"
        string_val: "MST[PRIGHTINC$P1$!OPERAND$P1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "vstrtold"
        string_val: "uid_to_name"
        string_val: "string_to_security_class"
        string_val: "put_indicator"
        string_val: "old_spec"
        string_val: "nfields"
        string_val: "locale_quoting_style"
        string_val: "known_value"
        string_val: "fsu"
        string_val: "absolute_name"
        string_val: "MST[NEQ$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MB_LEN_MAX"
        string_val: "var"
        string_val: "total"
        string_val: "syntax_error"
        string_val: "plarge"
        string_val: "me_mountdir"
        string_val: "list"
        string_val: "integer"
        string_val: "get_funky_string"
        string_val: "g0"
        string_val: "cols"
        string_val: "available"
        string_val: "Tokens"
        string_val: "MST[PLEFTINC$P1$!OPERAND$P1$]MSP[]"
        string_val: "MST[NEQ$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "GETGROUPS_T"
        string_val: "76"
        string_val: "(*"
        string_val: "wc"
        string_val: "uni_value"
        string_val: "st_ino"
        string_val: "sep"
        string_val: "resolved"
        string_val: "re_buffer"
        string_val: "quotearg_n_style_mem"
        string_val: "negative"
        string_val: "isblank"
        string_val: "displayed_width"
        string_val: "contype"
        string_val: "bsd_reversed"
        string_val: "ap"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[MUL$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "ISWHITE"
        string_val: "BUFFER_SIZE"
        string_val: "};"
        string_val: "uint_fast32_t"
        string_val: "simple_strtod_error"
        string_val: "scale_base"
        string_val: "s1"
        string_val: "s0"
        string_val: "prefix_len"
        string_val: "prefix"
        string_val: "output_count"
        string_val: "mu"
        string_val: "line1"
        string_val: "input_str"
        string_val: "eval6"
        string_val: "esc_length"
        string_val: "errno_rmdir_non_empty"
        string_val: "errno_may_be_empty"
        string_val: "equals_end"
        string_val: "disk"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "(sig)"
        string_val: "written"
        string_val: "when_timespec"
        string_val: "uni_blank"
        string_val: "strspn"
        string_val: "required_mon_width"
        string_val: "rem"
        string_val: "re_regs"
        string_val: "queue"
        string_val: "prime"
        string_val: "orig_st"
        string_val: "mulredc2"
        string_val: "mpz_cmp_ui"
        string_val: "mp_factor_insert"
        string_val: "modebuf"
        string_val: "lr_66"
        string_val: "lim"
        string_val: "len2"
        string_val: "is_empty_dir"
        string_val: "input_units"
        string_val: "in_word"
        string_val: "file_x"
        string_val: "fgets"
        string_val: "available_to_root"
        string_val: "S"
        string_val: "RC_error"
        string_val: "PDS_LEADING_YEAR"
        string_val: "MST[GT$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[DIV$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!ABS$@1$]MSP[]"
        string_val: "ALG_POLLARD_RHO"
        string_val: "*v"
        string_val: "\'?\'"
        string_val: "unsupported_device"
        string_val: "tostring"
        string_val: "sqrt_n"
        string_val: "prjoin"
        string_val: "printv"
        string_val: "pct"
        string_val: "nh"
        string_val: "mp_prime_p"
        string_val: "me_dummy"
        string_val: "max_cols"
        string_val: "line2"
        string_val: "len1"
        string_val: "ino"
        string_val: "g1"
        string_val: "fsize"
        string_val: "filename_unescape"
        string_val: "end"
        string_val: "e2"
        string_val: "devlist_head"
        string_val: "d1"
        string_val: "base64_decode_ctx_init"
        string_val: "base64_decode_context"
        string_val: "SSE_OK_PRECISION_LOSS"
        string_val: "PS_FAIL"
        string_val: "MST[GT$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "DIVBLOCK"
        string_val: "winsize"
        string_val: "wide_char"
        string_val: "w"
        string_val: "tclass"
        string_val: "symlink_changed"
        string_val: "stpcpy"
        string_val: "statp"
        string_val: "rsh2"
        string_val: "qpos"
        string_val: "prime_p"
        string_val: "plimit"
        string_val: "open_flags"
        string_val: "new_context"
        string_val: "new_column_info_alloc"
        string_val: "mulredc"
        string_val: "mp_factor_using_pollard_rho"
        string_val: "mount_point"
        string_val: "mbswidth"
        string_val: "linkok"
        string_val: "libstdbuf"
        string_val: "file_context"
        string_val: "factor_using_pollard_rho"
        string_val: "factor_insert"
        string_val: "col_arr"
        string_val: "binv"
        string_val: "asprintf"
        string_val: "add_ssaaaa"
        string_val: "V"
        string_val: "SSE_OK"
        string_val: "RC_do_ordinary_chown"
        string_val: "Q1"
        string_val: "MST[PLEFTINC$P1$!PRIGHTINC$P1$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[DIV$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[BITSHR$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!ABS$@2$]MSP[]"
        string_val: "EVAL_TRACE"
        string_val: "z1"
        string_val: "z0"
        string_val: "toarith"
        string_val: "text"
        string_val: "sub_ddmmss"
        string_val: "str_value"
        string_val: "s_err"
        string_val: "output_units"
        string_val: "outlist"
        string_val: "nl"
        string_val: "negate_used"
        string_val: "name_length"
        string_val: "na"
        string_val: "msgid"
        string_val: "mpz_mod"
        string_val: "mount_entry"
        string_val: "mi"
        string_val: "me_next"
        string_val: "me_dev"
        string_val: "max_name_length"
        string_val: "ind_no"
        string_val: "file_name_prepend"
        string_val: "file_failure"
        string_val: "field_values_t"
        string_val: "esc_value"
        string_val: "disk_stats"
        string_val: "dir_stat"
        string_val: "dev_name"
        string_val: "d0"
        string_val: "count_chars"
        string_val: "blocks"
        string_val: "advance_seq"
        string_val: "ST_GND"
        string_val: "SIZE_FIELD"
        string_val: "P0"
        string_val: "MST[MUL$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[MUL$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITXOR$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[BITSHR$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "\')\'"
        string_val: "vdi"
        string_val: "val_frac"
        string_val: "user_group_str"
        string_val: "timespec_cmp"
        string_val: "sv"
        string_val: "sum_func)"
        string_val: "stat_buf"
        string_val: "sp"
        string_val: "shift"
        string_val: "scale"
        string_val: "print_uintmaxes"
        string_val: "print_file_name_and_frills"
        string_val: "primes_diff"
        string_val: "point"
        string_val: "pfmt"
        string_val: "parent_height"
        string_val: "opts"
        string_val: "old_usr"
        string_val: "old_grp"
        string_val: "nth_parent"
        string_val: "nonroot_total"
        string_val: "new"
        string_val: "negate_available"
        string_val: "n_alloc"
        string_val: "mpz_set"
        string_val: "mpz_mul"
        string_val: "me_devname"
        string_val: "matchlen"
        string_val: "m1"
        string_val: "lr_68"
        string_val: "length_of_file_name_and_frills"
        string_val: "label"
        string_val: "join_field"
        string_val: "integer_overflow"
        string_val: "imaxtostr"
        string_val: "height"
        string_val: "gcd_odd"
        string_val: "from"
        string_val: "find_dir_entry"
        string_val: "file_index"
        string_val: "field_index"
        string_val: "dp"
        string_val: "cwd_fd"
        string_val: "context_string"
        string_val: "column_info_alloc"
        string_val: "cmp)"
        string_val: "change_file_context"
        string_val: "bsd_split_3"
        string_val: "best_match_len"
        string_val: "beg2"
        string_val: "beg1"
        string_val: "abmon"
        string_val: "_GL_ATTRIBUTE_CONST"
        string_val: "TARGET_FIELD"
        string_val: "S_ISCHR"
        string_val: "S_ISBLK"
        string_val: "SUPPORT_OLD_MBRTOWC"
        string_val: "SI_ARCHITECTURE"
        string_val: "RC_ok"
        string_val: "RCH_status"
        string_val: "PRIMES_PTAB_ENTRIES"
        string_val: "MST[PSUB$A1$@2$!OPERAND$A1$]MSP[]"
        string_val: "MST[MUL$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[MUL$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!GE$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!GE$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "KERN_BOOTTIME"
        string_val: "ENOTSUP"
        string_val: "ENODATA"
        string_val: "Dl"
        string_val: "Dh"
        string_val: "CTL_KERN"
        string_val: "var1"
        string_val: "val1"
        string_val: "to"
        string_val: "t2"
        string_val: "symlink_target"
        string_val: "symbolic_link"
        string_val: "suffix_pos"
        string_val: "stat_file"
        string_val: "start_col"
        string_val: "stack"
        string_val: "sprintf"
        string_val: "smallbuf"
        string_val: "primes_dtab"
        string_val: "prime2_p"
        string_val: "prfield"
        string_val: "powerld"
        string_val: "parent_sb"
        string_val: "padding_buffer_size"
        string_val: "output_separator"
        string_val: "normal"
        string_val: "mpz_sgn"
        string_val: "me_type"
        string_val: "me_remote"
        string_val: "m0"
        string_val: "line_fmt"
        string_val: "keycmp"
        string_val: "isqrt"
        string_val: "ipct"
        string_val: "idx"
        string_val: "id"
        string_val: "i2"
        string_val: "i1"
        string_val: "have_scontext"
        string_val: "has_capability"
        string_val: "force_fsu"
        string_val: "first"
        string_val: "factor_using_squfof"
        string_val: "factor_insert_large"
        string_val: "do_deref"
        string_val: "divisible_by_1024"
        string_val: "divisible_by_1000"
        string_val: "discard_me"
        string_val: "dirnamep"
        string_val: "digits"
        string_val: "dev_ino_size"
        string_val: "dest_neg"
        string_val: "count_complicated"
        string_val: "count_bytes"
        string_val: "context_str"
        string_val: "cmp_version"
        string_val: "closedir"
        string_val: "buflen"
        string_val: "buf_size"
        string_val: "bp"
        string_val: "blksize"
        string_val: "bgta"
        string_val: "arg_directory"
        string_val: "allowed_scaling"
        string_val: "alloc"
        string_val: "addmod2"
        string_val: "addmod"
        string_val: "absld"
        string_val: "USED_FIELD"
        string_val: "ST_NBLOCKSIZE"
        string_val: "SET_COMPONENT"
        string_val: "PCENT_FIELD"
        string_val: "MST[BITXOR$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "L"
        string_val: "EACCES"
        string_val: "AVAIL_FIELD"
        string_val: "##"
        string_val: "xh"
        string_val: "whichfile"
        string_val: "when_local"
        string_val: "valid_len"
        string_val: "use_strcmp"
        string_val: "use_lstat"
        string_val: "udiv_qrnnd"
        string_val: "th"
        string_val: "stops"
        string_val: "st_rdev"
        string_val: "src_neg"
        string_val: "six_months_ago"
        string_val: "simple_round_ceiling"
        string_val: "set_exit_status"
        string_val: "serious"
        string_val: "separator"
        string_val: "security_class_t"
        string_val: "rpl_fmt"
        string_val: "rh"
        string_val: "result_len"
        string_val: "restricted_chown"
        string_val: "request"
        string_val: "real_length"
        string_val: "quote_name"
        string_val: "q1"
        string_val: "q0"
        string_val: "pz"
        string_val: "pv"
        string_val: "ptr2"
        string_val: "print_type_indicator"
        string_val: "print_name_with_quoting"
        string_val: "powm2"
        string_val: "pb"
        string_val: "openat"
        string_val: "op"
        string_val: "old_user"
        string_val: "old_perms"
        string_val: "old_group"
        string_val: "nm1_1"
        string_val: "nm1_0"
        string_val: "n_pos"
        string_val: "n_free"
        string_val: "multiply"
        string_val: "mpz_sub"
        string_val: "mpz_init_set_ui"
        string_val: "mpz_cmp"
        string_val: "mpz_add_ui"
        string_val: "mp"
        string_val: "mode_to_security_class"
        string_val: "mod2"
        string_val: "matchpathcon"
        string_val: "looks_like_integer"
        string_val: "llen"
        string_val: "linkstats"
        string_val: "jf_2"
        string_val: "jf_1"
        string_val: "intval"
        string_val: "inode_values"
        string_val: "inode"
        string_val: "ino_t"
        string_val: "in_shift"
        string_val: "hide_problematic_chars"
        string_val: "have_acl"
        string_val: "half"
        string_val: "getseq"
        string_val: "found_match"
        string_val: "format_user_or_group"
        string_val: "fastmap"
        string_val: "factor_using_pollard_rho2"
        string_val: "factor_insert_multiplicity"
        string_val: "factor"
        string_val: "extract_field"
        string_val: "esc_char"
        string_val: "errno_unsupported"
        string_val: "errmsg"
        string_val: "eof2"
        string_val: "eof1"
        string_val: "ent_sb"
        string_val: "ent_from_table"
        string_val: "end_pos"
        string_val: "dired_pos"
        string_val: "digit"
        string_val: "df_readable"
        string_val: "dev"
        string_val: "d_name"
        string_val: "current_pos"
        string_val: "curr_max_width"
        string_val: "count_trailing_zeros"
        string_val: "count_leading_zeros"
        string_val: "context_type_set"
        string_val: "context_type_get"
        string_val: "con"
        string_val: "computecon"
        string_val: "comma"
        string_val: "color_ext_type"
        string_val: "color_ext_list"
        string_val: "checktail"
        string_val: "cap_d"
        string_val: "block_values"
        string_val: "beg"
        string_val: "acl_type"
        string_val: "acc_f"
        string_val: "UNAME_PROCESSOR"
        string_val: "TYPE_SIGNED"
        string_val: "S_ISSOCK"
        string_val: "S_ISFIFO"
        string_val: "ST_NBLOCKS"
        string_val: "ST_ERROR"
        string_val: "ST_END"
        string_val: "ST_BACKSLASH"
        string_val: "SSE_INVALID_NUMBER"
        string_val: "RC_inode_changed"
        string_val: "Q_FREQ_SIZE"
        string_val: "PUSH_CURRENT_DIRED_POS"
        string_val: "PS_START"
        string_val: "MST[BITXOR$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[BITOR$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[BITAND$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MB_CUR_MAX"
        string_val: "FIRST_OMITTED_PRIME"
        string_val: "ERANGE"
        string_val: "EOPNOTSUPP"
        string_val: "DIRED_FPUTS"
        string_val: "C_NORM"
        string_val: "C_LINK"
        string_val: "C_CAP"
        string_val: "6"
        string_val: "\'(\'"
        string_val: "word_separator;"
        string_val: "vlim"
        string_val: "vlen"
        string_val: "va_start"
        string_val: "va_list"
        string_val: "va_end"
        string_val: "user_wx"
        string_val: "unsigned_file_size"
        string_val: "ul"
        string_val: "u100"
        string_val: "total_blocks"
        string_val: "timeval"
        string_val: "ten_or_less"
        string_val: "t1p"
        string_val: "strdup"
        string_val: "strcpy"
        string_val: "st_nlink"
        string_val: "simple_strtod_int"
        string_val: "simple_round_floor"
        string_val: "simple_round"
        string_val: "si"
        string_val: "set_normal_color"
        string_val: "self_denying_umask"
        string_val: "scale_type"
        string_val: "scale_IEC_I"
        string_val: "rows"
        string_val: "round"
        string_val: "rl"
        string_val: "resolved_len"
        string_val: "resolved_dev"
        string_val: "req"
        string_val: "redcify2"
        string_val: "recent"
        string_val: "q1024"
        string_val: "q1000"
        string_val: "process_signals"
        string_val: "prfields"
        string_val: "prep_non_filename_text"
        string_val: "powm"
        string_val: "possible_suffix"
        string_val: "plus"
        string_val: "pi"
        string_val: "patterns_match"
        string_val: "overflow"
        string_val: "os"
        string_val: "not_equal"
        string_val: "nfmt"
        string_val: "new_stats"
        string_val: "neg_frac"
        string_val: "need_lstat"
        string_val: "name_width"
        string_val: "n_used"
        string_val: "n_string"
        string_val: "mpz_srcptr"
        string_val: "mpz_init_set_si"
        string_val: "mpz"
        string_val: "mp_millerrabin"
        string_val: "mp_factor_insert_ui"
        string_val: "min_size"
        string_val: "millerrabin2"
        string_val: "millerrabin"
        string_val: "mb_word_separator;"
        string_val: "lr_78"
        string_val: "lr_64"
        string_val: "lr_52"
        string_val: "lr_51"
        string_val: "lr_50"
        string_val: "lr_49"
        string_val: "lr_48"
        string_val: "lr_47"
        string_val: "linkmode"
        string_val: "line_len"
        string_val: "lgetfilecon"
        string_val: "less_than"
        string_val: "less_equal"
        string_val: "isqrt2"
        string_val: "isprint"
        string_val: "initseq"
        string_val: "initialize_ordering_vector"
        string_val: "indicator_no"
        string_val: "indent"
        string_val: "ind"
        string_val: "has_cap"
        string_val: "gt2"
        string_val: "greater_than"
        string_val: "greater_equal"
        string_val: "ginv"
        string_val: "gidtostr_ptr"
        string_val: "getsize"
        string_val: "get_type_indicator"
        string_val: "get_stat_ctime"
        string_val: "ge2"
        string_val: "gcd2_odd"
        string_val: "fsu_blocks"
        string_val: "fsu_bavail"
        string_val: "fs_usage"
        string_val: "format_user_width"
        string_val: "format_user_or_group_width"
        string_val: "format_user"
        string_val: "format_inode"
        string_val: "flags"
        string_val: "factor_found;"
        string_val: "factor_found:"
        string_val: "exponent"
        string_val: "expld"
        string_val: "eval5"
        string_val: "eval4"
        string_val: "eval3"
        string_val: "eval2"
        string_val: "eval1"
        string_val: "escstart"
        string_val: "equal"
        string_val: "ep"
        string_val: "env_set"
        string_val: "docolon"
        string_val: "divide"
        string_val: "divexact_21"
        string_val: "deref"
        string_val: "delseq"
        string_val: "default_scale_base"
        string_val: "comp"
        string_val: "column_info_growth"
        string_val: "cntd"
        string_val: "cnta"
        string_val: "calculate_columns"
        string_val: "base2"
        string_val: "base1"
        string_val: "backup_state"
        string_val: "b_len"
        string_val: "arg_writable"
        string_val: "align_nstrftime"
        string_val: "UINTMAX_MAX"
        string_val: "TIME_STAMP_LEN_MAXIMUM"
        string_val: "S_ISVTX"
        string_val: "ST_OCTAL"
        string_val: "ST_HEX"
        string_val: "ST_CARET"
        string_val: "SSE_INVALID_SUFFIX"
        string_val: "MST[PSUB$A1$@2$!PADD$A1$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[GT$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[GE$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!SUB$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!SUB$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!NEG$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!MOD$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!MOD$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!LT$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!LT$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!LE$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!LE$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!GT$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!GT$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!DIV$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!CONSTVAL$0$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITXOR$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITSHR$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITSHR$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITSHL$@2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITSHL$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITNOT$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITNOT$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!ADD$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[BITSHL$V1$@2$!ASSIGN$V1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!NEQ$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!EQ$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!BITAND$@1$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!ABS$@1$]MSP[]"
        string_val: "MR_REPS"
        string_val: "LIB_NAME"
        string_val: "L1"
        string_val: "IUSED_FIELD"
        string_val: "ITOTAL_FIELD"
        string_val: "IPCENT_FIELD"
        string_val: "IAVAIL_FIELD"
        string_val: "HAVE_SYSCTL"
        string_val: "FTS_D"
        string_val: "DIRED_INDENT"
        string_val: "DIGEST_REFERENCE"
        string_val: "DIGEST_BITS"
        string_val: "C_STICKY_OTHER_WRITABLE"
        string_val: "C_STICKY"
        string_val: "C_SETUID"
        string_val: "C_SETGID"
        string_val: "C_OTHER_WRITABLE"
        string_val: "B"
        string_val: "63"
        string_val: "36"
        string_val: "1000000000"
        string_val: "1000"
        string_val: "..."
        string_val: "xrealloc"
        string_val: "width_gap"
        string_val: "wcwidth"
        string_val: "wchar_t"
        string_val: "visit_dir"
        string_val: "vfprintf"
        string_val: "valid_suffixes"
        string_val: "valid_suffix"
        string_val: "v_b"
        string_val: "v_a"
        string_val: "used_color_this_time"
        string_val: "toupper"
        string_val: "token_length"
        string_val: "tl"
        string_val: "table_size"
        string_val: "suffix_power_character"
        string_val: "suffix_power"
        string_val: "submod2"
        string_val: "submod"
        string_val: "strncat"
        string_val: "strcoll"
        string_val: "st_author"
        string_val: "spec_item"
        string_val: "sorted_file_alloc"
        string_val: "sock"
        string_val: "snprintf"
        string_val: "skip_count"
        string_val: "simple_strtod_human"
        string_val: "simple_strtod_float"
        string_val: "simple_strtod_fatal"
        string_val: "simple_round_to_zero"
        string_val: "simple_round_nearest"
        string_val: "simple_round_from_zero"
        string_val: "show_decimal_point"
        string_val: "selected_fstype"
        string_val: "security_compute_create"
        string_val: "search_path"
        string_val: "scale_auto"
        string_val: "round_type"
        string_val: "ret1;"
        string_val: "redcify"
        string_val: "read_utmp"
        string_val: "re_nsub"
        string_val: "r1p"
        string_val: "quotearg_n_style"
        string_val: "quotearg_buffer"
        string_val: "qp"
        string_val: "process_all"
        string_val: "print_with_commas"
        string_val: "print_many_per_line"
        string_val: "print_long_format"
        string_val: "print_horizontal"
        string_val: "print_esc_char"
        string_val: "print_color_indicator"
        string_val: "patterns"
        string_val: "parse_human_number"
        string_val: "outlist_end"
        string_val: "opendir"
        string_val: "off"
        string_val: "octal_0"
        string_val: "obstack_object_size"
        string_val: "obstack_next_free"
        string_val: "obstack_blank"
        string_val: "obstack"
        string_val: "num_regs"
        string_val: "nfields_allocated"
        string_val: "multipliers_3"
        string_val: "multipliers_1"
        string_val: "mpz_tdiv_r"
        string_val: "mpz_tdiv_q"
        string_val: "mpz_single_init"
        string_val: "mpz_scan1"
        string_val: "mpz_ptr"
        string_val: "mpz_powm"
        string_val: "mpz_out_str"
        string_val: "mpz_inits"
        string_val: "mpz_init"
        string_val: "mpz_get_ui"
        string_val: "mpz_get_str"
        string_val: "mpz_gcd"
        string_val: "mpz_fits_ulong_p"
        string_val: "mpz_divexact"
        string_val: "mpz_clears"
        string_val: "mpz_add"
        string_val: "mp_factor_using_division"
        string_val: "mp_factor_init"
        string_val: "mod"
        string_val: "minus"
        string_val: "minorbuf"
        string_val: "minor"
        string_val: "message"
        string_val: "memchr"
        string_val: "mbsnwidth"
        string_val: "mbsinit"
        string_val: "mbsalign"
        string_val: "mbrtowc"
        string_val: "make_link_name"
        string_val: "majorbuf"
        string_val: "major"
        string_val: "lr_86"
        string_val: "lr_85"
        string_val: "lr_84"
        string_val: "lr_83"
        string_val: "lr_82"
        string_val: "lr_81"
        string_val: "lr_80"
        string_val: "lr_79"
        string_val: "lr_77"
        string_val: "lr_76"
        string_val: "lr_75"
        string_val: "lr_74"
        string_val: "lr_73"
        string_val: "lr_72"
        string_val: "lr_71"
        string_val: "lr_70"
        string_val: "lr_69"
        string_val: "lr_67"
        string_val: "lr_65"
        string_val: "lr_63"
        string_val: "lr_62"
        string_val: "lr_61"
        string_val: "lr_60"
        string_val: "lr_59"
        string_val: "lr_58"
        string_val: "lr_57"
        string_val: "lr_56"
        string_val: "lr_55"
        string_val: "lr_54"
        string_val: "lr_53"
        string_val: "long_time_expected_width"
        string_val: "lipct"
        string_val: "lchownat"
        string_val: "isodigit"
        string_val: "iscntrl"
        string_val: "is_square"
        string_val: "is_directory"
        string_val: "init_column_info"
        string_val: "ignore_dot_and_dot_dot"
        string_val: "ifdef"
        string_val: "human_B"
        string_val: "hline2"
        string_val: "hline1"
        string_val: "has_uuid_suffix"
        string_val: "has_capability_cache"
        string_val: "getuser"
        string_val: "getgroup"
        string_val: "getfscreatecon"
        string_val: "getfilecon_cache"
        string_val: "getcon"
        string_val: "get_point"
        string_val: "get_link_name"
        string_val: "get_field_values"
        string_val: "get_disk"
        string_val: "fsu_files"
        string_val: "fsu_ffree"
        string_val: "fsu_bfree"
        string_val: "fsu_bavail_top_bit_set"
        string_val: "fstatat"
        string_val: "fsetfilecon"
        string_val: "format_group_width"
        string_val: "format_group"
        string_val: "filter_mount_list"
        string_val: "fill_r"
        string_val: "filetype_indicator"
        string_val: "file_ignored"
        string_val: "file_has_acl_cache"
        string_val: "fifo"
        string_val: "fgetfilecon"
        string_val: "fdadvise"
        string_val: "fchown"
        string_val: "failed_strcoll"
        string_val: "factor_using_division"
        string_val: "factor_insert_refind"
        string_val: "excluded_fstype"
        string_val: "eval7"
        string_val: "epoch"
        string_val: "dummy"
        string_val: "double_to_human"
        string_val: "done;"
        string_val: "div_smallq"
        string_val: "dirfd"
        string_val: "dirent"
        string_val: "dev_num"
        string_val: "dev_ino_push"
        string_val: "decode_field_spec"
        string_val: "compute_context_from_mask"
        string_val: "cols_remaining"
        string_val: "color_buf"
        string_val: "class"
        string_val: "chownat"
        string_val: "cap_free"
        string_val: "canonicalize_file_name"
        string_val: "by_columns"
        string_val: "blanks_width"
        string_val: "bin_str"
        string_val: "basename_is_dot_or_dotdot"
        string_val: "autocount_2"
        string_val: "autocount_1"
        string_val: "autocount"
        string_val: "attr_len"
        string_val: "attach"
        string_val: "alloca"
        string_val: "add_uint_with_neg_flag"
        string_val: "add_to_grand_total"
        string_val: "add_field"
        string_val: "__utc"
        string_val: "__ns"
        string_val: "UNKNOWN_SECURITY_CONTEXT"
        string_val: "UNAME_HARDWARE_PLATFORM"
        string_val: "ULONG_MAX"
        string_val: "S_IXUGO"
        string_val: "S_IWOTH"
        string_val: "S_ISUID"
        string_val: "S_ISGID"
        string_val: "S_ISDOOR"
        string_val: "SSE_VALID_BUT_FORBIDDEN_SUFFIX"
        string_val: "SSE_OVERFLOW"
        string_val: "SSE_MISSING_I_SUFFIX"
        string_val: "SIGXFSZ"
        string_val: "SIGXCPU"
        string_val: "SIGVTALRM"
        string_val: "SIGPROF"
        string_val: "SIGPOLL"
        string_val: "RC_excluded"
        string_val: "QUEUE_SIZE"
        string_val: "PS_4"
        string_val: "PS_3"
        string_val: "PS_2"
        string_val: "O_NOFOLLOW"
        string_val: "O_DIRECTORY"
        string_val: "MST[GT$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[GE$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[GE$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!NEG$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!MUL$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!DIV$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[GE$@1$@2$!BITOR$@1$@2$]MSP[]"
        string_val: "MST[GE$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITXOR$@1$@2$!OPERAND$@1$]MSP[]"
        string_val: "MST[BITSHL$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[ASSIGN$V1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MAX_UNSCALED_DIGITS"
        string_val: "MAX_ACCEPTABLE_DIGITS"
        string_val: "LIKELY"
        string_val: "LDBL_MAX"
        string_val: "INTMAX_MAX"
        string_val: "GEN"
        string_val: "FTSENT_IS_DIRECTORY"
        string_val: "FILE_FIELD"
        string_val: "ELOOP"
        string_val: "EEXIST"
        string_val: "DT_WHT"
        string_val: "DIRFIRST_CHECK"
        string_val: "DIRED_FPUTS_LITERAL"
        string_val: "DIR"
        string_val: "DELIM"
        string_val: "C_MULTIHARDLINK"
        string_val: "C_FILE"
        string_val: "C_END"
        string_val: "CTL_HW"
        string_val: "ACL_T_YES"
        string_val: "ACL_T_SELINUX_ONLY"
        string_val: "ACL_T_NONE"
        string_val: "127"
        string_val: "100.0"
        string_val: "0.5"
        string_val: "*p"
        string_val: "*fsp"
        string_val: "*di"
        string_val: "*column_info"
        string_val: "(specified_"
        string_val: "(0)"
        string_val: "\'~\'"
        string_val: "\'|\'"
        string_val: "\'_\'"
        string_val: "\'^\'"
        string_val: "\'Y\'"
        string_val: "\'M\'"
        string_val: "\'K\'"
        string_val: "\'@\'"
        string_val: "#define"
        string_val: "xstrndup"
        string_val: "xstrcoll_version"
        string_val: "xstrcoll_df_version"
        string_val: "xstrcoll"
        string_val: "xreadlink"
        string_val: "xcalloc"
        string_val: "word_separator:"
        string_val: "whiteout"
        string_val: "verify_numeric"
        string_val: "verify"
        string_val: "va_arg"
        string_val: "translate"
        string_val: "token_buffer"
        string_val: "system_info"
        string_val: "sysctlbyname"
        string_val: "strtol"
        string_val: "strpbrk"
        string_val: "strintcmp"
        string_val: "strcspn"
        string_val: "strcmp"
        string_val: "stpncpy"
        string_val: "specified_"
        string_val: "sort_functions"
        string_val: "smack_new_label_from_path"
        string_val: "sigset_t"
        string_val: "setjmp"
        string_val: "setfileconat"
        string_val: "set"
        string_val: "security"
        string_val: "scale_SI"
        string_val: "scale_IEC"
        string_val: "round_to_zero"
        string_val: "round_nearest"
        string_val: "round_from_zero"
        string_val: "round_floor"
        string_val: "round_ceiling"
        string_val: "role"
        string_val: "rev_xstrcoll_version"
        string_val: "rev_xstrcoll_df_version"
        string_val: "ret2;"
        string_val: "ret2:"
        string_val: "ret1:"
        string_val: "regoff_t"
        string_val: "regfree"
        string_val: "realloc"
        string_val: "readtoken"
        string_val: "readdir_ignoring_dot_and_dotdot"
        string_val: "readdir"
        string_val: "re_syntax_options"
        string_val: "re_registers"
        string_val: "re_pattern_buffer"
        string_val: "re_match"
        string_val: "re_compile_pattern"
        string_val: "range"
        string_val: "quoting_options"
        string_val: "q;"
        string_val: "print_unicode_char"
        string_val: "primes_diff8"
        string_val: "pd[I].lim))"
        string_val: "pd[I].binv;"
        string_val: "pd"
        string_val: "parse_state"
        string_val: "p,"
        string_val: "outlist_head"
        string_val: "octtobin"
        string_val: "obstack_finish"
        string_val: "nstrftime"
        string_val: "next_multiplier;"
        string_val: "next_multiplier:"
        string_val: "next_i;"
        string_val: "next_i:"
        string_val: "newline_anchor"
        string_val: "mpz_va_init"
        string_val: "mpz_tdiv_q_ui"
        string_val: "mpz_tdiv_q_2exp"
        string_val: "mpz_sub_ui"
        string_val: "mpz_single_init)("
        string_val: "mpz_set_ui"
        string_val: "mpz_powm_ui"
        string_val: "mpz_divisible_ui_p"
        string_val: "mpz_div_2exp"
        string_val: "mpsort"
        string_val: "mkdir"
        string_val: "memcasecmp"
        string_val: "mb_word_separator:"
        string_val: "lsh2"
        string_val: "lsetfileconat"
        string_val: "longjmp"
        string_val: "longdiff"
        string_val: "lgetfileconat"
        string_val: "iswspace"
        string_val: "iswprint"
        string_val: "isdigit"
        string_val: "is_basic"
        string_val: "init_tokenbuffer"
        string_val: "human_suppress_point_zero"
        string_val: "human_group_digits"
        string_val: "hash_insert"
        string_val: "gettext"
        string_val: "getfileconat"
        string_val: "get_system_info"
        string_val: "get_fs_usage"
        string_val: "ftruncate"
        string_val: "free_mount_entry"
        string_val: "fnmatch"
        string_val: "find_mount_point"
        string_val: "filevercmp"
        string_val: "filetype_letter"
        string_val: "filemodestring"
        string_val: "file_has_acl"
        string_val: "field_type"
        string_val: "fchdir"
        string_val: "false;"
        string_val: "errno,"
        string_val: "emit_blocksize_note"
        string_val: "dot_or_dotdot"
        string_val: "done:"
        string_val: "display_field_t"
        string_val: "define"
        string_val: "d_type"
        string_val: "cpu_type_t"
        string_val: "context_"
        string_val: "comp));"
        string_val: "comp))"
        string_val: "cmp_size"
        string_val: "cmp_name"
        string_val: "cmp_mtime"
        string_val: "cmp_extension"
        string_val: "cmp_ctime"
        string_val: "cmp_atime"
        string_val: "chardev"
        string_val: "cap_to_text"
        string_val: "cap_t"
        string_val: "cap_get_file"
        string_val: "blockdev"
        string_val: "areadlink_with_size"
        string_val: "ambsalign"
        string_val: "allocated"
        string_val: "all_args_string"
        string_val: "align"
        string_val: "access"
        string_val: "_set"
        string_val: "__APPLE__"
        string_val: "_D_EXACT_NAMLEN"
        string_val: "_(\"failed"
        string_val: "^="
        string_val: "X_OK"
        string_val: "S_IXUSR"
        string_val: "S_IWUSR"
        string_val: "ST_BLKSIZE"
        string_val: "SIG_BLOCK"
        string_val: "SIGTERM"
        string_val: "SIGQUIT"
        string_val: "SIGPIPE"
        string_val: "SIGHUP"
        string_val: "SIGALRM"
        string_val: "SEEK_CUR"
        string_val: "SBIT"
        string_val: "RE_SYNTAX_POSIX_BASIC"
        string_val: "RE_NO_EMPTY_RANGES"
        string_val: "RE_CONTEXT_INVALID_DUP"
        string_val: "RELIABLE_D_INO"
        string_val: "PS_DONE"
        string_val: "PKGLIBEXECDIR"
        string_val: "PATH_MAX"
        string_val: "OTHER_FLD"
        string_val: "NXGetArchInfoFromCpuType"
        string_val: "NXArchInfo"
        string_val: "MST[PDEREF_RIGHTINC$P1$!PRIGHTDEC_DEREF$P1$]MSP[]"
        string_val: "MST[PDEREF_RIGHTINC$P1$!PLEFTINC_DEREF$P1$]MSP[]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PRIGHTINC_DEREF$P1$]MSP[]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PRIGHTDEC_DEREF$P1$]MSP[]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PLEFTINC_DEREF$P1$]MSP[]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PLEFTDEC_DEREF$P1$]MSP[]"
        string_val: "MST[GT$@1$V2$!ASSIGN$V2$@1$]MSP[]"
        string_val: "MST[GT$@1$@2$!CONSTVAL$1$]MSP[]"
        string_val: "MST[GT$@1$@2$!ABS$@2$]MSP[]"
        string_val: "MST[BITOR$@1$@2$!OPERAND$@2$]MSP[]"
        string_val: "MBA_UNIBYTE_ONLY"
        string_val: "MBA_NO_RIGHT_PAD"
        string_val: "MAX_MON_WIDTH"
        string_val: "MAGIC65"
        string_val: "MAGIC64"
        string_val: "MAGIC63"
        string_val: "MAGIC11"
        string_val: "LS_MINOR_PROBLEM"
        string_val: "LOG_EQ"
        string_val: "ISSLASH"
        string_val: "INODE_FLD"
        string_val: "I);"
        string_val: "I"
        string_val: "HIGHBIT_TO_MASK"
        string_val: "HIDE_AUTOMOUNT_PREFIX"
        string_val: "HAVE_STRUCT_DIRENT_D_TYPE"
        string_val: "HAVE_SMACK"
        string_val: "HAVE_OS_H"
        string_val: "HAVE_NL_LANGINFO"
        string_val: "GT_FILE"
        string_val: "FNM_PERIOD"
        string_val: "FILE_OR_LINK_MODE"
        string_val: "FILETYPE_INDICATORS"
        string_val: "EROFS"
        string_val: "ENOTEMPTY"
        string_val: "ENOSYS"
        string_val: "EIO"
        string_val: "EBUSY"
        string_val: "D_INO"
        string_val: "DT_SOCK"
        string_val: "DT_REG"
        string_val: "DT_LNK"
        string_val: "DT_FIFO"
        string_val: "DT_DIR"
        string_val: "DT_CHR"
        string_val: "DT_BLK"
        string_val: "C_SOCK"
        string_val: "C_RESET"
        string_val: "C_FIFO"
        string_val: "C_DOOR"
        string_val: "C_DIR"
        string_val: "C_CLR_TO_EOL"
        string_val: "C_CHR"
        string_val: "C_BLK"
        string_val: "C"
        string_val: "BLOCK_FLD"
        string_val: "BIT"
        string_val: "ABMON_1"
        string_val: "<<="
        string_val: "9"
        string_val: "77"
        string_val: "65"
        string_val: "64"
        string_val: "55"
        string_val: "51"
        string_val: "385"
        string_val: "35"
        string_val: "33"
        string_val: "31556952"
        string_val: "27"
        string_val: "231"
        string_val: "21"
        string_val: "165"
        string_val: "128"
        string_val: "1155"
        string_val: "105"
        string_val: "1000000"
        string_val: "1,"
        string_val: "0xdfff"
        string_val: "0xd800"
        string_val: "0x9f"
        string_val: "0x60"
        string_val: "0x40"
        string_val: "0x24"
        string_val: "037"
        string_val: "*sorted_file"
        string_val: "*o"
        string_val: "*new"
        string_val: "*line"
        string_val: "*ignore"
        string_val: "*fstatus"
        string_val: "*f"
        string_val: "*ext"
        string_val: "*ent"
        string_val: "*devlist"
        string_val: "(q"
        string_val: "(factors,"
        string_val: "(LIKELY"
        string_val: "(;;)"
        string_val: "(0,"
        string_val: "((C),"
        string_val: "\'}\'"
        string_val: "\'{\'"
        string_val: "\'y\'"
        string_val: "\']\'"
        string_val: "\'\\1\'"
        string_val: "\'[\'"
        string_val: "\'W\'"
        string_val: "\'O\'"
        string_val: "\'J\'"
        string_val: "\';\'"
        string_val: "\'&\'"
        string_val: "\'\"\'"
        string_val: "\'!\'"
        string_val: "%s\"),"
        string_val: "%s"
        string_val: "#comp,"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3577
          }
        }
        tensor_content: "\200\227\241H\240\021\241H\340\343\200H@\260<H\200\037\362G\000\317\242G\2001\224G\200\342\215G\000.\201G\000\354UG\000\354UG\000T9G\000\252%G\000r\035G\000\267\033G\000k\025G\000\357\nG\000\206\357F\000\240\345F\000R\342F\000\344\333F\000B\312F\000f\305F\000\360\303F\000t\274F\000\356\271F\000\254\245F\000\010\245F\000\222\237F\000\314\236F\000\314\231F\000\210\223F\000\332\212F\000\240}F\000d|F\000TtF\000\240qF\000\310kF\000\300fF\000\014NF\000\\GF\000\200DF\000@,F\000L+F\000((F\000\304\036F\000\304\030F\000\234\024F\000\330\007F\000\004\005F\000\330\003F\000X\373E\000\330\367E\000\230\355E\000\000\341E\000\350\334E\000\340\320E\000\340\314E\000\370\301E\000\250\267E\000\020\262E\000\020\256E\000H\253E\000\250\243E\000\220\232E\0000\226E\000\360\223E\000p\221E\000\000\217E\000\260\214E\000`\212E\000\230\211E\000\220\207E\000h\207E\000\270\204E\000\210\202E\000(\202E\000x\201E\000\370\200E\000\260}E\000\220|E\000PxE\000\360tE\000\240sE\0000rE\000\240qE\000\340pE\000\340nE\000\260nE\000 kE\000\360hE\000 dE\000p`E\000\260\\E\000\300[E\000\240YE\000\320XE\000\260XE\000\340UE\000\220QE\000\220OE\000\220NE\000@NE\0000NE\000\320LE\000\020DE\000\360CE\000`BE\000 @E\000\220=E\000\000:E\000\3408E\000\2208E\000\2407E\000p4E\000\3202E\000\2601E\000\300.E\000\340-E\000\240,E\000\340(E\000\320 E\000\240\036E\000\200\036E\000`\033E\000\200\032E\000P\032E\000\200\030E\000`\030E\000\360\026E\000`\026E\000@\026E\000 \026E\000\300\020E\000\360\tE\000\240\010E\000\220\010E\000 \010E\000\200\007E\000 \007E\000\220\005E\000\200\005E\000`\005E\000`\005E\0000\005E\000\300\003E\0000\003E\000\320\002E\000\240\002E\000\000\002E\000\360\001E\000 \001E\000\200\376D\000 \376D\000\000\375D\000\000\371D\000\300\362D\000`\362D\000`\361D\000 \361D\000\000\360D\000\340\357D\000\340\356D\000\240\345D\000`\341D\000\000\337D\000\340\333D\000\340\327D\000\340\326D\000\340\324D\000\300\324D\000`\323D\000@\323D\000\200\322D\000 \321D\000@\320D\000`\315D\000\000\315D\000\300\314D\000\000\314D\000\000\313D\000\200\312D\000@\311D\000\340\310D\000\240\310D\000\340\307D\000@\307D\000\340\306D\000\000\305D\000\240\304D\000@\304D\000`\303D\000\300\302D\000@\301D\000\000\301D\000\000\301D\000@\300D\000 \300D\000 \277D\000 \276D\000 \276D\000\340\275D\000\300\275D\000 \272D\000\240\271D\000\340\270D\000\240\270D\000 \270D\000@\266D\000 \266D\000 \265D\000\300\257D\000\200\257D\000@\256D\000\240\255D\000`\255D\000\340\254D\000@\254D\000\000\254D\000`\252D\000 \252D\000@\247D\000\240\246D\000`\246D\000\200\244D\000\300\243D\000\300\243D\000 \243D\000\240\242D\000`\242D\000\200\241D\000`\240D\000\300\237D\000 \237D\000\000\237D\000@\236D\000\340\235D\000\240\233D\000\200\230D\000\300\226D\000\240\226D\000\300\223D\000@\223D\000\340\222D\000 \221D\000\300\217D\000\000\217D\000 \216D\000\000\216D\000\240\215D\000\240\215D\000\240\215D\000\200\215D\000`\213D\000\340\212D\000\340\212D\000\300\212D\000\240\212D\000\200\212D\000\240\211D\000@\206D\000 \206D\000\300\204D\000\340\203D\000\300\202D\000\340\201D\000\200\201D\000\200\201D\000`\201D\000@\201D\000@\200D\000@~D\000\300|D\000\200|D\000\300{D\000\300{D\000\200{D\000\000{D\000\000{D\000\000zD\000@yD\000\000yD\000\000xD\000\300wD\000\300wD\000\200uD\000\000uD\000\300sD\000@rD\000\000rD\000\200oD\000\000nD\000\300mD\000\200mD\000@mD\000\300lD\000@kD\000@kD\000\200hD\000@hD\000\300gD\000\300eD\000\200eD\000\000eD\000\000eD\000\200dD\000\200dD\000@dD\000\000dD\000\300cD\000\300cD\000\000bD\000@aD\000@`D\000\200_D\000@_D\000@^D\000@^D\000@]D\000\300ZD\000@ZD\000@YD\000\000YD\000\300XD\000\000WD\000@TD\000\000SD\000\000SD\000@RD\000\000QD\000@PD\000\300OD\000\300OD\000@OD\000@ND\000\300MD\000\300LD\000\300LD\000@LD\000\200KD\000\200JD\000@JD\000@JD\000\200HD\000\300GD\000@GD\000\000FD\000\000CD\000\200BD\000\200AD\000\300@D\000\200@D\000\200>D\000@>D\000\200=D\000@=D\000\300<D\000\200<D\000\300;D\000@;D\000@;D\000@;D\000\3009D\000\2009D\000@9D\000@7D\000\0007D\000@6D\000@5D\000\3004D\000\3004D\000\2004D\000\3003D\000\3002D\000@2D\000@2D\000\0002D\000\0001D\000\3000D\000\3000D\000\3000D\000\3000D\000@0D\000\0000D\000\200/D\000\200/D\000\200.D\000\200.D\000\000.D\000@-D\000\300,D\000\300,D\000\300*D\000@*D\000\200)D\000\300(D\000\300(D\000\300(D\000\200(D\000\300\'D\000\300\'D\000\200\'D\000@\'D\000\000\'D\000\000&D\000\000&D\000\300%D\000\300%D\000\200%D\000@%D\000\000%D\000\300$D\000\200$D\000\200$D\000\300#D\000\300#D\000\300\"D\000\200\"D\000\200\"D\000\000\"D\000\300!D\000\300!D\000\200!D\000@!D\000\000!D\000\200 D\000\000 D\000\300\037D\000\300\037D\000\300\037D\000\200\037D\000\000\037D\000\000\037D\000\000\037D\000\000\036D\000\000\036D\000\200\035D\000\200\035D\000\000\035D\000\300\034D\000\200\034D\000\000\034D\000\300\032D\000\300\032D\000\300\032D\000\200\032D\000@\032D\000@\031D\000@\031D\000\000\030D\000\300\027D\000\300\027D\000\200\027D\000@\027D\000@\027D\000\000\027D\000\300\026D\000@\026D\000\200\025D\000@\025D\000@\024D\000\000\024D\000\300\023D\000\300\023D\000\300\023D\000\200\023D\000@\023D\000@\023D\000\000\023D\000\200\022D\000@\022D\000\300\021D\000@\021D\000\000\021D\000\000\020D\000\300\017D\000\300\017D\000\200\017D\000\000\016D\000\000\016D\000\200\rD\000\200\rD\000\200\014D\000\200\014D\000@\014D\000@\014D\000@\014D\000\000\014D\000\000\014D\000\200\013D\000@\013D\000\000\013D\000\300\nD\000\000\nD\000\000\nD\000@\tD\000\000\tD\000\000\t~C\000\000|C\000\000{C\000\000{C\000\000zC\000\000yC\000\000yC\000\000yC\000\000yC\000\000yC\000\000xC\000\000xC\000\000xC\000\000wC\000\000wC\000\000vC\000\000tC\000\000sC\000\000sC\000\000sC\000\000rC\000\000rC\000\000rC\000\000rC\000\000rC\000\000rC\000\000qC\000\000qC\000\000qC\000\000pC\000\000oC\000\000oC\000\000oC\000\000oC\000\000nC\000\000nC\000\000nC\000\000mC\000\000mC\000\000lC\000\000lC\000\000kC\000\000kC\000\000kC\000\000jC\000\000iC\000\000iC\000\000hC\000\000hC\000\000hC\000\000gC\000\000gC\000\000fC\000\000eC\000\000eC\000\000dC\000\000cC\000\000cC\000\000bC\000\000aC\000\000aC\000\000aC\000\000aC\000\000`C\000\000^C\000\000^C\000\000]C\000\000]C\000\000]C\000\000\\C\000\000\\C\000\000\\C\000\000\\C\000\000\\C\000\000[C\000\000[C\000\000ZC\000\000ZC\000\000ZC\000\000ZC\000\000XC\000\000XC\000\000XC\000\000XC\000\000XC\000\000XC\000\000WC\000\000WC\000\000WC\000\000WC\000\000UC\000\000UC\000\000TC\000\000TC\000\000TC\000\000RC\000\000RC\000\000RC\000\000RC\000\000RC\000\000QC\000\000QC\000\000QC\000\000PC\000\000PC\000\000OC\000\000OC\000\000OC\000\000NC\000\000NC\000\000NC\000\000NC\000\000MC\000\000MC\000\000MC\000\000LC\000\000LC\000\000LC\000\000LC\000\000LC\000\000LC\000\000LC\000\000KC\000\000JC\000\000JC\000\000IC\000\000IC\000\000IC\000\000IC\000\000IC\000\000IC\000\000HC\000\000HC\000\000GC\000\000GC\000\000GC\000\000GC\000\000FC\000\000FC\000\000FC\000\000FC\000\000EC\000\000EC\000\000DC\000\000DC\000\000DC\000\000CC\000\000CC\000\000CC\000\000CC\000\000CC\000\000CC\000\000BC\000\000BC\000\000BC\000\000BC\000\000BC\000\000BC\000\000BC\000\000AC\000\000AC\000\000AC\000\000AC\000\000AC\000\000@C\000\000@C\000\000@C\000\000@C\000\000?C\000\000>C\000\000>C\000\000>C\000\000>C\000\000=C\000\000=C\000\000=C\000\000<C\000\000<C\000\000;C\000\000;C\000\000;C\000\000;C\000\000;C\000\000:C\000\0009C\000\0009C\000\0006C\000\0005C\000\0005C\000\0005C\000\0003C\000\0002C\000\0001C\000\0001C\000\0001C\000\0000C\000\0000C\000\0000C\000\0000C\000\0000C\000\000/C\000\000/C\000\000/C\000\000.C\000\000.C\000\000.C\000\000.C\000\000.C\000\000.C\000\000.C\000\000.C\000\000-C\000\000-C\000\000-C\000\000-C\000\000-C\000\000,C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000+C\000\000*C\000\000*C\000\000*C\000\000*C\000\000*C\000\000*C\000\000)C\000\000)C\000\000)C\000\000)C\000\000(C\000\000(C\000\000(C\000\000\'C\000\000\'C\000\000\'C\000\000\'C\000\000\'C\000\000\'C\000\000\'C\000\000\'C\000\000&C\000\000&C\000\000&C\000\000&C\000\000%C\000\000%C\000\000%C\000\000$C\000\000$C\000\000$C\000\000#C\000\000#C\000\000#C\000\000\"C\000\000\"C\000\000\"C\000\000\"C\000\000!C\000\000!C\000\000!C\000\000!C\000\000!C\000\000!C\000\000 C\000\000 C\000\000 C\000\000 C\000\000 C\000\000 C\000\000\037C\000\000\037C\000\000\037C\000\000\037C\000\000\037C\000\000\037C\000\000\037C\000\000\036C\000\000\036C\000\000\036C\000\000\036C\000\000\036C\000\000\035C\000\000\035C\000\000\034C\000\000\034C\000\000\034C\000\000\033C\000\000\032C\000\000\032C\000\000\032C\000\000\032C\000\000\032C\000\000\031C\000\000\031C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\030C\000\000\027C\000\000\027C\000\000\026C\000\000\026C\000\000\026C\000\000\026C\000\000\026C\000\000\026C\000\000\026C\000\000\025C\000\000\025C\000\000\025C\000\000\025C\000\000\025C\000\000\025C\000\000\024C\000\000\024C\000\000\024C\000\000\024C\000\000\024C\000\000\023C\000\000\023C\000\000\022C\000\000\022C\000\000\022C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\020C\000\000\017C\000\000\017C\000\000\017C\000\000\017C\000\000\016C\000\000\016C\000\000\016C\000\000\016C\000\000\016C\000\000\016C\000\000\016C\000\000\014C\000\000\014C\000\000\014C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\nC\000\000\nC\000\000\nC\000\000\nC\000\000\nC\000\000\tC\000\000\t|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000tB\000\000tB\000\000tB\000\000tB\000\000tB\000\000tB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3577
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range"
  op: "Range"
  input: "model/att_seq2seq/range/start"
  input: "model/att_seq2seq/range/limit"
  input: "model/att_seq2seq/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table"
  input: "model/att_seq2seq/range"
  input: "model/att_seq2seq/Const"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3574
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_1"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/range"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_2"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_2"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/Const_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4016
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: ","
        string_val: "="
        string_val: "if"
        string_val: "0"
        string_val: "{"
        string_val: "}"
        string_val: "]"
        string_val: "["
        string_val: ":"
        string_val: "*"
        string_val: "1"
        string_val: "case"
        string_val: "break;"
        string_val: "=="
        string_val: "i"
        string_val: "argv"
        string_val: "optind"
        string_val: "argc"
        string_val: "-"
        string_val: "&&"
        string_val: "_"
        string_val: "error"
        string_val: "&"
        string_val: "!="
        string_val: "++"
        string_val: "NULL"
        string_val: "EXIT_FAILURE"
        string_val: "!"
        string_val: "c"
        string_val: "<"
        string_val: "true"
        string_val: "int"
        string_val: "else"
        string_val: "+"
        string_val: "char"
        string_val: "ok"
        string_val: "errno"
        string_val: "usage"
        string_val: "false"
        string_val: "."
        string_val: "||"
        string_val: "while"
        string_val: "2"
        string_val: "for"
        string_val: "optarg"
        string_val: "->"
        string_val: "switch"
        string_val: "<="
        string_val: "quote"
        string_val: "return"
        string_val: "?"
        string_val: "f"
        string_val: "const"
        string_val: "s"
        string_val: "file"
        string_val: "stdout"
        string_val: "size_t"
        string_val: "bool"
        string_val: "()"
        string_val: "getopt_long"
        string_val: "MST[STMT!TRAPSTMT]MSP[N]"
        string_val: "toprint"
        string_val: "p"
        string_val: "fputs"
        string_val: "sum"
        string_val: "j"
        string_val: "+="
        string_val: "default:"
        string_val: "MST[@!ABS$@$]MSP[N]"
        string_val: "line"
        string_val: "len"
        string_val: "EXIT_SUCCESS"
        string_val: "PROGRAM_NAME"
        string_val: ">"
        string_val: "|="
        string_val: "unsigned"
        string_val: "length"
        string_val: "static"
        string_val: "MST[SWITCH!SHUFFLECASESDESTS$2$]MSP[N]"
        string_val: "printf"
        string_val: "&="
        string_val: "lo"
        string_val: "long_options"
        string_val: "exit"
        string_val: "AUTHORS"
        string_val: "void"
        string_val: "optc"
        string_val: "n"
        string_val: "--"
        string_val: "\'c\'"
        string_val: "status"
        string_val: "format"
        string_val: "\'a\'"
        string_val: "|"
        string_val: "fp"
        string_val: "STREQ"
        string_val: "fd"
        string_val: "binary"
        string_val: "crc"
        string_val: "chopt"
        string_val: "struct"
        string_val: "case_GETOPT_VERSION_CHAR"
        string_val: "putchar"
        string_val: "(;"
        string_val: "10"
        string_val: "bit_flags"
        string_val: "cnt"
        string_val: "\'d\'"
        string_val: "\'b\'"
        string_val: "lr_13"
        string_val: "case_GETOPT_HELP_CHAR"
        string_val: ">>"
        string_val: "nfiles"
        string_val: "\'"
        string_val: "fts"
        string_val: "lr_4"
        string_val: "PACKAGE"
        string_val: "oi"
        string_val: "MST[STMT!DELSTMT]MSP[N]"
        string_val: "lr_12"
        string_val: "thisline"
        string_val: "lr_10"
        string_val: "bytes_read"
        string_val: "\'0\'"
        string_val: "name"
        string_val: "\'\\n\'"
        string_val: "time_type"
        string_val: "newtime"
        string_val: "free"
        string_val: "ent"
        string_val: "can_mode"
        string_val: "/"
        string_val: "template"
        string_val: "lr_14"
        string_val: "checksum"
        string_val: "LONGINT_OK"
        string_val: "lr_7"
        string_val: "err"
        string_val: "files"
        string_val: "dereference"
        string_val: "inbuf"
        string_val: "buffer"
        string_val: "longopts"
        string_val: "lr_5"
        string_val: "set_quoting_style"
        string_val: "in"
        string_val: "ignore_mode"
        string_val: "stat"
        string_val: "time_ctime"
        string_val: "~"
        string_val: "escape_quoting_style"
        string_val: "order"
        string_val: "st"
        string_val: "hi"
        string_val: "close_stdout"
        string_val: "atexit"
        string_val: "IGNORE_MINIMAL"
        string_val: "ferror"
        string_val: "lr_9"
        string_val: "FTS_PHYSICAL"
        string_val: "MST[C!ADD$C$1$]MSP[N]"
        string_val: "lr_16"
        string_val: "stdin"
        string_val: "\'s\'"
        string_val: "e"
        string_val: "suffix"
        string_val: "lr_8"
        string_val: "8"
        string_val: "ch"
        string_val: "fclose"
        string_val: "^"
        string_val: "sizeof"
        string_val: "lr_24"
        string_val: "lr_3"
        string_val: "reference_file"
        string_val: "\'\\0\'"
        string_val: "lr_2"
        string_val: "lr_6"
        string_val: "lr_17"
        string_val: "lo_carry"
        string_val: "width"
        string_val: "tv_nsec"
        string_val: "lr_15"
        string_val: "descriptors"
        string_val: "uptime"
        string_val: "change_times"
        string_val: "mode"
        string_val: "this"
        string_val: "filename"
        string_val: "start"
        string_val: "newmode"
        string_val: "k"
        string_val: "\'L\'"
        string_val: "dir"
        string_val: "textdomain"
        string_val: "direc_length"
        string_val: "\'\\\\\'"
        string_val: "old_mode"
        string_val: "long"
        string_val: "program_name"
        string_val: "arg"
        string_val: "MST[C!ADD$C$-1$]MSP[N]"
        string_val: "expected_operands"
        string_val: "feof"
        string_val: "do_check"
        string_val: "tv_sec"
        string_val: "alt"
        string_val: "long_format"
        string_val: "fstatus"
        string_val: "#endif"
        string_val: "O_BINARY"
        string_val: "human_output_opts"
        string_val: "lr_11"
        string_val: "lr_18"
        string_val: "output_block_size"
        string_val: "ret"
        string_val: "lr_19"
        string_val: "line_length"
        string_val: "bad_cast"
        string_val: "buf"
        string_val: "gid"
        string_val: "print_element"
        string_val: "is_stdin"
        string_val: "lr_1"
        string_val: "exit_status"
        string_val: "getenv"
        string_val: "lr_20"
        string_val: "bin_buffer"
        string_val: "groups"
        string_val: "3"
        string_val: "uintmax_t"
        string_val: "main"
        string_val: "lr_22"
        string_val: "<<"
        string_val: "size"
        string_val: "prefix_tag"
        string_val: ");"
        string_val: "delimiter"
        string_val: "tm"
        string_val: "\'t\'"
        string_val: "needs_escape"
        string_val: "updays"
        string_val: "\'p\'"
        string_val: "uid"
        string_val: "4"
        string_val: "bindtextdomain"
        string_val: "LOCALEDIR"
        string_val: "\'m\'"
        string_val: "change"
        string_val: "lr_23"
        string_val: "EOF"
        string_val: "\'P\'"
        string_val: "\'r\'"
        string_val: "lr_25"
        string_val: "precision"
        string_val: "logical"
        string_val: "gid_t"
        string_val: "outbuf"
        string_val: "status_only"
        string_val: "egid"
        string_val: "optc_status"
        string_val: "\'e\'"
        string_val: "scontext"
        string_val: "STDIN_FILENO"
        string_val: "rel_mode"
        string_val: "digest_bin_bytes"
        string_val: "total_bytes"
        string_val: "use_nuls"
        string_val: "lr_21"
        string_val: "1024"
        string_val: "ref_stats"
        string_val: "emit_try_help"
        string_val: "which"
        string_val: "opt"
        string_val: "\'7\'"
        string_val: "rgid"
        string_val: "notnow"
        string_val: "-="
        string_val: "CH_ATIME"
        string_val: "\'i\'"
        string_val: "\'X\'"
        string_val: "sort_type"
        string_val: "\'v\'"
        string_val: "uid_t"
        string_val: "new_mode_len"
        string_val: "new_mode"
        string_val: "recurse"
        string_val: "W_TYPE_SIZE"
        string_val: "val"
        string_val: "setlocale"
        string_val: "check_input_order"
        string_val: "n_entries"
        string_val: "issued_disorder_warning"
        string_val: "affect_symlink_referent"
        string_val: "tmp_ulong"
        string_val: "hex_digest"
        string_val: "header_mode"
        string_val: "conversion"
        string_val: "no_create"
        string_val: "date_set"
        string_val: "uphours"
        string_val: "streams"
        string_val: "CAN_NOLINKS"
        string_val: "digest_hex_bytes"
        string_val: "u"
        string_val: "LC_ALL"
        string_val: "newpath"
        string_val: "86400"
        string_val: "n_mismatched_checksums"
        string_val: "XARGMATCH"
        string_val: "prev"
        string_val: "r"
        string_val: "CH_MTIME"
        string_val: "strlen"
        string_val: "q"
        string_val: "t"
        string_val: "EXIT_CANCELED"
        string_val: "sig"
        string_val: "field_width"
        string_val: "ai"
        string_val: "set_program_name"
        string_val: "initialize_main"
        string_val: "current"
        string_val: "close"
        string_val: "PRINT_MACHINE"
        string_val: "MST[C!CONSTVAL$0$]MSP[N]"
        string_val: "have_precision"
        string_val: "prev_optc_status"
        string_val: "args_used"
        string_val: "check_basic_portability"
        string_val: "\'h\'"
        string_val: "wd"
        string_val: "join_field_1"
        string_val: "direc_start"
        string_val: "set_join_field"
        string_val: "ENC_BLOCKSIZE"
        string_val: "24"
        string_val: "tmn"
        string_val: "filelen"
        string_val: "MST[CALL!SHUFFLEARGS$2$]MSP[N]"
        string_val: "padding_width"
        string_val: "ref_file"
        string_val: "#if"
        string_val: "MST[STMT!DELSTMT]MSP[S]"
        string_val: "FILE"
        string_val: "mode_len"
        string_val: "PRIuMAX"
        string_val: "joption_count"
        string_val: "\'w\'"
        string_val: "BASE64_LENGTH"
        string_val: "LONGINT_OVERFLOW"
        string_val: "st_mode"
        string_val: "MST[CALL!SHUFFLEARGS$2$]MSP[S]"
        string_val: "lr_26"
        string_val: "factors"
        string_val: "verbosity"
        string_val: "now"
        string_val: "operand_status"
        string_val: "emit_ancillary_info"
        string_val: "crctab"
        string_val: "0xFF"
        string_val: "files_given"
        string_val: "3600"
        string_val: "dest_name"
        string_val: "stats"
        string_val: "have_read_stdin"
        string_val: "files_from"
        string_val: "PACKAGE_NAME"
        string_val: "g_names"
        string_val: "bin2hex"
        string_val: "tmp_size"
        string_val: "have_field_width"
        string_val: "wrap_column"
        string_val: "quote_n"
        string_val: "PRINT_KERNEL_NAME"
        string_val: "temp"
        string_val: "\'2\'"
        string_val: "xnmalloc"
        string_val: "time_now"
        string_val: "n_open_or_read_failures"
        string_val: "i_major"
        string_val: "force_silent"
        string_val: "print_filename"
        string_val: "regular_total"
        string_val: "minimum_width"
        string_val: "PRINT_KERNEL_VERSION"
        string_val: "PRINT_KERNEL_RELEASE"
        string_val: "checkfile_stream"
        string_val: "checkfile_name"
        string_val: "mode_alloc"
        string_val: "0xffff"
        string_val: "STDOUT_FILENO"
        string_val: "\'z\'"
        string_val: "mode_comma_len"
        string_val: "join_field_2"
        string_val: "arg_len"
        string_val: "act"
        string_val: "flex_date"
        string_val: "env"
        string_val: "color_indicator"
        string_val: "file_full_name"
        string_val: "sort_type_specified"
        string_val: "options"
        string_val: "local"
        string_val: "umask_value"
        string_val: "file_is_binary"
        string_val: "pending_dirs"
        string_val: "all_line"
        string_val: "\'H\'"
        string_val: "60"
        string_val: "xstrtoul"
        string_val: "ptr"
        string_val: "MST[NEQ$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "notnow1"
        string_val: "indicator_style"
        string_val: "do"
        string_val: "required_uid"
        string_val: "required_gid"
        string_val: "perform_basename"
        string_val: "lr_28"
        string_val: "dired"
        string_val: "style"
        string_val: "debug"
        string_val: "tolower"
        string_val: "path"
        string_val: "HELP_OPTION_DESCRIPTION"
        string_val: "root_dev_ino"
        string_val: "continue;"
        string_val: "\'*\'"
        string_val: "fs_incl"
        string_val: "\'n\'"
        string_val: "long_time_format"
        string_val: "\'/\'"
        string_val: "\'1\'"
        string_val: "\'+\'"
        string_val: "FTS_COMFOLLOW"
        string_val: "specified_mode"
        string_val: "ruid"
        string_val: "Version"
        string_val: "\'E\'"
        string_val: "s_major"
        string_val: "16"
        string_val: "MST[NEQ$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "maxsize"
        string_val: "\'x\'"
        string_val: "mode_adjust"
        string_val: "t1"
        string_val: "PRINT_NODENAME"
        string_val: "opt_fileno"
        string_val: "ncolumns"
        string_val: "cp"
        string_val: "fill_up"
        string_val: "lr_44"
        string_val: "print_name"
        string_val: "fname"
        string_val: "_invalid"
        string_val: "isatty"
        string_val: "PRINT_PROCESSOR"
        string_val: "FTS_LOGICAL"
        string_val: "\'o\'"
        string_val: "MUST_BE_OPERAND"
        string_val: "lr_36"
        string_val: "goto"
        string_val: "_suffix"
        string_val: "chmod_succeeded"
        string_val: "fopen"
        string_val: "MST[NEQ$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[A!CONSTVAL$0$]MSP[N]"
        string_val: "\'f\'"
        string_val: "set_security_context"
        string_val: "lr_30"
        string_val: "assert"
        string_val: "SIZE_MAX"
        string_val: "CAN_MODE_MASK"
        string_val: "tmp"
        string_val: "cwd_n_used"
        string_val: ">="
        string_val: "VERSION_OPTION_DESCRIPTION"
        string_val: "\'l\'"
        string_val: "warn"
        string_val: "preserve_root"
        string_val: "strtol_error"
        string_val: "length_modifier_len"
        string_val: "i_minor"
        string_val: "whatfile"
        string_val: "\'j\'"
        string_val: "lr_34"
        string_val: "header"
        string_val: "dry_run"
        string_val: "NO_GID"
        string_val: "pdir"
        string_val: "out"
        string_val: "quiet"
        string_val: "S_ISDIR"
        string_val: "S_IRWXUGO"
        string_val: "ngettext"
        string_val: "boot_time"
        string_val: "UNLIKELY"
        string_val: "upmins"
        string_val: "newtab"
        string_val: "localtime"
        string_val: "strict"
        string_val: "stderr"
        string_val: "num"
        string_val: "lr_27"
        string_val: "prevline"
        string_val: "loads"
        string_val: "group_name"
        string_val: "ENOENT"
        string_val: "enum"
        string_val: "can_relative_to"
        string_val: "hextobin"
        string_val: "valid_numbers"
        string_val: "select_plural"
        string_val: "infiles"
        string_val: "file_name"
        string_val: "dest_dir_arg"
        string_val: "u_argc"
        string_val: "shell"
        string_val: "gids"
        string_val: "fts_close"
        string_val: "result"
        string_val: "columns"
        string_val: "#else"
        string_val: "option_specified_date"
        string_val: "fts_read"
        string_val: "value"
        string_val: "stream"
        string_val: "device"
        string_val: "suffix_len"
        string_val: "MST[STMT!TRAPSTMT]MSP[S]"
        string_val: "pwd"
        string_val: "\'%\'"
        string_val: "component_specified"
        string_val: "no_dereference"
        string_val: "ISDIGIT"
        string_val: "immediate_dirs"
        string_val: "newline"
        string_val: "MST[EQ$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "FADVISE_SEQUENTIAL"
        string_val: "xstrtoumax"
        string_val: "fadvise"
        string_val: "MST[EQ$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "line_allocated"
        string_val: "stat_flags"
        string_val: "parse_long_options"
        string_val: "lr_29"
        string_val: "xalloc_die"
        string_val: "sum_func"
        string_val: "read_tokens"
        string_val: "caught_signals"
        string_val: "intmax_t"
        string_val: "name_max"
        string_val: "got_size"
        string_val: "mode_t"
        string_val: "when"
        string_val: "str"
        string_val: "nproc"
        string_val: "invalid"
        string_val: "hp"
        string_val: "check_extra_portability"
        string_val: "set_date"
        string_val: "file_stats"
        string_val: "MST[EQ$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MIN"
        string_val: "nsigs"
        string_val: "fail"
        string_val: "fstat"
        string_val: "base"
        string_val: "format_str"
        string_val: "element"
        string_val: "naively_expected_mode"
        string_val: "active_dir_set"
        string_val: "multiple_names"
        string_val: "st_size"
        string_val: "length_modifier"
        string_val: "NO_UID"
        string_val: "MST[EQ$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "digest_file"
        string_val: "MST[EQ$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "ls_block_size"
        string_val: "lr_42"
        string_val: "valid_number"
        string_val: "print_with_color"
        string_val: "lr_32"
        string_val: "s_minor"
        string_val: "open"
        string_val: "O_NOCTTY"
        string_val: "infile"
        string_val: "IF_LINT"
        string_val: "dest_dir"
        string_val: "fprintf"
        string_val: "can_relative_base"
        string_val: "lr_37"
        string_val: "can_fname"
        string_val: "devmsg"
        string_val: "is_j2"
        string_val: "print_group"
        string_val: "MST[SWITCH!REMOVECASES$1$]MSP[N]"
        string_val: "\'A\'"
        string_val: "open_errno"
        string_val: "time_style_option"
        string_val: "MST[EQ$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "\'-\'"
        string_val: "st2"
        string_val: "st1"
        string_val: "filename_quoting_options"
        string_val: "field"
        string_val: "FTS"
        string_val: "S_ISREG"
        string_val: "use_dest_dir"
        string_val: "CAN_MISSING"
        string_val: "g"
        string_val: "wc_file"
        string_val: "fp1"
        string_val: "slash"
        string_val: "entries"
        string_val: "MST[EQ$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "setvbuf"
        string_val: "xprintf"
        string_val: "string_to_join_field"
        string_val: "show_all_fs"
        string_val: "file_size"
        string_val: "n_args"
        string_val: "human_options"
        string_val: "sort_time"
        string_val: "n_gids"
        string_val: "field_data"
        string_val: "ws"
        string_val: "V_off"
        string_val: "MIGHT_BE_O_ARG"
        string_val: "MODE_RW_UGO"
        string_val: "current_column"
        string_val: "getline"
        string_val: "MST[EQ$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "fputc"
        string_val: "defaultcon"
        string_val: "restorecon_private"
        string_val: "FTSENT"
        string_val: "\'u\'"
        string_val: "not_an_escape:"
        string_val: "MST[NEQ$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "STATUS_OPTION"
        string_val: "MST[EQ$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "OUTPUT_MODE"
        string_val: "FTS_NOSTAT"
        string_val: "15"
        string_val: "verbose"
        string_val: "lr_31"
        string_val: "MST[PADD$A1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "wrap_write"
        string_val: "table"
        string_val: "relative_to"
        string_val: "base64_encode"
        string_val: "NO_PRESERVE_ROOT"
        string_val: "CHECK_ORDER_ENABLED"
        string_val: "relative_base"
        string_val: "isxdigit"
        string_val: "digest_check"
        string_val: "nrows"
        string_val: "IS_USER_PROCESS"
        string_val: "lr_41"
        string_val: "do_v9"
        string_val: "cksum"
        string_val: "use_names"
        string_val: "pre"
        string_val: "linep"
        string_val: "\'q\'"
        string_val: "scale_from"
        string_val: "process_line"
        string_val: "fread"
        string_val: "check_order"
        string_val: "node_type"
        string_val: "C_LEFT"
        string_val: "new_format"
        string_val: "double"
        string_val: "grouping"
        string_val: "strstr"
        string_val: "string"
        string_val: "input_fh"
        string_val: "errors"
        string_val: "memcmp"
        string_val: "lr_35"
        string_val: "MST[NEQ$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "n_misformatted_lines"
        string_val: "msg_mut_excl"
        string_val: "MST[NEQ$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "xmemcoll"
        string_val: "xfts_open"
        string_val: "to_uchar"
        string_val: "prec"
        string_val: "get_reldate"
        string_val: "n_files"
        string_val: "MST[EQ$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "posix_format"
        string_val: "MST[NEQ$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "getc"
        string_val: "MST[NEQ$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "STRUCT_UTMP"
        string_val: "failed"
        string_val: "specified_context"
        string_val: "isspace"
        string_val: "MST[PADD$A1$@2$!PSUB$A1$@2$]MSP[N]"
        string_val: "stdbuf"
        string_val: "print_block_size"
        string_val: "avg"
        string_val: "UTIME_OMIT"
        string_val: "unknown"
        string_val: "0xFFFFFFFF"
        string_val: "pw"
        string_val: "n_properly_formatted_lines"
        string_val: "\'\\b\'"
        string_val: "\'\\a\'"
        string_val: "lr_39"
        string_val: "0xf"
        string_val: "O_RDONLY"
        string_val: "t0"
        string_val: "_prefix"
        string_val: "\'=\'"
        string_val: "diagnose_surprises"
        string_val: "MST[P!PLEFTINC$P$]MSP[N]"
        string_val: "scale_none"
        string_val: "ctx"
        string_val: "users"
        string_val: "fts_path"
        string_val: "memmove"
        string_val: "puts"
        string_val: "isbase64"
        string_val: "MST[P!PLEFTDEC$P$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "tab"
        string_val: "MST[EQ$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "multiplier"
        string_val: "MST[ADD$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "LS_FAILURE"
        string_val: "ws_col"
        string_val: "vstrtoimax"
        string_val: "MST[EQ$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "CHECK_ORDER_DISABLED"
        string_val: "MST[ADD$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "\'3\'"
        string_val: "names"
        string_val: "fts_set"
        string_val: "batch_file"
        string_val: "MST[C!ADD$C$1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "match"
        string_val: "validlen"
        string_val: "x_count"
        string_val: "reference"
        string_val: "mbstate"
        string_val: "_data"
        string_val: "upsecs"
        string_val: "maxlen"
        string_val: "O_WRONLY"
        string_val: "O_NONBLOCK"
        string_val: "MST[ADD$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "strchr"
        string_val: "hbuf"
        string_val: "fwrite"
        string_val: "O_CREAT"
        string_val: "DELIMITER_DEFAULT"
        string_val: "fs_excl"
        string_val: "MST[NEQ$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "ftspath"
        string_val: "CAN_EXISTING"
        string_val: "time_atime"
        string_val: "INT_MAX"
        string_val: "512"
        string_val: "MST[ADD$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "DEREFERENCE_OPTION"
        string_val: "mkstemp_len"
        string_val: "mempcpy"
        string_val: "off_t"
        string_val: "conv_exit_code"
        string_val: "MST[ADD$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "datestr"
        string_val: "MST[P!PRIGHTDEC$P$]MSP[N]"
        string_val: "version_etc"
        string_val: "set_char_quoting"
        string_val: "ch_status"
        string_val: "used"
        string_val: "hardware_platform"
        string_val: "delim"
        string_val: "_IONBF"
        string_val: "PRINT_OPERATING_SYSTEM"
        string_val: "argv_iter_n_args"
        string_val: "DEC_B64BLOCKSIZE"
        string_val: "file_exists"
        string_val: "argument"
        string_val: "args"
        string_val: "PRINT_HARDWARE_PLATFORM"
        string_val: "signal"
        string_val: "line_number"
        string_val: "show_listed_fs"
        string_val: "MST[P!PRIGHTINC$P$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "lr_38"
        string_val: "print_bytes"
        string_val: "obstack_init"
        string_val: "memcpy"
        string_val: "timespec"
        string_val: "FROM_OPTION"
        string_val: "C_RIGHT"
        string_val: "LONGINT_INVALID"
        string_val: "ignore_garbage"
        string_val: "op0"
        string_val: "allow_options"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "lr_43"
        string_val: "is_smack_enabled"
        string_val: "ssize_t"
        string_val: "\'.\'"
        string_val: "x_len"
        string_val: "tmpl"
        string_val: "suff_len"
        string_val: "USAGE_BUILTIN_WARNING"
        string_val: "input"
        string_val: "\'F\'"
        string_val: "seen_unpairable"
        string_val: "file_output_block_size"
        string_val: "file_human_output_opts"
        string_val: "LC_TIME"
        string_val: "username"
        string_val: "version"
        string_val: "release"
        string_val: "machine"
        string_val: "p0"
        string_val: "o"
        string_val: "many_per_line"
        string_val: "MST[ASSIGN$V1$@2$!BITOR$V1$@2$]MSP[N]"
        string_val: "user_name"
        string_val: "recursive"
        string_val: "UTMP_FILE"
        string_val: "MST[EQ$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "tok"
        string_val: "known_name_max"
        string_val: "xnrealloc"
        string_val: "MST[EQ$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "check_component_lengths"
        string_val: "fp2"
        string_val: "MST[EQ$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "p1"
        string_val: "ignore"
        string_val: "fs_select_list"
        string_val: "rsize"
        string_val: "process_file"
        string_val: "human_autoscale"
        string_val: "bin_result"
        string_val: "CHECK_ORDER_DEFAULT"
        string_val: "xfreopen"
        string_val: "uname_mode"
        string_val: "remove_empty_parents"
        string_val: "set_defaultcon"
        string_val: "raise"
        string_val: "INODES_MODE"
        string_val: "trimmed_name"
        string_val: "hard_locale"
        string_val: "dev_t"
        string_val: "hard_LC_COLLATE"
        string_val: "display_return"
        string_val: "dev_ino_buf"
        string_val: "HAVE_UTMP_H"
        string_val: "HAVE_UTMPX_H"
        string_val: "\'#\'"
        string_val: "human_readable"
        string_val: "get_entry"
        string_val: "NOT_AN_INODE_NUMBER"
        string_val: "qmark_funny_chars"
        string_val: "thispend"
        string_val: "sigaction"
        string_val: "gobble_file"
        string_val: "gmp_printf"
        string_val: "MST[EQ$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "saved_errno"
        string_val: "lr_93"
        string_val: "color_always"
        string_val: "lr_94"
        string_val: "context"
        string_val: "print_formatted"
        string_val: "file_type"
        string_val: "touch"
        string_val: "kibibytes_specified"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "IS_ABSOLUTE_FILE_NAME"
        string_val: "return;"
        string_val: "defined"
        string_val: "print_scontext"
        string_val: "inval_ignore"
        string_val: "human_ceiling"
        string_val: "SSIZE_MAX"
        string_val: "MST[EQ$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "DEC_BLOCKSIZE"
        string_val: "eolchar"
        string_val: "grp"
        string_val: "FTS_SKIP"
        string_val: "end_ptr"
        string_val: "lop"
        string_val: "hip"
        string_val: "oflags"
        string_val: "userspec"
        string_val: "rm_rup"
        string_val: "rm_rdn"
        string_val: "UINT_MAX"
        string_val: "scale_to"
        string_val: "MST[C!ADD$C$-1$]MSP[S]"
        string_val: "ref_fd"
        string_val: "decimal_point"
        string_val: "MST[PADD$A1$@2$!OPERAND$A1$]MSP[N]"
        string_val: "next"
        string_val: "format_needs_stat"
        string_val: "format_int"
        string_val: "time_t"
        string_val: "physmem_available"
        string_val: "memcmp2"
        string_val: "fileno"
        string_val: "changed"
        string_val: "show_local_fs"
        string_val: "FTS_DEFER_STAT"
        string_val: "lr_45"
        string_val: "emit_mandatory_arg_note"
        string_val: "describe_change"
        string_val: "canonicalize_filename_mode"
        string_val: "umaxtostr"
        string_val: "print_direc"
        string_val: "just_echo;"
        string_val: "amtime_now"
        string_val: "SIG_IGN"
        string_val: "DIGEST_TYPE_STRING"
        string_val: "tabsize"
        string_val: "print_words"
        string_val: "n_improperly_formatted_lines"
        string_val: "clear_files"
        string_val: "MST[EQ$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "n_groups"
        string_val: "V_high"
        string_val: "fs_name"
        string_val: "empty_filler"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "EINVAL"
        string_val: "st_gid"
        string_val: "n_gids_allocated"
        string_val: "file_end"
        string_val: "classify"
        string_val: "EPERM"
        string_val: "fd_reopen"
        string_val: "decode_switches"
        string_val: "EISDIR"
        string_val: "UT_TYPE_BOOT_TIME"
        string_val: "UT_TIME_MEMBER"
        string_val: "readlinebuffer"
        string_val: "INT_MIN"
        string_val: "argv_iter_done:"
        string_val: "*descriptors"
        string_val: "(int)"
        string_val: "use_ref"
        string_val: "mkfifo"
        string_val: "S_IFIFO"
        string_val: "v"
        string_val: "print_lines"
        string_val: "lstat"
        string_val: "fs_exclude_list"
        string_val: "\'6\'"
        string_val: "\'5\'"
        string_val: "\'4\'"
        string_val: "ignore_interrupts"
        string_val: "stdin_only"
        string_val: "process_path"
        string_val: "dirname_quoting_options"
        string_val: "argv_iter_init_argv"
        string_val: "[]"
        string_val: "MIGHT_BE_J1_ARG"
        string_val: "fts_cwd_fd"
        string_val: "\'R\'"
        string_val: "one_per_line"
        string_val: "\'Z\'"
        string_val: "\'B\'"
        string_val: "print_type"
        string_val: "lr_107"
        string_val: "inval_abort"
        string_val: "c_strtod"
        string_val: "quotearg"
        string_val: "READ_UTMP_CHECK_PIDS"
        string_val: "MST[PADD$P1$@2$!PLEFTDEC$P1$]MSP[N]"
        string_val: "validate_file_name"
        string_val: "print_group_list"
        string_val: "no_leading_hyphen"
        string_val: "lr_33"
        string_val: "lchmod"
        string_val: "getgid"
        string_val: "getegid"
        string_val: "S_ISLNK"
        string_val: "EOVERFLOW"
        string_val: "suf"
        string_val: "is_colored"
        string_val: "get_stat_mtime"
        string_val: "dev_ino"
        string_val: "chown_files"
        string_val: "ROOT_DEV_INO_WARN"
        string_val: "ROOT_DEV_INO_CHECK"
        string_val: "ref_context"
        string_val: "lr_40"
        string_val: "link"
        string_val: "/="
        string_val: "tty"
        string_val: "skip_fields"
        string_val: "dev_ino_free"
        string_val: "MST[PADD$P1$@2$!PRIGHTINC$P1$]MSP[N]"
        string_val: "ignore_value"
        string_val: "suppress_file_err"
        string_val: "posixtime"
        string_val: "escape"
        string_val: "7"
        string_val: "number_width"
        string_val: "clone_quoting_options"
        string_val: "SAME_INODE"
        string_val: "MST[EQ$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "change_file_owner"
        string_val: "add_file_name"
        string_val: "x"
        string_val: "sort_size"
        string_val: "chmodat"
        string_val: "add_field_list"
        string_val: "DEREF_UNDEFINED"
        string_val: "posix_prefix"
        string_val: "print_dir_name"
        string_val: "linebuffer"
        string_val: "MST[PADD$P1$@2$!PRIGHTDEC$P1$]MSP[N]"
        string_val: "MST[PADD$P1$@2$!PLEFTINC$P1$]MSP[N]"
        string_val: "sb"
        string_val: "print_factors"
        string_val: "decode_output_arg"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "DEREF_COMMAND_LINE_SYMLINK_TO_DIR"
        string_val: "__GLIBC__"
        string_val: "min_digest_line_length"
        string_val: "MST[SWITCH!SHUFFLECASESDESTS$2$]MSP[S]"
        string_val: "free_spareline"
        string_val: "charlen"
        string_val: "block_mode"
        string_val: "min"
        string_val: "max_line_length"
        string_val: "SIG_DFL"
        string_val: "total_words"
        string_val: "total_lines"
        string_val: "total_chars"
        string_val: "TAG_OPTION"
        string_val: "STRICT_OPTION"
        string_val: "MIN_DIGEST_LINE_LENGTH"
        string_val: "DIGEST_HEX_BYTES"
        string_val: "silent"
        string_val: "sigismember"
        string_val: "sa_handler"
        string_val: "SA_NOCLDSTOP"
        string_val: "uname"
        string_val: "sysname"
        string_val: "nodename"
        string_val: "deprecated_t_option"
        string_val: "0xffffffff"
        string_val: "list_entries_users"
        string_val: "do_stdin"
        string_val: "last_component"
        string_val: "add_ignore_pattern"
        string_val: "HAVE_PROC_UPTIME"
        string_val: "*u"
        string_val: "restorecon"
        string_val: "fts_number"
        string_val: "process_files"
        string_val: "pathconf"
        string_val: "execvp"
        string_val: "arch_long_options"
        string_val: "UNAME_ARCH"
        string_val: "EXIT_ENOENT"
        string_val: "EXIT_CANNOT_INVOKE"
        string_val: "ARCH_AUTHORS"
        string_val: "skip_file"
        string_val: "dot"
        string_val: "xmalloc"
        string_val: "getuid"
        string_val: "dev_ino_obstack"
        string_val: "MST[SUB$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "DEFAULT_ECHO_TO_XPG"
        string_val: "print_chars"
        string_val: "nl_langinfo"
        string_val: "default_template"
        string_val: "b"
        string_val: "MST[EQ$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "\'G\'"
        string_val: "xstrdup"
        string_val: "valid_date"
        string_val: "utmp_buf"
        string_val: "dev_ino_hash"
        string_val: "dev_ino_compare"
        string_val: "MST[EQ$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "time_args"
        string_val: "print_linelength"
        string_val: "hash_initialize"
        string_val: "dev_debug"
        string_val: "TIME_OPTION"
        string_val: "MST[SUB$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "INITIAL_TABLE_SIZE"
        string_val: "time"
        string_val: "n_users"
        string_val: "create_directory"
        string_val: "REFERENCE_FILE_OPTION"
        string_val: "PRESERVE_ROOT"
        string_val: "NOCHECK_ORDER_OPTION"
        string_val: "MST[EQ$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "CHECK_ORDER_OPTION"
        string_val: "umask"
        string_val: "freecon"
        string_val: "dir_name"
        string_val: "alloc_field"
        string_val: "MST[NEQ$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "DEV_DEBUG_OPTION"
        string_val: "line_chars_allocated"
        string_val: "cwd_n_alloc"
        string_val: "mknod"
        string_val: "MST[ADD$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "#ifdef"
        string_val: "mbstate_t"
        string_val: "writeline"
        string_val: "sort_none"
        string_val: "print_pairables"
        string_val: "VERSION"
        string_val: "set_datestr"
        string_val: "mbrlen"
        string_val: "human_SI"
        string_val: "fileinfo"
        string_val: "dir_len"
        string_val: "can_fname2"
        string_val: "MST[ADD$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "print_grand_total"
        string_val: "only_file_2"
        string_val: "setuid"
        string_val: "setgid"
        string_val: "fs_type_list"
        string_val: "fs_next"
        string_val: "bin_buffer_unaligned"
        string_val: "MST[SUB$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "DIGEST_ALIGN"
        string_val: "print_table"
        string_val: "AT_FDCWD"
        string_val: "only_file_1"
        string_val: "need_dir"
        string_val: "MST[SUB$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "ARRAY_CARDINALITY"
        string_val: "strto2uintmax"
        string_val: "queue_directory"
        string_val: "MST[SUB$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "sort_files"
        string_val: "both"
        string_val: "NAME_MAX_MINIMUM"
        string_val: "MST[SUB$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[C!CONSTVAL$0$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!LE$@2$V1$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "lr_108"
        string_val: "MST[ASSIGN$V1$@2$!OPERAND$V1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "DIGEST_STREAM"
        string_val: "SUFFIX_OPTION"
        string_val: "MST[ADD$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MAX"
        string_val: "DEREF_NEVER"
        string_val: "0x03"
        string_val: "tee_files"
        string_val: "siginterrupt"
        string_val: "print_factors_single"
        string_val: "posix2_version"
        string_val: "mpz_clear"
        string_val: "MST[EQ$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "DIRED_PUTCHAR"
        string_val: "200112"
        string_val: "MST[NEQ$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "print_current_files"
        string_val: "parse_len"
        string_val: "get_quoting_style"
        string_val: "MST[ADD$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "max_idx"
        string_val: "inval_warn"
        string_val: "fdutimensat"
        string_val: "extract_dirs_from_files"
        string_val: "V_changes_only"
        string_val: "EXIT_CONVERSION_WARNINGS"
        string_val: "AT_SYMLINK_NOFOLLOW"
        string_val: "\'I\'"
        string_val: "uname_long_options"
        string_val: "mp_factor_clear"
        string_val: "freeline"
        string_val: "a"
        string_val: "QUIET_OPTION"
        string_val: "sync"
        string_val: "quoting_style_args"
        string_val: "MST[ADD$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MIN_COLUMN_WIDTH"
        string_val: "xfields"
        string_val: "line_no"
        string_val: "MST[SUB$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "q_style"
        string_val: "getpwuid"
        string_val: "alg"
        string_val: "xstrtol"
        string_val: "sorted_file"
        string_val: "read"
        string_val: "component_start"
        string_val: "MST[SUB$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "EINTR"
        string_val: "MST[SUB$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTINC$P1$]MSP[N]"
        string_val: "xstrtol_fatal"
        string_val: "sa_mask"
        string_val: "sa_flags"
        string_val: "prog_fprintf"
        string_val: "SA_RESTART"
        string_val: "mount_list"
        string_val: "lr_103"
        string_val: "SI_PLATFORM"
        string_val: "MST[SUB$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_ADD$A1$@2$]MSP[N]"
        string_val: "\'k\'"
        string_val: "initialize_exit_failure"
        string_val: "spareline"
        string_val: "show_date"
        string_val: "quoting_style_vals"
        string_val: "quotearg_colon"
        string_val: "hide"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTINC$P1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "num_processors"
        string_val: "nfactors"
        string_val: "field_data_t"
        string_val: "alloc_table_row"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTDEC$P1$]MSP[N]"
        string_val: "BUFLEN"
        string_val: "lba"
        string_val: "SWAPLINES"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "reset_line"
        string_val: "res"
        string_val: "init_linep"
        string_val: "seconds"
        string_val: "readlinebuffer_delim"
        string_val: "do_ftruncate"
        string_val: "ALG_SQUFOF"
        string_val: "X2NREALLOC"
        string_val: "S_IFBLK"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[N]"
        string_val: "#ifndef"
        string_val: "xstrtod"
        string_val: "time_masks"
        string_val: "_IOLBF"
        string_val: "\'<\'"
        string_val: "setup_padding_buffer"
        string_val: "gid_to_name"
        string_val: "get_root_dev_ino"
        string_val: "free_ent"
        string_val: "EXIT_STATUS"
        string_val: "set_additional_groups"
        string_val: "make_ancestor_function"
        string_val: "gr_gid"
        string_val: "MST[LT$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "pw_gid"
        string_val: "getgrnam"
        string_val: "format_sp_int"
        string_val: "color_types"
        string_val: "color_if_tty"
        string_val: "color_args"
        string_val: "auto_padding"
        string_val: "COLOR_OPTION"
        string_val: "optc_to_fileno"
        string_val: "new_perms"
        string_val: "naively_expected_perms"
        string_val: "lr_106"
        string_val: "interrupt_signal"
        string_val: "THOUSEP"
        string_val: "NODEV"
        string_val: "MST[BITAND$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "ENC_B64BLOCKSIZE"
        string_val: "stop_signal_count"
        string_val: "setfscreatecon"
        string_val: "MST[LT$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "short_options"
        string_val: "refstats"
        string_val: "80"
        string_val: "smack_set_label_for_self"
        string_val: "\'T\'"
        string_val: "append"
        string_val: "SIGSTOP"
        string_val: "MST[LT$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "subdired_obstack"
        string_val: "apply_suffix"
        string_val: "dired_obstack"
        string_val: "MST[LT$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!ABS$V1$]MSP[N]"
        string_val: "xcharalloc"
        string_val: "locale_time_style"
        string_val: "iso_time_style"
        string_val: "decode"
        string_val: "component_len"
        string_val: "\'\\v\'"
        string_val: "prepare_padded_number"
        string_val: "MST[BITAND$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!LT$@2$V1$]MSP[N]"
        string_val: "sigaddset"
        string_val: "pw_name"
        string_val: "posixly_correct"
        string_val: "none"
        string_val: "memset"
        string_val: "ai_err"
        string_val: "MIGHT_BE_J2_ARG"
        string_val: "\'D\'"
        string_val: "\'C\'"
        string_val: "MST[BITAND$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[@!ABS$@$]MSP[S]"
        string_val: "*stats"
        string_val: "stdout_closed"
        string_val: "not_an_escape;"
        string_val: "lr_88"
        string_val: "close_stream"
        string_val: "MST[EQ$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[AND$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "utsname"
        string_val: "settime"
        string_val: "set_libstdbuf_options"
        string_val: "chopt_free"
        string_val: "MST[AND$@1$@2$!OR$@1$@2$]MSP[N]"
        string_val: "\'9\'"
        string_val: "\'8\'"
        string_val: "mpz_init_set_str"
        string_val: "mp_factor"
        string_val: "mode_string"
        string_val: "count_consecutive_X_s"
        string_val: "chdir"
        string_val: "_GL_ATTRIBUTE_PURE"
        string_val: "SIGINT"
        string_val: "MST[LT$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "tm_mon"
        string_val: "require_sync"
        string_val: "chroot"
        string_val: "MST[LT$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "\':\'"
        string_val: "tm_year"
        string_val: "tm_sec"
        string_val: "tm_min"
        string_val: "tm_mday"
        string_val: "tm_hour"
        string_val: "save_argc"
        string_val: "passwd"
        string_val: "getgrgid"
        string_val: "dired_dump_obstack"
        string_val: "OFF_T_MAX"
        string_val: "MST[LT$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "1900L"
        string_val: "12"
        string_val: "parse_user_spec"
        string_val: "just_echo:"
        string_val: "c_isspace"
        string_val: "argv_iter_done;"
        string_val: "OFF_T_MIN"
        string_val: "MST[BITAND$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[AND$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "EBADF"
        string_val: "MST[LT$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "Chown_option"
        string_val: "remove_parents"
        string_val: "is_selinux_enabled"
        string_val: "group"
        string_val: "found"
        string_val: "directory"
        string_val: "directories_first"
        string_val: "print_unpairables_2"
        string_val: "print_unpairables_1"
        string_val: "ignore_fail_on_non_empty"
        string_val: "cwd_file"
        string_val: "_POSIX_PATH_MAX"
        string_val: "POSIX_MODE"
        string_val: "PATH_MAX_MINIMUM"
        string_val: "MST[LT$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "restore_default_color"
        string_val: "print_inode"
        string_val: "parse_group"
        string_val: "MST[LT$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "HUMAN_MODE"
        string_val: "xstrtoimax"
        string_val: "fflush"
        string_val: "caption"
        string_val: "MST[SUB$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "DEFAULT_MODE"
        string_val: "*cwd_file"
        string_val: "split_3"
        string_val: "lr_99"
        string_val: "hex_digits"
        string_val: "add_excluded_fs_type"
        string_val: "MST[LT$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "DEBUG_OPTION"
        string_val: "process_dir"
        string_val: "getloadavg"
        string_val: "getfilecon"
        string_val: "OUTPUT_OPTION"
        string_val: "MST[NEQ$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "IGNORE_DEFAULT"
        string_val: "\',\'"
        string_val: "warning"
        string_val: "strrchr"
        string_val: "sort_version"
        string_val: "numeric_ids"
        string_val: "do_decode"
        string_val: "batch_convert"
        string_val: "_PC_NAME_MAX"
        string_val: "MST[LT$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "length_buf"
        string_val: "\'\\\'\'"
        string_val: "process_suffixed_number"
        string_val: "nextarg"
        string_val: "lr_91"
        string_val: "lr_90"
        string_val: "hide_patterns"
        string_val: "geteuid"
        string_val: "MST[SUB$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "ptr_align"
        string_val: "minor_t"
        string_val: "major_t"
        string_val: "__GLIBC_MINOR__"
        string_val: "X2REALLOC"
        string_val: ">>="
        string_val: "suffix_char"
        string_val: "q_freq"
        string_val: "base64_decode_ctx"
        string_val: "MST[LT$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "IGNORE_FAIL_ON_NON_EMPTY_OPTION"
        string_val: "setgroups"
        string_val: "context_t"
        string_val: "TIOCGWINSZ"
        string_val: "NPROC_ALL"
        string_val: "ALL_OPTION"
        string_val: "sysv_sum_file"
        string_val: "sort_reverse"
        string_val: "lr_89"
        string_val: "lr_102"
        string_val: "bsd_sum_file"
        string_val: "TOTAL_OPTION"
        string_val: "MST[LT$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "current_time"
        string_val: "MST[LT$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "LOOP_DETECT"
        string_val: "safe_read"
        string_val: "fts_level"
        string_val: "SAFE_READ_ERROR"
        string_val: "PORTABILITY_OPTION"
        string_val: "MST[SUB$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "FTS_NS"
        string_val: "FTS_AGAIN"
        string_val: "print_esc"
        string_val: "mode_compile"
        string_val: "logical_getcwd"
        string_val: "context_free"
        string_val: "MST[LT$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "AI_ERR_MEM"
        string_val: "userid_compare"
        string_val: "human_base_1024"
        string_val: "MST[SUB$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[AND$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "qsort"
        string_val: "extract_trimmed_name"
        string_val: "UNAME_UNAME"
        string_val: "MST[SUB$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "ignorable_failure"
        string_val: "extern"
        string_val: "do_encode"
        string_val: "compute_number_width"
        string_val: "MST[SUB$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "ioctl"
        string_val: "autoformat"
        string_val: "MST[SUB$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "_round"
        string_val: "N_"
        string_val: "MST[SUB$@1$@2$!TRAPSTMT]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[AND$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "strip_trailing_slashes"
        string_val: "round_types"
        string_val: "round_args"
        string_val: "rfc_2822_format"
        string_val: "lr_96"
        string_val: "UTIME_NOW"
        string_val: "TYPE_MAXIMUM"
        string_val: "PADDING_OPTION"
        string_val: "MST[NEQ$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "GROUPING_OPTION"
        string_val: "Change_status"
        string_val: "CH_SUCCEEDED"
        string_val: "CH_NO_CHANGE_REQUESTED"
        string_val: "CH_NOT_APPLIED"
        string_val: "CH_FAILED"
        string_val: "security_context_t"
        string_val: "nomoreargs"
        string_val: "MST[NEQ$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "HEADER_OPTION"
        string_val: "ttyname"
        string_val: "mode_create_from_ref"
        string_val: "get_stat_atime"
        string_val: "endgrent"
        string_val: "created_directory_format"
        string_val: "_PC_PATH_MAX"
        string_val: "TTY_FAILURE"
        string_val: "MAXGID"
        string_val: "GID_T_MAX"
        string_val: "print_padded_number"
        string_val: "portable_chars_only"
        string_val: "parse_size"
        string_val: "get_input_fstatus"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!NEQ$V1$@2$]MSP[N]"
        string_val: "mode_changed"
        string_val: "mode_change"
        string_val: "lseek"
        string_val: "argv_iter_err"
        string_val: "_POSIX_NAME_MAX"
        string_val: "MST[SUB$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "type"
        string_val: "l"
        string_val: "di"
        string_val: "SEEK_END"
        string_val: "MST[SUB$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "EXPR_INVALID"
        string_val: "\'g\'"
        string_val: "savewd_process_files"
        string_val: "no_more_flag_characters;"
        string_val: "no_more_flag_characters:"
        string_val: "mode_bits"
        string_val: "LONGEST_HUMAN_READABLE"
        string_val: "rmdir"
        string_val: "long_opts"
        string_val: "grand_fsu"
        string_val: "fprintftime"
        string_val: "chopt_init"
        string_val: "VALUE"
        string_val: "USERSPEC"
        string_val: "MST[SUB$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$A1$@2$!PADD_DEREF$A1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "GROUPS"
        string_val: "257"
        string_val: "color_symlink_as_referent"
        string_val: "check_symlink_color"
        string_val: "MST[SUB$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[PDEREF_ADD$A1$@2$!PSUB_DEREF$A1$@2$]MSP[N]"
        string_val: "C_EXEC"
        string_val: "sysinfo"
        string_val: "print_esc_string"
        string_val: "fts_errno"
        string_val: "MST[LT$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "HAVE_SYSINFO"
        string_val: "C_MISSING"
        string_val: "stophandler"
        string_val: "program_path"
        string_val: "print_author"
        string_val: "me"
        string_val: "eval"
        string_val: "_field"
        string_val: "HOST_OPERATING_SYSTEM"
        string_val: "FSTYPE_FIELD"
        string_val: "*="
        string_val: "tcgetpgrp"
        string_val: "sighandler"
        string_val: "sigemptyset"
        string_val: "ignorable_ctx_err"
        string_val: "abort"
        string_val: "SIGTSTP"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!LT$V1$@2$]MSP[N]"
        string_val: "IGNORE_DOT_AND_DOTDOT"
        string_val: "FORMAT_OPTION"
        string_val: "remove_suffix"
        string_val: "parse_format_string"
        string_val: "padding_alignment"
        string_val: "file_systems_processed"
        string_val: "MBS_ALIGN_LEFT"
        string_val: "\'U\'"
        string_val: "y"
        string_val: "time_style_args"
        string_val: "sort_extension"
        string_val: "pw_uid"
        string_val: "lr_105"
        string_val: "lr_104"
        string_val: "getpwnam"
        string_val: "base_name"
        string_val: "MST[LT$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "IS_RELATIVE_FILE_NAME"
        string_val: "HIDE_OPTION"
        string_val: "FILE_SYSTEM_PREFIX_LEN"
        string_val: "AUTHOR_OPTION"
        string_val: "100"
        string_val: "write_counts"
        string_val: "get_line"
        string_val: "free_pending_ent"
        string_val: "lr_97"
        string_val: "lr_87"
        string_val: "format_needs_type"
        string_val: "FIELD_OPTION"
        string_val: "\'>\'"
        string_val: "rm_min"
        string_val: "rm_max"
        string_val: "read_file_system_list"
        string_val: "fts_statp"
        string_val: "MST[LE$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "DIGEST_BIN_BYTES"
        string_val: "time_style_types"
        string_val: "strmode"
        string_val: "fmt"
        string_val: "WTMP_FILE"
        string_val: "MST[SWITCH!REMOVECASES$1$]MSP[S]"
        string_val: "MST[LT$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[LE$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "realpath_canon"
        string_val: "n0"
        string_val: "makedev"
        string_val: "initbuffer"
        string_val: "indicator_style_types"
        string_val: "indicator_style_args"
        string_val: "context_new"
        string_val: "QUOTING_STYLE_OPTION"
        string_val: "MST[BITAND$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "INDICATOR_STYLE_OPTION"
        string_val: "ls_mode"
        string_val: "MST[BITAND$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "LS_MULTI_COL"
        string_val: "unit_to_umax"
        string_val: "putenv"
        string_val: "fts_info"
        string_val: "file_size_width"
        string_val: "MST[OR$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "FTS_DP"
        string_val: "DATE_FMT_LANGINFO"
        string_val: "#"
        string_val: "mpz_t"
        string_val: "lr_98"
        string_val: "lines"
        string_val: "UCHAR_MAX"
        string_val: "MST[LT$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[LE$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "INT_BUFSIZE_BOUND"
        string_val: "xgetgroups"
        string_val: "scontext_width"
        string_val: "readtokens0_free"
        string_val: "minor_device_number_width"
        string_val: "major_device_number_width"
        string_val: "inode_number_width"
        string_val: "command_line_arg"
        string_val: "caught_sig"
        string_val: "block_size_width"
        string_val: "argv_iter_free"
        string_val: "TZSET"
        string_val: "PDS_TRAILING_YEAR"
        string_val: "OUTPUT_DELIMITER_OPTION"
        string_val: "MST[OR$@1$@2$!AND$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "argv_iterator"
        string_val: "MST[LE$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "LC_COLLATE"
        string_val: "padding_buffer"
        string_val: "owner_width"
        string_val: "nlink_width"
        string_val: "group_width"
        string_val: "gettime"
        string_val: "author_width"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "FILES0_FROM_OPTION"
        string_val: "time_spec_string"
        string_val: "time_spec"
        string_val: "n1"
        string_val: "iso_8601_format"
        string_val: "format_str_suffix"
        string_val: "format_str_prefix"
        string_val: "file_number"
        string_val: "any_has_acl"
        string_val: "MST[SUB$@1$@2$!DELSTMT]MSP[N]"
        string_val: "MST[EQ$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "LS_LS"
        string_val: "LS_LONG_FORMAT"
        string_val: "\'\\t\'"
        string_val: "specified_type"
        string_val: "specified_role"
        string_val: "specified_range"
        string_val: "maybe_close_stdout"
        string_val: "hash_get_n_entries"
        string_val: "hash_free"
        string_val: "bytes"
        string_val: "MST[NEQ$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!MOD$@2$V1$]MSP[N]"
        string_val: "\'\\r\'"
        string_val: "\'\\f\'"
        string_val: "with_commas"
        string_val: "rc"
        string_val: "count"
        string_val: "candidate"
        string_val: "MST[LE$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[LE$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "\'V\'"
        string_val: "print_owner"
        string_val: "join_header_lines"
        string_val: "MST[OR$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "mib"
        string_val: "endif"
        string_val: "PDS_SECONDS"
        string_val: "PDS_CENTURY"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "HEADER_LINE_OPTION"
        string_val: "\'\\x1B\'"
        string_val: "sysctl"
        string_val: "nsize"
        string_val: "mkdir_options"
        string_val: "get_header"
        string_val: "get_field_list"
        string_val: "flag_prove_primality"
        string_val: "STRNCMP_LIT"
        string_val: "MST[BITAND$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "time_mtime"
        string_val: "lr_109"
        string_val: "fxn"
        string_val: "decimal_point_length"
        string_val: "cputype"
        string_val: "MST[ADD$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "FILE_TYPE_INDICATOR_OPTION"
        string_val: "sort_name"
        string_val: "rm_rel"
        string_val: "perms"
        string_val: "lr_92"
        string_val: "linelength"
        string_val: "MST[LE$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "tcon"
        string_val: "quit;"
        string_val: "fts_accpath"
        string_val: "TIME_STYLE_OPTION"
        string_val: "SHOW_CONTROL_CHARS_OPTION"
        string_val: "RADIXCHAR"
        string_val: "MST[SUB$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[OR$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "CHMOD_MODE_BITS"
        string_val: "BLOCK_SIZE_OPTION"
        string_val: "11"
        string_val: "join"
        string_val: "int)"
        string_val: "STAT_SQUFOF"
        string_val: "RELATIVE_TO_OPTION"
        string_val: "RELATIVE_BASE_OPTION"
        string_val: "MST[NEQ$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!GE$V1$@2$]MSP[N]"
        string_val: "C_ORPHAN"
        string_val: "(unsigned"
        string_val: "usable_st_size"
        string_val: "path_prefix"
        string_val: "one"
        string_val: "STREQ_LEN"
        string_val: "MST[BITOR$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!EQ$V1$@2$]MSP[N]"
        string_val: "CPU_TYPE_POWERPC"
        string_val: "CPU_SUBTYPE_MULTIPLE"
        string_val: "ARGMATCH"
        string_val: "words"
        string_val: "s_len"
        string_val: "readtokens0_init"
        string_val: "readtokens0"
        string_val: "parse_ls_color"
        string_val: "fsu_blocksize"
        string_val: "SI_OPTION"
        string_val: "MST[NEQ$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "14"
        string_val: "13"
        string_val: "announce_mkdir"
        string_val: "TYPE_MINIMUM"
        string_val: "MST[LE$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[LE$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "realname"
        string_val: "compare_files"
        string_val: "chars"
        string_val: "TIME_SPEC_DATE"
        string_val: "MST[SUB$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "time_types"
        string_val: "set_LD_PRELOAD"
        string_val: "format_types"
        string_val: "format_args"
        string_val: "cell"
        string_val: "abmon_init"
        string_val: "__linux__"
        string_val: "_GL_UNUSED"
        string_val: "P"
        string_val: "MST[NEQ$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!GE$@2$V1$]MSP[N]"
        string_val: "IGNORE_OPTION"
        string_val: "GROUP_DIRECTORIES_FIRST_OPTION"
        string_val: "FULL_TIME_OPTION"
        string_val: "ENOTDIR"
        string_val: "DEREF_COMMAND_LINE_ARGUMENTS"
        string_val: "DEREF_ALWAYS"
        string_val: "ni"
        string_val: "isdir"
        string_val: "gen_tempname_len"
        string_val: "dcgettext"
        string_val: "MST[LE$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "GT_NOCREATE"
        string_val: "\'N\'"
        string_val: "xnanosleep"
        string_val: "strtok"
        string_val: "state"
        string_val: "specified_user"
        string_val: "scon"
        string_val: "pattern"
        string_val: "col"
        string_val: "b0"
        string_val: "_exit"
        string_val: "MST[LE$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!BITOR$V1$@2$]MSP[S]"
        string_val: "GT_DIR"
        string_val: "DEREFERENCE_COMMAND_LINE_SYMLINK_TO_DIR_OPTION"
        string_val: "ignore_pattern"
        string_val: "evaluate"
        string_val: "error_number"
        string_val: "MST[PADD$A1$@2$!OPERAND$A1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "5"
        string_val: "32"
        string_val: "used_color"
        string_val: "block_or_character;"
        string_val: "argmatch_invalid"
        string_val: "S_IFCHR"
        string_val: "MST[LE$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[LE$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "z"
        string_val: "r1"
        string_val: "dev_ino_pop"
        string_val: "a0"
        string_val: "MST[SUB$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[PSUB$A1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "tcontext"
        string_val: "stat_ok"
        string_val: "sort_types"
        string_val: "sort_args"
        string_val: "seq"
        string_val: "print_dir"
        string_val: "nm1"
        string_val: "make_ancestor"
        string_val: "hash_delete"
        string_val: "S_IFDIR"
        string_val: "SORT_OPTION"
        string_val: "MST[LE$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "*hide"
        string_val: "rfc_3339_format"
        string_val: "long_iso_time_style"
        string_val: "full_iso_time_style"
        string_val: "Time_spec"
        string_val: "MST[OR$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "to_unit_size"
        string_val: "st_uid"
        string_val: "seq2"
        string_val: "seq1"
        string_val: "ptrdiff_t"
        string_val: "mkdir_errno"
        string_val: "from_unit_size"
        string_val: "argmatch"
        string_val: "add_fs_type"
        string_val: "SOURCE_FIELD"
        string_val: "MST[MUL$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[LE$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[AND$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "rel_mode_t"
        string_val: "r0"
        string_val: "pos"
        string_val: "m"
        string_val: "get_dev"
        string_val: "endptr"
        string_val: "SYNC_OPTION"
        string_val: "NO_SYNC_OPTION"
        string_val: "MST[SUB$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "BUFSIZ"
        string_val: "scale_to_types"
        string_val: "scale_to_args"
        string_val: "scale_from_types"
        string_val: "scale_from_args"
        string_val: "lr_95"
        string_val: "lr_101"
        string_val: "lr_100"
        string_val: "inval_types"
        string_val: "inval_args"
        string_val: "ignore_patterns"
        string_val: "extract_fields"
        string_val: "bv"
        string_val: "TO_UNIT_OPTION"
        string_val: "TO_OPTION"
        string_val: "ROUND_OPTION"
        string_val: "MST[NEQ$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "INVALID_OPTION"
        string_val: "FROM_UNIT_OPTION"
        string_val: "\'S\'"
        string_val: "\'Q\'"
        string_val: "%"
        string_val: "literal_quoting_style"
        string_val: "file_name_free"
        string_val: "ext"
        string_val: "diff"
        string_val: "dest"
        string_val: "c_quoting_style"
        string_val: "Q"
        string_val: "MST[PADD$A1$@2$!PSUB$A1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!OPERAND$V1$]MSP[S]"
        string_val: "parse_datetime"
        string_val: "mp_factors"
        string_val: "constr"
        string_val: "MST[SUB$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[P!PRIGHTDEC$P$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "LD_PRELOAD"
        string_val: "user"
        string_val: "use_name"
        string_val: "get_all_entries"
        string_val: "file_name_concat"
        string_val: "emit_cycle_warning"
        string_val: "cycle_warning_required"
        string_val: "best_match"
        string_val: "b1"
        string_val: "MST[PLEFTINC$P1$!PLEFTDEC$P1$]MSP[N]"
        string_val: "MST[NEQ$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "FTS_DC"
        string_val: "spec"
        string_val: "r1m"
        string_val: "old_libs"
        string_val: "n_tok"
        string_val: "mkdtemp_len"
        string_val: "crc_remainder"
        string_val: "argv_iter_init_stream"
        string_val: "MST[LE$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[LE$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "FTS_DNR"
        string_val: "CAN_ALL_BUT_LAST"
        string_val: "xgetcwd"
        string_val: "relpath"
        string_val: "make_dir_parents"
        string_val: "inline"
        string_val: "ignore_case"
        string_val: "filesno"
        string_val: "a1"
        string_val: "MST[SUB$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[AND$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "vstrtoumax"
        string_val: "st_dev"
        string_val: "ssize"
        string_val: "savewd"
        string_val: "pending"
        string_val: "oldset"
        string_val: "iv"
        string_val: "is_prime"
        string_val: "input_filename"
        string_val: "in_stream"
        string_val: "gr_name"
        string_val: "fsp"
        string_val: "\\"
        string_val: "STDERR_FILENO"
        string_val: "MST[PSUB$P1$@2$!PRIGHTINC$P1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[GT$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!LT$@2$V1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "FTS_ERR"
        string_val: "y1"
        string_val: "y0"
        string_val: "tokenbuffer"
        string_val: "sigprocmask"
        string_val: "rm_abs"
        string_val: "remove"
        string_val: "lint"
        string_val: "freev"
        string_val: "devlist"
        string_val: "algo_name_len"
        string_val: "PRIdMAX"
        string_val: "MST[PSUB$P1$@2$!PRIGHTDEC$P1$]MSP[N]"
        string_val: "MST[PSUB$P1$@2$!PLEFTINC$P1$]MSP[N]"
        string_val: "MST[PSUB$P1$@2$!PLEFTDEC$P1$]MSP[N]"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!LE$V1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "FTS_SLNONE"
        string_val: "nproc_query"
        string_val: "lr_46"
        string_val: "linkname"
        string_val: "linepos"
        string_val: "horizontal"
        string_val: "gidtostr"
        string_val: "column_info"
        string_val: "TTY_WRITE_ERROR"
        string_val: "SIG_SETMASK"
        string_val: "NPROC_CURRENT_OVERRIDABLE"
        string_val: "MST[SUB$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[AND$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "EXPR_FAILURE"
        string_val: "0.0"
        string_val: "x1"
        string_val: "x0"
        string_val: "src"
        string_val: "print_uptime"
        string_val: "np"
        string_val: "filetype"
        string_val: "MST[P!PRIGHTINC$P$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!GT$@2$V1$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!BITNOT$V1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "HAVE_GMP"
        string_val: "timetostr"
        string_val: "quit:"
        string_val: "indicator_name"
        string_val: "escaped_filename"
        string_val: "dst"
        string_val: "argv_iter"
        string_val: "RFC_3339_OPTION"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[AND$@1$@2$!OR$@1$@2$]MSP[S]"
        string_val: "MST[AND$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[ADD$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "AI_ERR_READ"
        string_val: "AI_ERR_EOF"
        string_val: "umul_ppmm"
        string_val: "trace"
        string_val: "set_program_path"
        string_val: "power"
        string_val: "pad"
        string_val: "dot_sb"
        string_val: "dirp"
        string_val: "block_or_character:"
        string_val: "PDS_PRE_2000"
        string_val: "MST[SUB$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[PDEREF_SUB$A1$@2$!PSUB_DEREF$A1$@2$]MSP[N]"
        string_val: "MST[PDEREF_SUB$A1$@2$!PADD_DEREF$A1$@2$]MSP[N]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTDEC$P1$]MSP[S]"
        string_val: "MST[PADD$P1$@2$!PLEFTINC$P1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "to_write"
        string_val: "processor"
        string_val: "lsetfilecon"
        string_val: "fstype"
        string_val: "fields"
        string_val: "emit_size_note"
        string_val: "do_chown"
        string_val: "component"
        string_val: "cmp"
        string_val: "a_prim"
        string_val: "PKGLIBDIR"
        string_val: "MST[SUB$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_RIGHTINC$P1$]MSP[N]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_RIGHTDEC$P1$]MSP[N]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_LEFTINC$P1$]MSP[N]"
        string_val: "MST[PSUB_DEREF$A1$@2$!PDEREF_ADD$A1$@2$]MSP[N]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_RIGHTINC$P1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[LT$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!NEQ$V1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!ABS$V1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "8192"
        string_val: "row"
        string_val: "robust_getcwd"
        string_val: "printed"
        string_val: "null"
        string_val: "int_value"
        string_val: "getlogin"
        string_val: "file_name_init"
        string_val: "dirname"
        string_val: "S_IRUSR"
        string_val: "P1"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[N]"
        string_val: "MST[PSUB_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[N]"
        string_val: "MST[PRIGHTINC$P1$!PLEFTDEC$P1$]MSP[N]"
        string_val: "MST[PRIGHTINC$P1$!OPERAND$P1$]MSP[N]"
        string_val: "MST[PADD$P1$@2$!PRIGHTINC$P1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!LE$@2$V1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!GT$V1$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "vstrtold"
        string_val: "uid_to_name"
        string_val: "string_to_security_class"
        string_val: "put_indicator"
        string_val: "old_spec"
        string_val: "nfields"
        string_val: "locale_quoting_style"
        string_val: "known_value"
        string_val: "fsu"
        string_val: "absolute_name"
        string_val: "MST[PRIGHTINC$P1$!PLEFTINC$P1$]MSP[N]"
        string_val: "MST[PADD_DEREF$A1$@2$!PDEREF_ADD$A1$@2$]MSP[S]"
        string_val: "MST[OR$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[LE$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[EQ$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MB_LEN_MAX"
        string_val: "var"
        string_val: "total"
        string_val: "syntax_error"
        string_val: "plarge"
        string_val: "me_mountdir"
        string_val: "list"
        string_val: "integer"
        string_val: "get_funky_string"
        string_val: "g0"
        string_val: "cols"
        string_val: "available"
        string_val: "Tokens"
        string_val: "MST[NEQ$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!LT$V1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "GETGROUPS_T"
        string_val: "76"
        string_val: "(*"
        string_val: "wc"
        string_val: "uni_value"
        string_val: "st_ino"
        string_val: "sep"
        string_val: "resolved"
        string_val: "re_buffer"
        string_val: "quotearg_n_style_mem"
        string_val: "negative"
        string_val: "isblank"
        string_val: "displayed_width"
        string_val: "contype"
        string_val: "bsd_reversed"
        string_val: "ap"
        string_val: "MST[PLEFTINC$P1$!OPERAND$P1$]MSP[N]"
        string_val: "MST[PADD_DEREF$P1$@2$!PDEREF_LEFTINC$P1$]MSP[S]"
        string_val: "MST[NEQ$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[NEQ$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[ADD$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "ISWHITE"
        string_val: "BUFFER_SIZE"
        string_val: "};"
        string_val: "uint_fast32_t"
        string_val: "simple_strtod_error"
        string_val: "scale_base"
        string_val: "s1"
        string_val: "s0"
        string_val: "prefix_len"
        string_val: "prefix"
        string_val: "output_count"
        string_val: "mu"
        string_val: "line1"
        string_val: "input_str"
        string_val: "eval6"
        string_val: "esc_length"
        string_val: "errno_rmdir_non_empty"
        string_val: "errno_may_be_empty"
        string_val: "equals_end"
        string_val: "disk"
        string_val: "MST[SUB$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "(sig)"
        string_val: "written"
        string_val: "when_timespec"
        string_val: "uni_blank"
        string_val: "strspn"
        string_val: "required_mon_width"
        string_val: "rem"
        string_val: "re_regs"
        string_val: "queue"
        string_val: "prime"
        string_val: "orig_st"
        string_val: "mulredc2"
        string_val: "mpz_cmp_ui"
        string_val: "mp_factor_insert"
        string_val: "modebuf"
        string_val: "lr_66"
        string_val: "lim"
        string_val: "len2"
        string_val: "is_empty_dir"
        string_val: "input_units"
        string_val: "in_word"
        string_val: "file_x"
        string_val: "fgets"
        string_val: "available_to_root"
        string_val: "S"
        string_val: "RC_error"
        string_val: "PDS_LEADING_YEAR"
        string_val: "MST[SUB$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[PADD$A1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!MOD$@2$V1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "ALG_POLLARD_RHO"
        string_val: "*v"
        string_val: "\'?\'"
        string_val: "unsupported_device"
        string_val: "tostring"
        string_val: "sqrt_n"
        string_val: "prjoin"
        string_val: "printv"
        string_val: "pct"
        string_val: "nh"
        string_val: "mp_prime_p"
        string_val: "me_dummy"
        string_val: "max_cols"
        string_val: "line2"
        string_val: "len1"
        string_val: "ino"
        string_val: "g1"
        string_val: "fsize"
        string_val: "filename_unescape"
        string_val: "end"
        string_val: "e2"
        string_val: "devlist_head"
        string_val: "d1"
        string_val: "base64_decode_ctx_init"
        string_val: "base64_decode_context"
        string_val: "SSE_OK_PRECISION_LOSS"
        string_val: "PS_FAIL"
        string_val: "MST[PADD$P1$@2$!PLEFTDEC$P1$]MSP[S]"
        string_val: "MST[P!PLEFTDEC$P$]MSP[S]"
        string_val: "MST[LT$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[EQ$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "DIVBLOCK"
        string_val: "winsize"
        string_val: "wide_char"
        string_val: "w"
        string_val: "tclass"
        string_val: "symlink_changed"
        string_val: "stpcpy"
        string_val: "statp"
        string_val: "rsh2"
        string_val: "qpos"
        string_val: "prime_p"
        string_val: "plimit"
        string_val: "open_flags"
        string_val: "new_context"
        string_val: "new_column_info_alloc"
        string_val: "mulredc"
        string_val: "mp_factor_using_pollard_rho"
        string_val: "mount_point"
        string_val: "mbswidth"
        string_val: "linkok"
        string_val: "libstdbuf"
        string_val: "file_context"
        string_val: "factor_using_pollard_rho"
        string_val: "factor_insert"
        string_val: "col_arr"
        string_val: "binv"
        string_val: "asprintf"
        string_val: "add_ssaaaa"
        string_val: "V"
        string_val: "SSE_OK"
        string_val: "RC_do_ordinary_chown"
        string_val: "Q1"
        string_val: "MST[SUB$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[PADD$P1$@2$!PRIGHTDEC$P1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[DIV$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[ASSIGN$V1$@2$!GE$V1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "EVAL_TRACE"
        string_val: "z1"
        string_val: "z0"
        string_val: "toarith"
        string_val: "text"
        string_val: "sub_ddmmss"
        string_val: "str_value"
        string_val: "s_err"
        string_val: "output_units"
        string_val: "outlist"
        string_val: "nl"
        string_val: "negate_used"
        string_val: "name_length"
        string_val: "na"
        string_val: "msgid"
        string_val: "mpz_mod"
        string_val: "mount_entry"
        string_val: "mi"
        string_val: "me_next"
        string_val: "me_dev"
        string_val: "max_name_length"
        string_val: "ind_no"
        string_val: "file_name_prepend"
        string_val: "file_failure"
        string_val: "field_values_t"
        string_val: "esc_value"
        string_val: "disk_stats"
        string_val: "dir_stat"
        string_val: "dev_name"
        string_val: "d0"
        string_val: "count_chars"
        string_val: "blocks"
        string_val: "advance_seq"
        string_val: "ST_GND"
        string_val: "SIZE_FIELD"
        string_val: "P0"
        string_val: "MST[SUB$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[PLEFTINC$P1$!PRIGHTINC$P1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!LE$V1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[A!CONSTVAL$0$]MSP[S]"
        string_val: "\')\'"
        string_val: "vdi"
        string_val: "val_frac"
        string_val: "user_group_str"
        string_val: "timespec_cmp"
        string_val: "sv"
        string_val: "sum_func)"
        string_val: "stat_buf"
        string_val: "sp"
        string_val: "shift"
        string_val: "scale"
        string_val: "print_uintmaxes"
        string_val: "print_file_name_and_frills"
        string_val: "primes_diff"
        string_val: "point"
        string_val: "pfmt"
        string_val: "parent_height"
        string_val: "opts"
        string_val: "old_usr"
        string_val: "old_grp"
        string_val: "nth_parent"
        string_val: "nonroot_total"
        string_val: "new"
        string_val: "negate_available"
        string_val: "n_alloc"
        string_val: "mpz_set"
        string_val: "mpz_mul"
        string_val: "me_devname"
        string_val: "matchlen"
        string_val: "m1"
        string_val: "lr_68"
        string_val: "length_of_file_name_and_frills"
        string_val: "label"
        string_val: "join_field"
        string_val: "integer_overflow"
        string_val: "imaxtostr"
        string_val: "height"
        string_val: "gcd_odd"
        string_val: "from"
        string_val: "find_dir_entry"
        string_val: "file_index"
        string_val: "field_index"
        string_val: "dp"
        string_val: "cwd_fd"
        string_val: "context_string"
        string_val: "column_info_alloc"
        string_val: "cmp)"
        string_val: "change_file_context"
        string_val: "bsd_split_3"
        string_val: "best_match_len"
        string_val: "beg2"
        string_val: "beg1"
        string_val: "abmon"
        string_val: "_GL_ATTRIBUTE_CONST"
        string_val: "TARGET_FIELD"
        string_val: "S_ISCHR"
        string_val: "S_ISBLK"
        string_val: "SUPPORT_OLD_MBRTOWC"
        string_val: "SI_ARCHITECTURE"
        string_val: "RC_ok"
        string_val: "RCH_status"
        string_val: "PRIMES_PTAB_ENTRIES"
        string_val: "MST[SUB$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[PSUB$A1$@2$!OPERAND$A1$]MSP[N]"
        string_val: "MST[OR$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!DIV$@2$@1$]MSP[S]"
        string_val: "MST[MUL$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[MUL$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[LT$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[GT$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!GE$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!EQ$V1$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "KERN_BOOTTIME"
        string_val: "ENOTSUP"
        string_val: "ENODATA"
        string_val: "Dl"
        string_val: "Dh"
        string_val: "CTL_KERN"
        string_val: "var1"
        string_val: "val1"
        string_val: "to"
        string_val: "t2"
        string_val: "symlink_target"
        string_val: "symbolic_link"
        string_val: "suffix_pos"
        string_val: "stat_file"
        string_val: "start_col"
        string_val: "stack"
        string_val: "sprintf"
        string_val: "smallbuf"
        string_val: "primes_dtab"
        string_val: "prime2_p"
        string_val: "prfield"
        string_val: "powerld"
        string_val: "parent_sb"
        string_val: "padding_buffer_size"
        string_val: "output_separator"
        string_val: "normal"
        string_val: "mpz_sgn"
        string_val: "me_type"
        string_val: "me_remote"
        string_val: "m0"
        string_val: "line_fmt"
        string_val: "keycmp"
        string_val: "isqrt"
        string_val: "ipct"
        string_val: "idx"
        string_val: "id"
        string_val: "i2"
        string_val: "i1"
        string_val: "have_scontext"
        string_val: "has_capability"
        string_val: "force_fsu"
        string_val: "first"
        string_val: "factor_using_squfof"
        string_val: "factor_insert_large"
        string_val: "do_deref"
        string_val: "divisible_by_1024"
        string_val: "divisible_by_1000"
        string_val: "discard_me"
        string_val: "dirnamep"
        string_val: "digits"
        string_val: "dev_ino_size"
        string_val: "dest_neg"
        string_val: "count_complicated"
        string_val: "count_bytes"
        string_val: "context_str"
        string_val: "cmp_version"
        string_val: "closedir"
        string_val: "buflen"
        string_val: "buf_size"
        string_val: "bp"
        string_val: "blksize"
        string_val: "bgta"
        string_val: "arg_directory"
        string_val: "allowed_scaling"
        string_val: "alloc"
        string_val: "addmod2"
        string_val: "addmod"
        string_val: "absld"
        string_val: "USED_FIELD"
        string_val: "ST_NBLOCKSIZE"
        string_val: "SET_COMPONENT"
        string_val: "PCENT_FIELD"
        string_val: "MST[SUB$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[P!PLEFTINC$P$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[LT$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[BITSHR$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!GE$@2$V1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "L"
        string_val: "EACCES"
        string_val: "AVAIL_FIELD"
        string_val: "##"
        string_val: "xh"
        string_val: "whichfile"
        string_val: "when_local"
        string_val: "valid_len"
        string_val: "use_strcmp"
        string_val: "use_lstat"
        string_val: "udiv_qrnnd"
        string_val: "th"
        string_val: "stops"
        string_val: "st_rdev"
        string_val: "src_neg"
        string_val: "six_months_ago"
        string_val: "simple_round_ceiling"
        string_val: "set_exit_status"
        string_val: "serious"
        string_val: "separator"
        string_val: "security_class_t"
        string_val: "rpl_fmt"
        string_val: "rh"
        string_val: "result_len"
        string_val: "restricted_chown"
        string_val: "request"
        string_val: "real_length"
        string_val: "quote_name"
        string_val: "q1"
        string_val: "q0"
        string_val: "pz"
        string_val: "pv"
        string_val: "ptr2"
        string_val: "print_type_indicator"
        string_val: "print_name_with_quoting"
        string_val: "powm2"
        string_val: "pb"
        string_val: "openat"
        string_val: "op"
        string_val: "old_user"
        string_val: "old_perms"
        string_val: "old_group"
        string_val: "nm1_1"
        string_val: "nm1_0"
        string_val: "n_pos"
        string_val: "n_free"
        string_val: "multiply"
        string_val: "mpz_sub"
        string_val: "mpz_init_set_ui"
        string_val: "mpz_cmp"
        string_val: "mpz_add_ui"
        string_val: "mp"
        string_val: "mode_to_security_class"
        string_val: "mod2"
        string_val: "matchpathcon"
        string_val: "looks_like_integer"
        string_val: "llen"
        string_val: "linkstats"
        string_val: "jf_2"
        string_val: "jf_1"
        string_val: "intval"
        string_val: "inode_values"
        string_val: "inode"
        string_val: "ino_t"
        string_val: "in_shift"
        string_val: "hide_problematic_chars"
        string_val: "have_acl"
        string_val: "half"
        string_val: "getseq"
        string_val: "found_match"
        string_val: "format_user_or_group"
        string_val: "fastmap"
        string_val: "factor_using_pollard_rho2"
        string_val: "factor_insert_multiplicity"
        string_val: "factor"
        string_val: "extract_field"
        string_val: "esc_char"
        string_val: "errno_unsupported"
        string_val: "errmsg"
        string_val: "eof2"
        string_val: "eof1"
        string_val: "ent_sb"
        string_val: "ent_from_table"
        string_val: "end_pos"
        string_val: "dired_pos"
        string_val: "digit"
        string_val: "df_readable"
        string_val: "dev"
        string_val: "d_name"
        string_val: "current_pos"
        string_val: "curr_max_width"
        string_val: "count_trailing_zeros"
        string_val: "count_leading_zeros"
        string_val: "context_type_set"
        string_val: "context_type_get"
        string_val: "con"
        string_val: "computecon"
        string_val: "comma"
        string_val: "color_ext_type"
        string_val: "color_ext_list"
        string_val: "checktail"
        string_val: "cap_d"
        string_val: "block_values"
        string_val: "beg"
        string_val: "acl_type"
        string_val: "acc_f"
        string_val: "UNAME_PROCESSOR"
        string_val: "TYPE_SIGNED"
        string_val: "S_ISSOCK"
        string_val: "S_ISFIFO"
        string_val: "ST_NBLOCKS"
        string_val: "ST_ERROR"
        string_val: "ST_END"
        string_val: "ST_BACKSLASH"
        string_val: "SSE_INVALID_NUMBER"
        string_val: "RC_inode_changed"
        string_val: "Q_FREQ_SIZE"
        string_val: "PUSH_CURRENT_DIRED_POS"
        string_val: "PS_START"
        string_val: "MST[SUB$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!DELSTMT]MSP[S]"
        string_val: "MST[SUB$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[BITAND$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MB_CUR_MAX"
        string_val: "FIRST_OMITTED_PRIME"
        string_val: "ERANGE"
        string_val: "EOPNOTSUPP"
        string_val: "DIRED_FPUTS"
        string_val: "C_NORM"
        string_val: "C_LINK"
        string_val: "C_CAP"
        string_val: "6"
        string_val: "\'(\'"
        string_val: "word_separator;"
        string_val: "vlim"
        string_val: "vlen"
        string_val: "va_start"
        string_val: "va_list"
        string_val: "va_end"
        string_val: "user_wx"
        string_val: "unsigned_file_size"
        string_val: "ul"
        string_val: "u100"
        string_val: "total_blocks"
        string_val: "timeval"
        string_val: "ten_or_less"
        string_val: "t1p"
        string_val: "strdup"
        string_val: "strcpy"
        string_val: "st_nlink"
        string_val: "simple_strtod_int"
        string_val: "simple_round_floor"
        string_val: "simple_round"
        string_val: "si"
        string_val: "set_normal_color"
        string_val: "self_denying_umask"
        string_val: "scale_type"
        string_val: "scale_IEC_I"
        string_val: "rows"
        string_val: "round"
        string_val: "rl"
        string_val: "resolved_len"
        string_val: "resolved_dev"
        string_val: "req"
        string_val: "redcify2"
        string_val: "recent"
        string_val: "q1024"
        string_val: "q1000"
        string_val: "process_signals"
        string_val: "prfields"
        string_val: "prep_non_filename_text"
        string_val: "powm"
        string_val: "possible_suffix"
        string_val: "plus"
        string_val: "pi"
        string_val: "patterns_match"
        string_val: "overflow"
        string_val: "os"
        string_val: "not_equal"
        string_val: "nfmt"
        string_val: "new_stats"
        string_val: "neg_frac"
        string_val: "need_lstat"
        string_val: "name_width"
        string_val: "n_used"
        string_val: "n_string"
        string_val: "mpz_srcptr"
        string_val: "mpz_init_set_si"
        string_val: "mpz"
        string_val: "mp_millerrabin"
        string_val: "mp_factor_insert_ui"
        string_val: "min_size"
        string_val: "millerrabin2"
        string_val: "millerrabin"
        string_val: "mb_word_separator;"
        string_val: "lr_78"
        string_val: "lr_64"
        string_val: "lr_52"
        string_val: "lr_51"
        string_val: "lr_50"
        string_val: "lr_49"
        string_val: "lr_48"
        string_val: "lr_47"
        string_val: "linkmode"
        string_val: "line_len"
        string_val: "lgetfilecon"
        string_val: "less_than"
        string_val: "less_equal"
        string_val: "isqrt2"
        string_val: "isprint"
        string_val: "initseq"
        string_val: "initialize_ordering_vector"
        string_val: "indicator_no"
        string_val: "indent"
        string_val: "ind"
        string_val: "has_cap"
        string_val: "gt2"
        string_val: "greater_than"
        string_val: "greater_equal"
        string_val: "ginv"
        string_val: "gidtostr_ptr"
        string_val: "getsize"
        string_val: "get_type_indicator"
        string_val: "get_stat_ctime"
        string_val: "ge2"
        string_val: "gcd2_odd"
        string_val: "fsu_blocks"
        string_val: "fsu_bavail"
        string_val: "fs_usage"
        string_val: "format_user_width"
        string_val: "format_user_or_group_width"
        string_val: "format_user"
        string_val: "format_inode"
        string_val: "flags"
        string_val: "factor_found;"
        string_val: "factor_found:"
        string_val: "exponent"
        string_val: "expld"
        string_val: "eval5"
        string_val: "eval4"
        string_val: "eval3"
        string_val: "eval2"
        string_val: "eval1"
        string_val: "escstart"
        string_val: "equal"
        string_val: "ep"
        string_val: "env_set"
        string_val: "docolon"
        string_val: "divide"
        string_val: "divexact_21"
        string_val: "deref"
        string_val: "delseq"
        string_val: "default_scale_base"
        string_val: "comp"
        string_val: "column_info_growth"
        string_val: "cntd"
        string_val: "cnta"
        string_val: "calculate_columns"
        string_val: "base2"
        string_val: "base1"
        string_val: "backup_state"
        string_val: "b_len"
        string_val: "arg_writable"
        string_val: "align_nstrftime"
        string_val: "UINTMAX_MAX"
        string_val: "TIME_STAMP_LEN_MAXIMUM"
        string_val: "S_ISVTX"
        string_val: "ST_OCTAL"
        string_val: "ST_HEX"
        string_val: "ST_CARET"
        string_val: "SSE_INVALID_SUFFIX"
        string_val: "MST[SUB$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[PSUB$A1$@2$!PADD$A1$@2$]MSP[N]"
        string_val: "MST[OR$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[OR$@1$@2$!AND$@1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[LE$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[GT$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[GE$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!SUB$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!SUB$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!MOD$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!MOD$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!LT$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!LE$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!GT$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!DIV$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITXOR$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITSHR$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITSHL$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITSHL$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITNOT$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$V1$@2$!ASSIGN$V1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!NEQ$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!GT$V1$@2$]MSP[S]"
        string_val: "MR_REPS"
        string_val: "LIB_NAME"
        string_val: "L1"
        string_val: "IUSED_FIELD"
        string_val: "ITOTAL_FIELD"
        string_val: "IPCENT_FIELD"
        string_val: "IAVAIL_FIELD"
        string_val: "HAVE_SYSCTL"
        string_val: "FTS_D"
        string_val: "DIRED_INDENT"
        string_val: "DIGEST_REFERENCE"
        string_val: "DIGEST_BITS"
        string_val: "C_STICKY_OTHER_WRITABLE"
        string_val: "C_STICKY"
        string_val: "C_SETUID"
        string_val: "C_SETGID"
        string_val: "C_OTHER_WRITABLE"
        string_val: "B"
        string_val: "63"
        string_val: "36"
        string_val: "1000000000"
        string_val: "1000"
        string_val: "..."
        string_val: "xrealloc"
        string_val: "width_gap"
        string_val: "wcwidth"
        string_val: "wchar_t"
        string_val: "visit_dir"
        string_val: "vfprintf"
        string_val: "valid_suffixes"
        string_val: "valid_suffix"
        string_val: "v_b"
        string_val: "v_a"
        string_val: "used_color_this_time"
        string_val: "toupper"
        string_val: "token_length"
        string_val: "tl"
        string_val: "table_size"
        string_val: "suffix_power_character"
        string_val: "suffix_power"
        string_val: "submod2"
        string_val: "submod"
        string_val: "strncat"
        string_val: "strcoll"
        string_val: "st_author"
        string_val: "spec_item"
        string_val: "sorted_file_alloc"
        string_val: "sock"
        string_val: "snprintf"
        string_val: "skip_count"
        string_val: "simple_strtod_human"
        string_val: "simple_strtod_float"
        string_val: "simple_strtod_fatal"
        string_val: "simple_round_to_zero"
        string_val: "simple_round_nearest"
        string_val: "simple_round_from_zero"
        string_val: "show_decimal_point"
        string_val: "selected_fstype"
        string_val: "security_compute_create"
        string_val: "search_path"
        string_val: "scale_auto"
        string_val: "round_type"
        string_val: "ret1;"
        string_val: "redcify"
        string_val: "read_utmp"
        string_val: "re_nsub"
        string_val: "r1p"
        string_val: "quotearg_n_style"
        string_val: "quotearg_buffer"
        string_val: "qp"
        string_val: "process_all"
        string_val: "print_with_commas"
        string_val: "print_many_per_line"
        string_val: "print_long_format"
        string_val: "print_horizontal"
        string_val: "print_esc_char"
        string_val: "print_color_indicator"
        string_val: "patterns"
        string_val: "parse_human_number"
        string_val: "outlist_end"
        string_val: "opendir"
        string_val: "off"
        string_val: "octal_0"
        string_val: "obstack_object_size"
        string_val: "obstack_next_free"
        string_val: "obstack_blank"
        string_val: "obstack"
        string_val: "num_regs"
        string_val: "nfields_allocated"
        string_val: "multipliers_3"
        string_val: "multipliers_1"
        string_val: "mpz_tdiv_r"
        string_val: "mpz_tdiv_q"
        string_val: "mpz_single_init"
        string_val: "mpz_scan1"
        string_val: "mpz_ptr"
        string_val: "mpz_powm"
        string_val: "mpz_out_str"
        string_val: "mpz_inits"
        string_val: "mpz_init"
        string_val: "mpz_get_ui"
        string_val: "mpz_get_str"
        string_val: "mpz_gcd"
        string_val: "mpz_fits_ulong_p"
        string_val: "mpz_divexact"
        string_val: "mpz_clears"
        string_val: "mpz_add"
        string_val: "mp_factor_using_division"
        string_val: "mp_factor_init"
        string_val: "mod"
        string_val: "minus"
        string_val: "minorbuf"
        string_val: "minor"
        string_val: "message"
        string_val: "memchr"
        string_val: "mbsnwidth"
        string_val: "mbsinit"
        string_val: "mbsalign"
        string_val: "mbrtowc"
        string_val: "make_link_name"
        string_val: "majorbuf"
        string_val: "major"
        string_val: "lr_86"
        string_val: "lr_85"
        string_val: "lr_84"
        string_val: "lr_83"
        string_val: "lr_82"
        string_val: "lr_81"
        string_val: "lr_80"
        string_val: "lr_79"
        string_val: "lr_77"
        string_val: "lr_76"
        string_val: "lr_75"
        string_val: "lr_74"
        string_val: "lr_73"
        string_val: "lr_72"
        string_val: "lr_71"
        string_val: "lr_70"
        string_val: "lr_69"
        string_val: "lr_67"
        string_val: "lr_65"
        string_val: "lr_63"
        string_val: "lr_62"
        string_val: "lr_61"
        string_val: "lr_60"
        string_val: "lr_59"
        string_val: "lr_58"
        string_val: "lr_57"
        string_val: "lr_56"
        string_val: "lr_55"
        string_val: "lr_54"
        string_val: "lr_53"
        string_val: "long_time_expected_width"
        string_val: "lipct"
        string_val: "lchownat"
        string_val: "isodigit"
        string_val: "iscntrl"
        string_val: "is_square"
        string_val: "is_directory"
        string_val: "init_column_info"
        string_val: "ignore_dot_and_dot_dot"
        string_val: "ifdef"
        string_val: "human_B"
        string_val: "hline2"
        string_val: "hline1"
        string_val: "has_uuid_suffix"
        string_val: "has_capability_cache"
        string_val: "getuser"
        string_val: "getgroup"
        string_val: "getfscreatecon"
        string_val: "getfilecon_cache"
        string_val: "getcon"
        string_val: "get_point"
        string_val: "get_link_name"
        string_val: "get_field_values"
        string_val: "get_disk"
        string_val: "fsu_files"
        string_val: "fsu_ffree"
        string_val: "fsu_bfree"
        string_val: "fsu_bavail_top_bit_set"
        string_val: "fstatat"
        string_val: "fsetfilecon"
        string_val: "format_group_width"
        string_val: "format_group"
        string_val: "filter_mount_list"
        string_val: "fill_r"
        string_val: "filetype_indicator"
        string_val: "file_ignored"
        string_val: "file_has_acl_cache"
        string_val: "fifo"
        string_val: "fgetfilecon"
        string_val: "fdadvise"
        string_val: "fchown"
        string_val: "failed_strcoll"
        string_val: "factor_using_division"
        string_val: "factor_insert_refind"
        string_val: "excluded_fstype"
        string_val: "eval7"
        string_val: "epoch"
        string_val: "dummy"
        string_val: "double_to_human"
        string_val: "done;"
        string_val: "div_smallq"
        string_val: "dirfd"
        string_val: "dirent"
        string_val: "dev_num"
        string_val: "dev_ino_push"
        string_val: "decode_field_spec"
        string_val: "compute_context_from_mask"
        string_val: "cols_remaining"
        string_val: "color_buf"
        string_val: "class"
        string_val: "chownat"
        string_val: "cap_free"
        string_val: "canonicalize_file_name"
        string_val: "by_columns"
        string_val: "blanks_width"
        string_val: "bin_str"
        string_val: "basename_is_dot_or_dotdot"
        string_val: "autocount_2"
        string_val: "autocount_1"
        string_val: "autocount"
        string_val: "attr_len"
        string_val: "attach"
        string_val: "alloca"
        string_val: "add_uint_with_neg_flag"
        string_val: "add_to_grand_total"
        string_val: "add_field"
        string_val: "__utc"
        string_val: "__ns"
        string_val: "UNKNOWN_SECURITY_CONTEXT"
        string_val: "UNAME_HARDWARE_PLATFORM"
        string_val: "ULONG_MAX"
        string_val: "S_IXUGO"
        string_val: "S_IWOTH"
        string_val: "S_ISUID"
        string_val: "S_ISGID"
        string_val: "S_ISDOOR"
        string_val: "SSE_VALID_BUT_FORBIDDEN_SUFFIX"
        string_val: "SSE_OVERFLOW"
        string_val: "SSE_MISSING_I_SUFFIX"
        string_val: "SIGXFSZ"
        string_val: "SIGXCPU"
        string_val: "SIGVTALRM"
        string_val: "SIGPROF"
        string_val: "SIGPOLL"
        string_val: "RC_excluded"
        string_val: "QUEUE_SIZE"
        string_val: "PS_4"
        string_val: "PS_3"
        string_val: "PS_2"
        string_val: "O_NOFOLLOW"
        string_val: "O_DIRECTORY"
        string_val: "MST[SUB$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[SUB$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[PSUB$P1$@2$!PLEFTINC$P1$]MSP[S]"
        string_val: "MST[PLEFTINC$P1$!PLEFTDEC$P1$]MSP[S]"
        string_val: "MST[PDEREF_ADD$A1$@2$!PSUB_DEREF$A1$@2$]MSP[S]"
        string_val: "MST[OR$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[NEQ$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[LT$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[LT$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[GT$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITXOR$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[GE$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!NEG$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[GE$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[GE$@1$@2$!DIV$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!CONSTVAL$0$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[GE$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITNOT$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!ADD$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[EQ$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!OPERAND$@1$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!NEG$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!LE$@2$@1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!GE$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[BITAND$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!GT$@2$V1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!BITNOT$V1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MAX_UNSCALED_DIGITS"
        string_val: "MAX_ACCEPTABLE_DIGITS"
        string_val: "LIKELY"
        string_val: "LDBL_MAX"
        string_val: "INTMAX_MAX"
        string_val: "GEN"
        string_val: "FTSENT_IS_DIRECTORY"
        string_val: "FILE_FIELD"
        string_val: "ELOOP"
        string_val: "EEXIST"
        string_val: "DT_WHT"
        string_val: "DIRFIRST_CHECK"
        string_val: "DIRED_FPUTS_LITERAL"
        string_val: "DIR"
        string_val: "DELIM"
        string_val: "C_MULTIHARDLINK"
        string_val: "C_FILE"
        string_val: "C_END"
        string_val: "CTL_HW"
        string_val: "ACL_T_YES"
        string_val: "ACL_T_SELINUX_ONLY"
        string_val: "ACL_T_NONE"
        string_val: "127"
        string_val: "100.0"
        string_val: "0.5"
        string_val: "*p"
        string_val: "*fsp"
        string_val: "*di"
        string_val: "*column_info"
        string_val: "(specified_"
        string_val: "(0)"
        string_val: "\'~\'"
        string_val: "\'|\'"
        string_val: "\'_\'"
        string_val: "\'^\'"
        string_val: "\'Y\'"
        string_val: "\'M\'"
        string_val: "\'K\'"
        string_val: "\'@\'"
        string_val: "#define"
        string_val: "xstrndup"
        string_val: "xstrcoll_version"
        string_val: "xstrcoll_df_version"
        string_val: "xstrcoll"
        string_val: "xreadlink"
        string_val: "xcalloc"
        string_val: "word_separator:"
        string_val: "whiteout"
        string_val: "verify_numeric"
        string_val: "verify"
        string_val: "va_arg"
        string_val: "translate"
        string_val: "token_buffer"
        string_val: "system_info"
        string_val: "sysctlbyname"
        string_val: "strtol"
        string_val: "strpbrk"
        string_val: "strintcmp"
        string_val: "strcspn"
        string_val: "strcmp"
        string_val: "stpncpy"
        string_val: "specified_"
        string_val: "sort_functions"
        string_val: "smack_new_label_from_path"
        string_val: "sigset_t"
        string_val: "setjmp"
        string_val: "setfileconat"
        string_val: "set"
        string_val: "security"
        string_val: "scale_SI"
        string_val: "scale_IEC"
        string_val: "round_to_zero"
        string_val: "round_nearest"
        string_val: "round_from_zero"
        string_val: "round_floor"
        string_val: "round_ceiling"
        string_val: "role"
        string_val: "rev_xstrcoll_version"
        string_val: "rev_xstrcoll_df_version"
        string_val: "ret2;"
        string_val: "ret2:"
        string_val: "ret1:"
        string_val: "regoff_t"
        string_val: "regfree"
        string_val: "realloc"
        string_val: "readtoken"
        string_val: "readdir_ignoring_dot_and_dotdot"
        string_val: "readdir"
        string_val: "re_syntax_options"
        string_val: "re_registers"
        string_val: "re_pattern_buffer"
        string_val: "re_match"
        string_val: "re_compile_pattern"
        string_val: "range"
        string_val: "quoting_options"
        string_val: "q;"
        string_val: "print_unicode_char"
        string_val: "primes_diff8"
        string_val: "pd[I].lim))"
        string_val: "pd[I].binv;"
        string_val: "pd"
        string_val: "parse_state"
        string_val: "p,"
        string_val: "outlist_head"
        string_val: "octtobin"
        string_val: "obstack_finish"
        string_val: "nstrftime"
        string_val: "next_multiplier;"
        string_val: "next_multiplier:"
        string_val: "next_i;"
        string_val: "next_i:"
        string_val: "newline_anchor"
        string_val: "mpz_va_init"
        string_val: "mpz_tdiv_q_ui"
        string_val: "mpz_tdiv_q_2exp"
        string_val: "mpz_sub_ui"
        string_val: "mpz_single_init)("
        string_val: "mpz_set_ui"
        string_val: "mpz_powm_ui"
        string_val: "mpz_divisible_ui_p"
        string_val: "mpz_div_2exp"
        string_val: "mpsort"
        string_val: "mkdir"
        string_val: "memcasecmp"
        string_val: "mb_word_separator:"
        string_val: "lsh2"
        string_val: "lsetfileconat"
        string_val: "longjmp"
        string_val: "longdiff"
        string_val: "lgetfileconat"
        string_val: "iswspace"
        string_val: "iswprint"
        string_val: "isdigit"
        string_val: "is_basic"
        string_val: "init_tokenbuffer"
        string_val: "human_suppress_point_zero"
        string_val: "human_group_digits"
        string_val: "hash_insert"
        string_val: "gettext"
        string_val: "getfileconat"
        string_val: "get_system_info"
        string_val: "get_fs_usage"
        string_val: "ftruncate"
        string_val: "free_mount_entry"
        string_val: "fnmatch"
        string_val: "find_mount_point"
        string_val: "filevercmp"
        string_val: "filetype_letter"
        string_val: "filemodestring"
        string_val: "file_has_acl"
        string_val: "field_type"
        string_val: "fchdir"
        string_val: "false;"
        string_val: "errno,"
        string_val: "emit_blocksize_note"
        string_val: "dot_or_dotdot"
        string_val: "done:"
        string_val: "display_field_t"
        string_val: "define"
        string_val: "d_type"
        string_val: "cpu_type_t"
        string_val: "context_"
        string_val: "comp));"
        string_val: "comp))"
        string_val: "cmp_size"
        string_val: "cmp_name"
        string_val: "cmp_mtime"
        string_val: "cmp_extension"
        string_val: "cmp_ctime"
        string_val: "cmp_atime"
        string_val: "chardev"
        string_val: "cap_to_text"
        string_val: "cap_t"
        string_val: "cap_get_file"
        string_val: "blockdev"
        string_val: "areadlink_with_size"
        string_val: "ambsalign"
        string_val: "allocated"
        string_val: "all_args_string"
        string_val: "align"
        string_val: "access"
        string_val: "_set"
        string_val: "__APPLE__"
        string_val: "_D_EXACT_NAMLEN"
        string_val: "_(\"failed"
        string_val: "^="
        string_val: "X_OK"
        string_val: "S_IXUSR"
        string_val: "S_IWUSR"
        string_val: "ST_BLKSIZE"
        string_val: "SIG_BLOCK"
        string_val: "SIGTERM"
        string_val: "SIGQUIT"
        string_val: "SIGPIPE"
        string_val: "SIGHUP"
        string_val: "SIGALRM"
        string_val: "SEEK_CUR"
        string_val: "SBIT"
        string_val: "RE_SYNTAX_POSIX_BASIC"
        string_val: "RE_NO_EMPTY_RANGES"
        string_val: "RE_CONTEXT_INVALID_DUP"
        string_val: "RELIABLE_D_INO"
        string_val: "PS_DONE"
        string_val: "PKGLIBEXECDIR"
        string_val: "PATH_MAX"
        string_val: "OTHER_FLD"
        string_val: "NXGetArchInfoFromCpuType"
        string_val: "NXArchInfo"
        string_val: "MST[SUB$@1$@2$!TRAPSTMT]MSP[S]"
        string_val: "MST[PSUB_DEREF$P1$@2$!PDEREF_LEFTDEC$P1$]MSP[S]"
        string_val: "MST[PSUB_DEREF$A1$@2$!PDEREF_SUB$A1$@2$]MSP[S]"
        string_val: "MST[PSUB$P1$@2$!PRIGHTINC$P1$]MSP[S]"
        string_val: "MST[PSUB$P1$@2$!PRIGHTDEC$P1$]MSP[S]"
        string_val: "MST[PSUB$P1$@2$!PLEFTDEC$P1$]MSP[S]"
        string_val: "MST[PRIGHTINC$P1$!PLEFTINC$P1$]MSP[S]"
        string_val: "MST[PLEFTINC$P1$!PRIGHTINC$P1$]MSP[S]"
        string_val: "MST[PLEFTINC$P1$!OPERAND$P1$]MSP[S]"
        string_val: "MST[PDEREF_RIGHTINC$P1$!PRIGHTDEC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_RIGHTINC$P1$!PLEFTINC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PRIGHTINC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PRIGHTDEC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PLEFTINC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$P1$@2$!PLEFTDEC_DEREF$P1$]MSP[N]"
        string_val: "MST[PDEREF_ADD$A1$@2$!PADD_DEREF$A1$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[NEQ$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[MUL$@1$V2$!ASSIGN$V2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!GT$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[MUL$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!MUL$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITOR$@1$@2$]MSP[S]"
        string_val: "MST[LE$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[GT$@1$V2$!ASSIGN$V2$@1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[GT$@1$@2$!SUB$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!NEG$@1$]MSP[S]"
        string_val: "MST[GT$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[GT$@1$@2$!DIV$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[GT$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!BITAND$@1$@2$]MSP[S]"
        string_val: "MST[GT$@1$@2$!ABS$@2$]MSP[N]"
        string_val: "MST[GT$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[GE$@1$@2$!LT$@2$@1$]MSP[N]"
        string_val: "MST[GE$@1$@2$!GT$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[GE$@1$@2$!BITSHR$@1$@2$]MSP[N]"
        string_val: "MST[GE$@1$@2$!BITNOT$@1$]MSP[S]"
        string_val: "MST[GE$@1$@2$!ADD$@1$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!OPERAND$@2$]MSP[S]"
        string_val: "MST[EQ$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!SUB$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!NEQ$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!MOD$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!MOD$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!LT$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!LE$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!GE$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@2$@1$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!BITSHR$@1$@2$]MSP[S]"
        string_val: "MST[DIV$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!EQ$@1$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!BITOR$@1$@2$]MSP[N]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@2$]MSP[S]"
        string_val: "MST[BITXOR$@1$@2$!ABS$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!LT$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!LE$@1$@2$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!GT$@2$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!GE$@2$@1$]MSP[S]"
        string_val: "MST[BITSHR$@1$@2$!CONSTVAL$0$]MSP[S]"
        string_val: "MST[BITSHL$@1$@2$!MUL$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!EQ$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!BITAND$@1$@2$]MSP[N]"
        string_val: "MST[BITSHL$@1$@2$!ABS$@1$]MSP[N]"
        string_val: "MST[BITOR$V1$@2$!ASSIGN$V1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!OPERAND$@2$]MSP[N]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@2$@1$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITSHL$@1$@2$]MSP[S]"
        string_val: "MST[BITOR$@1$@2$!BITNOT$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!NEG$@2$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MST[ASSIGN$V1$@2$!CONSTVAL$1$]MSP[N]"
        string_val: "MST[ADD$@1$@2$!OPERAND$@1$]MSP[S]"
        string_val: "MST[ADD$@1$@2$!CONSTVAL$1$]MSP[S]"
        string_val: "MBA_UNIBYTE_ONLY"
        string_val: "MBA_NO_RIGHT_PAD"
        string_val: "MAX_MON_WIDTH"
        string_val: "MAGIC65"
        string_val: "MAGIC64"
        string_val: "MAGIC63"
        string_val: "MAGIC11"
        string_val: "LS_MINOR_PROBLEM"
        string_val: "LOG_EQ"
        string_val: "ISSLASH"
        string_val: "INODE_FLD"
        string_val: "I);"
        string_val: "I"
        string_val: "HIGHBIT_TO_MASK"
        string_val: "HIDE_AUTOMOUNT_PREFIX"
        string_val: "HAVE_STRUCT_DIRENT_D_TYPE"
        string_val: "HAVE_SMACK"
        string_val: "HAVE_OS_H"
        string_val: "HAVE_NL_LANGINFO"
        string_val: "GT_FILE"
        string_val: "FNM_PERIOD"
        string_val: "FILE_OR_LINK_MODE"
        string_val: "FILETYPE_INDICATORS"
        string_val: "EROFS"
        string_val: "ENOTEMPTY"
        string_val: "ENOSYS"
        string_val: "EIO"
        string_val: "EBUSY"
        string_val: "D_INO"
        string_val: "DT_SOCK"
        string_val: "DT_REG"
        string_val: "DT_LNK"
        string_val: "DT_FIFO"
        string_val: "DT_DIR"
        string_val: "DT_CHR"
        string_val: "DT_BLK"
        string_val: "C_SOCK"
        string_val: "C_RESET"
        string_val: "C_FIFO"
        string_val: "C_DOOR"
        string_val: "C_DIR"
        string_val: "C_CLR_TO_EOL"
        string_val: "C_CHR"
        string_val: "C_BLK"
        string_val: "C"
        string_val: "BLOCK_FLD"
        string_val: "BIT"
        string_val: "ABMON_1"
        string_val: "<<="
        string_val: "9"
        string_val: "77"
        string_val: "65"
        string_val: "64"
        string_val: "55"
        string_val: "51"
        string_val: "385"
        string_val: "35"
        string_val: "33"
        string_val: "31556952"
        string_val: "27"
        string_val: "231"
        string_val: "21"
        string_val: "165"
        string_val: "128"
        string_val: "1155"
        string_val: "105"
        string_val: "1000000"
        string_val: "1,"
        string_val: "0xdfff"
        string_val: "0xd800"
        string_val: "0x9f"
        string_val: "0x60"
        string_val: "0x40"
        string_val: "0x24"
        string_val: "037"
        string_val: "*sorted_file"
        string_val: "*o"
        string_val: "*new"
        string_val: "*line"
        string_val: "*ignore"
        string_val: "*fstatus"
        string_val: "*f"
        string_val: "*ext"
        string_val: "*ent"
        string_val: "*devlist"
        string_val: "(q"
        string_val: "(factors,"
        string_val: "(LIKELY"
        string_val: "(;;)"
        string_val: "(0,"
        string_val: "((C),"
        string_val: "\'}\'"
        string_val: "\'{\'"
        string_val: "\'y\'"
        string_val: "\']\'"
        string_val: "\'\\1\'"
        string_val: "\'[\'"
        string_val: "\'W\'"
        string_val: "\'O\'"
        string_val: "\'J\'"
        string_val: "\';\'"
        string_val: "\'&\'"
        string_val: "\'\"\'"
        string_val: "\'!\'"
        string_val: "%s\"),"
        string_val: "%s"
        string_val: "#comp,"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4016
          }
        }
        tensor_content: "\200\227\241H\240\021\241H\340\343\200H@\260<H\200\037\362G\000\317\242G\2001\224G\200\342\215G\000.\201G\000\354UG\000\354UG\000T9G\000\252%G\000r\035G\000\267\033G\000k\025G\000\357\nG\000\206\357F\000\240\345F\000R\342F\000\344\333F\000B\312F\000f\305F\000\360\303F\000t\274F\000\356\271F\000\254\245F\000\010\245F\000\222\237F\000\314\236F\000\314\231F\000\210\223F\000\332\212F\000\240}F\000d|F\000TtF\000\240qF\000\310kF\000\300fF\000\014NF\000\\GF\000\200DF\000@,F\000L+F\000((F\000\304\036F\000\304\030F\000\234\024F\000\330\007F\000\004\005F\000\330\003F\000X\373E\000\330\367E\000\230\355E\000\000\341E\000\350\334E\000\340\320E\000\340\314E\000\370\301E\000\250\267E\000\020\256E\000H\253E\000\250\243E\0008\242E\000\220\232E\0000\226E\000\360\223E\000p\221E\000\000\217E\000`\212E\000\230\211E\000P\211E\000\220\207E\000h\207E\000\270\204E\000\210\202E\000(\202E\000\370\200E\000\260}E\000\220|E\000PxE\000\340wE\000\360tE\000\240sE\0000rE\000\240qE\000\340pE\000\340nE\000\260nE\000 kE\000\360hE\000 dE\000p`E\000\260\\E\000\300[E\000\240YE\000\320XE\000\260XE\000\340UE\000\220OE\000\220NE\000@NE\0000NE\000\320LE\000\020DE\000\360CE\000`BE\000 @E\000\220=E\000\000:E\000\3408E\000\2208E\000\2407E\000p4E\000\3202E\000\2601E\000\300.E\000\340-E\000\240,E\000\340(E\000\320 E\000\360\037E\000\240\036E\000\200\036E\000`\033E\000\200\032E\000P\032E\000\200\030E\000`\030E\000\360\026E\000`\026E\000@\026E\000 \026E\000\300\020E\000\360\tE\000\240\010E\000\220\010E\000 \010E\000\200\007E\000 \007E\000\200\005E\000`\005E\000`\005E\0000\005E\000\300\003E\0000\003E\000\320\002E\000\240\002E\000\000\002E\000\360\001E\000 \001E\000\200\376D\000 \376D\000\000\375D\000\000\371D\000\300\362D\000`\362D\000`\361D\000 \361D\000\000\360D\000\340\357D\000\340\356D\000\240\345D\000\000\344D\000`\341D\000\000\337D\000\340\333D\000\340\327D\000\340\326D\000\340\324D\000`\323D\000@\323D\000\200\322D\000 \321D\000@\320D\000`\315D\000\000\315D\000\300\314D\000\000\314D\000\000\313D\000\200\312D\000@\311D\000\340\310D\000\240\310D\000\340\307D\000@\307D\000\340\306D\000\000\305D\000\240\304D\000`\303D\000\300\302D\000@\301D\000\000\301D\000\000\301D\000@\300D\000 \300D\000 \277D\000 \276D\000 \276D\000\340\275D\000\300\275D\000 \272D\000\240\271D\000\340\270D\000\300\270D\000\240\270D\000 \270D\000@\266D\000 \266D\000 \265D\000\300\257D\000\200\257D\000@\256D\000\240\255D\000`\255D\000\340\254D\000@\254D\000\000\254D\000`\252D\000 \252D\000@\247D\000\240\246D\000`\246D\000\200\244D\000\300\243D\000\300\243D\000 \243D\000\240\242D\000`\242D\000\200\241D\000`\240D\000\300\237D\000 \237D\000\000\237D\000@\236D\000\340\235D\000\240\233D\000\200\230D\000\300\226D\000\240\226D\000\300\223D\000@\223D\000\340\222D\000 \221D\000\300\217D\000\000\217D\000 \216D\000\000\216D\000\240\215D\000\240\215D\000\240\215D\000\200\215D\000`\213D\000\340\212D\000\340\212D\000\300\212D\000\240\212D\000\200\212D\000\240\211D\000@\206D\000 \206D\000\300\204D\000\340\203D\000\300\202D\000\340\201D\000\200\201D\000\200\201D\000`\201D\000@\201D\000@\200D\000@~D\000\300|D\000\200|D\000\300{D\000\300{D\000\200{D\000\000{D\000\000{D\000\000zD\000@yD\000\000yD\000\000xD\000\300wD\000\300wD\000\000uD\000\300sD\000@rD\000\000rD\000\200oD\000\000nD\000\300mD\000\200mD\000@mD\000\300lD\000@kD\000@kD\000\200hD\000@hD\000\300gD\000\300eD\000\200eD\000\000eD\000\000eD\000\200dD\000\200dD\000@dD\000\000dD\000\300cD\000\300cD\000\000bD\000@aD\000@`D\000\200_D\000@_D\000@^D\000@^D\000@]D\000\300ZD\000@ZD\000@YD\000\000YD\000\300XD\000\000WD\000@TD\000\000SD\000\000SD\000@RD\000\000QD\000\000QD\000@PD\000\300OD\000\300OD\000@OD\000@ND\000\300MD\000\300LD\000\300LD\000@LD\000\200KD\000\200JD\000@JD\000@JD\000@JD\000\200HD\000\300GD\000@GD\000\200FD\000\000FD\000\000CD\000\200BD\000\200AD\000\300@D\000\200@D\000\200>D\000@>D\000@>D\000\200=D\000@=D\000\300<D\000\200<D\000\300;D\000@;D\000@;D\000@;D\000\3009D\000\2009D\000@9D\000@7D\000\0007D\000@6D\000@5D\000\3004D\000\3004D\000\2004D\000\3003D\000\3002D\000@2D\000@2D\000\0002D\000\0001D\000\3000D\000\3000D\000\3000D\000\3000D\000@0D\000\0000D\000\200/D\000\200/D\000\200.D\000\200.D\000\000.D\000@-D\000\300,D\000\300,D\000@*D\000\200)D\000\300(D\000\300(D\000\300(D\000\200(D\000\300\'D\000\300\'D\000\200\'D\000@\'D\000\000\'D\000\000&D\000\000&D\000\300%D\000\300%D\000\200%D\000@%D\000\000%D\000\300$D\000\200$D\000\200$D\000@$D\000\300#D\000\300#D\000\300\"D\000\200\"D\000\200\"D\000\000\"D\000\300!D\000\300!D\000\200!D\000@!D\000\000!D\000\200 D\000\000 D\000\300\037D\000\300\037D\000\300\037D\000\200\037D\000\000\037D\000\200\035D\000\200\035D\000\000\035D\000\300\034D\000\200\034D\000\000\034D\000\300\032D\000\300\032D\000\300\032D\000\200\032D\000@\032D\000\000\032D\000\200\031D\000@\031D\000@\031D\000\000\030D\000\300\027D\000\300\027D\000\200\027D\000@\027D\000@\027D\000\000\027D\000\300\026D\000@\026D\000\200\025D\000@\025D\000@\024D\000\000\024D\000\300\023D\000\300\023D\000\200\023D\000@\023D\000@\023D\000\000\023D\000\200\022D\000@\022D\000@\022D\000@\022D\000\000\022D\000\300\021D\000@\021D\000\000\021D\000\000\020D\000\300\017D\000\300\017D\000\200\017D\000\000\016D\000\000\016D\000\200\rD\000\200\rD\000\200\014D\000\200\014D\000@\014D\000@\014D\000@\014D\000\000\014D\000\000\014D\000\200\013D\000@\013D\000\000\013D\000\300\nD\000\000\nD\000\000\nD\000@\tD\000\000\tD\000\000\t~C\000\000|C\000\000|C\000\000{C\000\000{C\000\000zC\000\000yC\000\000yC\000\000yC\000\000yC\000\000yC\000\000xC\000\000xC\000\000xC\000\000wC\000\000vC\000\000tC\000\000sC\000\000sC\000\000sC\000\000rC\000\000rC\000\000rC\000\000rC\000\000rC\000\000rC\000\000qC\000\000qC\000\000qC\000\000pC\000\000oC\000\000oC\000\000oC\000\000oC\000\000oC\000\000nC\000\000nC\000\000nC\000\000mC\000\000mC\000\000lC\000\000lC\000\000kC\000\000kC\000\000kC\000\000jC\000\000iC\000\000iC\000\000hC\000\000hC\000\000hC\000\000gC\000\000gC\000\000gC\000\000fC\000\000eC\000\000eC\000\000dC\000\000cC\000\000cC\000\000bC\000\000aC\000\000aC\000\000aC\000\000aC\000\000`C\000\000`rC\000\000\rC\000\000\rC\000\000\014C\000\000\014C\000\000\014C\000\000\014C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\013C\000\000\nC\000\000\nC\000\000\nC\000\000\nC\000\000\nC\000\000\tC\000\000\tC\000\000\t|B\000\000|B\000\000|B\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000tB\000\000tB\000\000tB\000\000tB\000\000tB\000\000tB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4016
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1"
  op: "Range"
  input: "model/att_seq2seq/range_1/start"
  input: "model/att_seq2seq/range_1/limit"
  input: "model/att_seq2seq/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_3"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/range_1"
  input: "model/att_seq2seq/Const_2"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4013
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_4"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/range_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_5"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_5"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/Const_3"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\0003\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:3"
  input: "model/att_seq2seq/strided_slice/stack"
  input: "model/att_seq2seq/strided_slice/stack_1"
  input: "model/att_seq2seq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 51
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:2"
  input: "model/att_seq2seq/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/strided_slice"
  input: "model/att_seq2seq/hash_table_1/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/source_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/source_len/tag"
  input: "model/att_seq2seq/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\0003\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:5"
  input: "model/att_seq2seq/strided_slice_1/stack"
  input: "model/att_seq2seq/strided_slice_1/stack_1"
  input: "model/att_seq2seq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 51
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:4"
  input: "model/att_seq2seq/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/strided_slice_1"
  input: "model/att_seq2seq/hash_table_4/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_1"
  op: "Cast"
  input: "model/att_seq2seq/Minimum_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/target_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/target_len/tag"
  input: "model/att_seq2seq/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum"
  op: "Sum"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/Minimum"
  input: "model/att_seq2seq/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/add"
  op: "Add"
  input: "model/att_seq2seq/Sum"
  input: "model/att_seq2seq/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/Assign"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/read"
  op: "Identity"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/AssignAdd"
  op: "AssignAdd"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/num_tokens"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens"
  op: "ScalarSummary"
  input: "model/att_seq2seq/num_tokens/tags"
  input: "model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Identity"
  op: "Identity"
  input: "model/att_seq2seq/strided_slice"
  input: "^model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\371\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3577
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup"
  op: "GatherV2"
  input: "model/att_seq2seq/encode/source_embedding/W/read"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/encode/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/Shape"
  input: "model/att_seq2seq/decode/strided_slice/stack"
  input: "model/att_seq2seq/decode/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\017\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/target_embedding/W/read"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/decode/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/embedding_lookup"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/decode/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/Rank"
  input: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  input: "model/att_seq2seq/decode/TrainingHelper/range"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/strided_slice_1"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/zeros/mul"
  input: "model/att_seq2seq/decode/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros/packed"
  input: "model/att_seq2seq/decode/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/zeros_1/mul"
  input: "model/att_seq2seq/decode/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros_1/packed"
  input: "model/att_seq2seq/decode/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4016
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  op: "LogicalNot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  op: "ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  op: "att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  op: "Enter"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  op: "Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  op: "Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  op: "Sum"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\260\017\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03747658431529999
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03747658431529999
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4016
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  op: "ArgMax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  op: "LogicalOr"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_9"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4016
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/strided_slice_3/stack"
  input: "model/att_seq2seq/strided_slice_3/stack_1"
  input: "model/att_seq2seq/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/strided_slice_3"
  input: "model/att_seq2seq/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  op: "Equal"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  op: "All"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_2"
  op: "Sum"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_3"
  op: "Sum"
  input: "model/att_seq2seq/sub_1"
  input: "model/att_seq2seq/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_2"
  op: "Cast"
  input: "model/att_seq2seq/Sum_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/Sum_2"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_7"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_11"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4016
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  op: "Range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  op: "FloorDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\017\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  op: "SymbolicGradient"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "att_sum_bahdanau"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\371\r\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/loss/tags"
  input: "model/att_seq2seq/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\371\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3577
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\371\r\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3577
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\017\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\260\017\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\260\017\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\260\017\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4016
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4016
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4016
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.000000093488779e-07
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/truediv"
  input: "^model/att_seq2seq/OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2"
  op: "Range"
  input: "model/att_seq2seq/range_2/start"
  input: "model/att_seq2seq/Rank"
  input: "model/att_seq2seq/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat/values_0"
  input: "model/att_seq2seq/range_2"
  input: "model/att_seq2seq/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3"
  op: "Range"
  input: "model/att_seq2seq/range_3/start"
  input: "model/att_seq2seq/Rank_1"
  input: "model/att_seq2seq/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_1/values_0"
  input: "model/att_seq2seq/range_3"
  input: "model/att_seq2seq/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_2"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4"
  op: "Range"
  input: "model/att_seq2seq/range_4/start"
  input: "model/att_seq2seq/Rank_2"
  input: "model/att_seq2seq/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_2/values_0"
  input: "model/att_seq2seq/range_4"
  input: "model/att_seq2seq/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_3"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5"
  op: "Range"
  input: "model/att_seq2seq/range_5/start"
  input: "model/att_seq2seq/Rank_3"
  input: "model/att_seq2seq/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_3/values_0"
  input: "model/att_seq2seq/range_5"
  input: "model/att_seq2seq/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_4"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_4"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6"
  op: "Range"
  input: "model/att_seq2seq/range_6/start"
  input: "model/att_seq2seq/Rank_4"
  input: "model/att_seq2seq/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_4/values_0"
  input: "model/att_seq2seq/range_6"
  input: "model/att_seq2seq/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_5"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7"
  op: "Range"
  input: "model/att_seq2seq/range_7/start"
  input: "model/att_seq2seq/Rank_5"
  input: "model/att_seq2seq/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_5/values_0"
  input: "model/att_seq2seq/range_7"
  input: "model/att_seq2seq/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_6"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToInt64"
  op: "Cast"
  input: "model/att_seq2seq/transpose_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/ToInt64"
  input: "model/att_seq2seq/hash_table_3/Const"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/Variable/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/v_att/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  input: "^model/att_seq2seq/decode/target_embedding/W/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/source_embedding/W/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^model/att_seq2seq/key_value_init"
  input: "^model/att_seq2seq/key_value_init_1"
  input: "^model/att_seq2seq/key_value_init_2"
  input: "^model/att_seq2seq/key_value_init_3"
  input: "^model/att_seq2seq/key_value_init_4"
  input: "^model/att_seq2seq/key_value_init_5"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read/fraction_of_4096_full"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5016_full"
  input: "model/att_seq2seq/source_len"
  input: "model/att_seq2seq/target_len"
  input: "model/att_seq2seq/num_tokens"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  input: "model/att_seq2seq/OptimizeLoss/loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  attr {
    key: "N"
    value {
      i: 70
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_cdd30da40f864e419b20fff46138d352/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/source_embedding/W"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 4016
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4016
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3577
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "att_sum_bahdanau"
      input_arg {
        name: "v_att"
        type: DT_FLOAT
      }
      input_arg {
        name: "keys"
        type: DT_FLOAT
      }
      input_arg {
        name: "query"
        type: DT_FLOAT
      }
      output_arg {
        name: "sum"
        type: DT_FLOAT
      }
      description: "Calculates a batch- and timweise dot product with a variable"
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "query"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add"
      op: "Add"
      input: "keys"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Tanh"
      op: "Tanh"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "v_att"
      input: "Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "mul:z:0"
      input: "Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "sum"
      value: "Sum:output:0"
    }
    attr {
      key: "_noinline"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
