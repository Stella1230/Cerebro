return vl_1 . fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; } @Override
return vl_1 . fn_2 () ; MST[NullReturnValsMutator]MSP[] } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; } @Override
return vl_1 . fn_2 () ; } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; MST[ReturnValsMutator]MSP[] } @Override
return vl_1 . equals ( object ) ; } @Override public int fn_5 () { return vl_1 . fn_5 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
return vl_1 . equals ( object ) ; } @Override public int fn_5 () { return vl_1 . fn_5 () ; MST[PrimitiveReturnsMutator]MSP[] } @Override
return vl_1 . equals ( object ) ; } @Override public int fn_5 () { return vl_1 . fn_5 () ; MST[ReturnValsMutator]MSP[] } @Override
protected vr_1 . vr_2 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 fn_2 () {
return vl_1 . fn_2 () ; } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
protected vr_1 . vr_2 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[NullReturnValsMutator]MSP[] } @Override public vt_1 fn_2 () {
return vl_1 . fn_2 () ; MST[ReturnValsMutator]MSP[] } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; } @Override
return vl_1 . fn_2 () ; } @Override public vt_2 fn_3 () { return vl_1 . fn_3 () ; MST[NullReturnValsMutator]MSP[] } @Override
