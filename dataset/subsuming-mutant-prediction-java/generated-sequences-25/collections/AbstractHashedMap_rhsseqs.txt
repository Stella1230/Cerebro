int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.ABSMutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR4Mutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[InlineConstantMutator]MSP[N] }
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[rv.ROR1Mutator]MSP[N]
return true ; MST[rv.CRCR6Mutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.ROR1Mutator]MSP[N] vr_30 = vl_4 ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI2Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_20 = null ;
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ROR1Mutator]MSP[N] return; } if ( size == 0 ) {
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI3Mutator]MSP[N]
return vr_30 ; MST[rv.UOI4Mutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI1Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.ABSMutator]MSP[S]
if ( vr_52 instanceof vr_13 == false ) { MST[rv.ROR1Mutator]MSP[N] return false ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.UOI2Mutator]MSP[S]
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[rv.CRCR6Mutator]MSP[S] } protected Object fn_2 ( final Object vr_1 ) {
vr_22 += vr_22 << 4 ; MST[rv.CRCR4Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.CRCR5Mutator]MSP[N] }
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.AOR1Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[InlineConstantMutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final vr_36 < ? , ? > vr_66 = fn_29 () ; MST[NonVoidMethodCallMutator]MSP[N] try { while ( vr_66 . hasNext () ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI2Mutator]MSP[N]
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[BooleanTrueReturnValsMutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOR3Mutator]MSP[S]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI2Mutator]MSP[S]
return true ; } @Override public int vr_2 () { int vr_76 = 0 ; MST[rv.CRCR1Mutator]MSP[N]
return vr_4 . vr_6 () ; MST[ReturnValsMutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return null ; } @Override public int size () {
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.ABSMutator]MSP[N] vr_30 = vl_4 ; } }
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ABSMutator]MSP[N] return; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[InlineConstantMutator]MSP[S]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI3Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOD1Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[ArgumentPropagationMutator]MSP[N]
vl_2 ++ ; MST[rv.CRCR5Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR5Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[rv.ROR1Mutator]MSP[N] return true ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[rv.ABSMutator]MSP[S] } else {
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[rv.UOI4Mutator]MSP[N] }
return size ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI4Mutator]MSP[N] }
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI2Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.CRCR5Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[InlineConstantMutator]MSP[N] vr_30 = vl_4 ; } }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR3Mutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI1Mutator]MSP[N] }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI4Mutator]MSP[N] return; } if ( size == 0 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NonVoidMethodCallMutator]MSP[N]
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ROR5Mutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[MathMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
fn_14 ( vr_30 ) ; MST[rv.UOI4Mutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[InlineConstantMutator]MSP[N] fn_21 () ; }
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR4Mutator]MSP[N] }
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.UOI2Mutator]MSP[N] return; }
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.UOI2Mutator]MSP[N] vr_30 = vl_4 ; } }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[ConditionalsBoundaryMutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.UOI4Mutator]MSP[N] vr_30 = vl_4 ; } else {
while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI2Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[rv.UOI2Mutator]MSP[N] } else {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOR3Mutator]MSP[N]
while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[S] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.CRCR5Mutator]MSP[N]
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { MST[rv.ROR5Mutator]MSP[N] fn_35 = new vr_53 <> ( this ) ; }
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.CRCR2Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
protected vr_3 < vt_1 , tp_1 > fn_17 ( Object vr_1 ) { vr_1 = fn_2 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI2Mutator]MSP[N] while ( vr_4 != null ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[InlineConstantMutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[experimental.MemberVariableMutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[experimental.MemberVariableMutator]MSP[N] } else {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.UOI2Mutator]MSP[N] fn_21 () ; }
if ( size >= vl_3 ) { MST[rv.UOI3Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[NonVoidMethodCallMutator]MSP[S]
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } }
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[rv.ROR3Mutator]MSP[N]
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[rv.ROR2Mutator]MSP[N]
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[rv.ROR5Mutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ROR4Mutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.CRCR4Mutator]MSP[N] fn_21 () ; }
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { fn_35 = new vr_53 <> ( this ) ; MST[experimental.MemberVariableMutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[rv.ABSMutator]MSP[N]
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[ArgumentPropagationMutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[N]
vr_5 [ vr_21 ] = null ; MST[rv.UOI2Mutator]MSP[N] } size = 0 ; } protected Object fn_2 ( final Object vr_1 ) {
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI4Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { MST[rv.ROR4Mutator]MSP[N] return false ; }
vl_2 ++ ; MST[rv.AOD1Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( vr_14 . size () != size () ) { MST[rv.ROR4Mutator]MSP[N] return false ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.ABSMutator]MSP[N] fn_21 () ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOD1Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[rv.UOI3Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI4Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[S]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ROR4Mutator]MSP[S]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI3Mutator]MSP[N] return; } if ( size == 0 ) {
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[ConstructorCallMutator]MSP[N] }
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[ReturnValsMutator]MSP[N] }
vr_4 . vr_1 = vr_1 ; MST[experimental.MemberVariableMutator]MSP[N] vr_4 . vr_8 = vr_8 ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.ABSMutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[IncrementsMutator]MSP[S]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR6Mutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( size () == 0 ) { return lr_6 ; MST[ReturnValsMutator]MSP[N] } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.ABSMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI4Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_22 += vr_22 << 4 ; MST[rv.CRCR1Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
fn_9 ( vr_4 . vr_19 () , vr_4 . vr_6 () ) ; MST[ArgumentPropagationMutator]MSP[N] } } @Override public tp_1 remove ( Object vr_1 ) {
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.CRCR2Mutator]MSP[S]
while ( vr_30 < vr_34 ) { MST[rv.UOI1Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[rv.UOI3Mutator]MSP[N] }
for ( final vr_13 . vr_17 < ? extends vt_1 , ? extends tp_1 > vr_4 : vr_14 . vr_18 () ) { MST[NonVoidMethodCallMutator]MSP[N]
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { MST[rv.ROR5Mutator]MSP[N] return true ; }
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOR4Mutator]MSP[N] fn_23 ( vr_4 ) ; }
while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[S] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI3Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[S]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI3Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.ABSMutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[NegateConditionalsMutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[rv.CRCR3Mutator]MSP[N] vr_73 . fn_1 () ;
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[ReturnValsMutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return; }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI3Mutator]MSP[N] return vr_22 ; }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI3Mutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[NegateConditionalsMutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR2Mutator]MSP[N]
out . vr_65 ( vr_5 . length ) ; MST[VoidMethodCallMutator]MSP[N] out . vr_65 ( size ) ;
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.ABSMutator]MSP[N] fn_23 ( vr_4 ) ; }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.CRCR2Mutator]MSP[N] }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[rv.CRCR6Mutator]MSP[S] } }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI4Mutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[rv.UOI3Mutator]MSP[N] vr_4 . vr_2 = vr_2 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
if ( vr_14 . size () != size () ) { return false ; MST[rv.CRCR3Mutator]MSP[N] }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI4Mutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR1Mutator]MSP[N]
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.CRCR6Mutator]MSP[N] vr_30 = vl_4 ; } else {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI1Mutator]MSP[N]
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[NegateConditionalsMutator]MSP[N] return false ; } }
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[experimental.MemberVariableMutator]MSP[N]
return vr_37 . <vt_1 , tp_1 > fn_30 () ; MST[ReturnValsMutator]MSP[N] } return new vr_38 <> ( this ) ; } @Override
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI1Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ROR1Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOR3Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
if ( vr_14 . size () != size () ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[N] }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.OBBN1Mutator]MSP[N] }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.ABSMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_22 += vr_22 << 4 ; MST[rv.UOI2Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[rv.UOI1Mutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.UOI3Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI3Mutator]MSP[N] return null ; } @Override
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR1Mutator]MSP[N] }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[PrimitiveReturnsMutator]MSP[N] }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR4Mutator]MSP[N]
fn_14 ( vr_30 ) ; MST[rv.UOI1Mutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[ReturnValsMutator]MSP[S] } }
vr_33 [ vr_11 ] = vr_4 ; MST[rv.ABSMutator]MSP[N] vr_4 = vr_7 ; } while ( vr_4 != null ); } }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[rv.ROR5Mutator]MSP[N] return false ; } }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[rv.ROR1Mutator]MSP[S] return false ; } }
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[rv.UOI3Mutator]MSP[S]
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[rv.ROR1Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR2Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.ABSMutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI3Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[rv.CRCR3Mutator]MSP[N] }
if ( size () == 0 ) { MST[rv.ROR4Mutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[MathMutator]MSP[N] }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI2Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; MST[rv.ABSMutator]MSP[N] } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final int vr_15 = vr_14 . size () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_15 == 0 ) { return; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[S]
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[rv.UOI1Mutator]MSP[N] } @Override public String toString () {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[S]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.UOI2Mutator]MSP[N] fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOR3Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR1Mutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[BooleanFalseReturnValsMutator]MSP[S] }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[experimental.MemberVariableMutator]MSP[N] fn_21 () ; }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[InlineConstantMutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[rv.CRCR4Mutator]MSP[N] }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR3Mutator]MSP[S]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
vr_33 [ vr_11 ] = vr_4 ; MST[rv.UOI2Mutator]MSP[S] vr_4 = vr_7 ; } while ( vr_4 != null ); } }
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.ABSMutator]MSP[N]
protected void fn_10 ( final vr_3 < vt_1 , tp_1 > vr_4 , final tp_1 vr_28 ) { vr_4 . vr_29 ( vr_28 ) ; MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; MST[rv.UOI2Mutator]MSP[N] } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR4Mutator]MSP[S]
vr_22 += vr_22 << 4 ; MST[rv.AOD2Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[S]
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[rv.CRCR3Mutator]MSP[N] } @Override
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR5Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR1Mutator]MSP[S]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.CRCR6Mutator]MSP[N] }
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[rv.CRCR3Mutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[MathMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[rv.ABSMutator]MSP[N] } @Override public String toString () {
if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR2Mutator]MSP[N]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[InlineConstantMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[InlineConstantMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[MathMutator]MSP[N] return vr_22 ; }
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOD2Mutator]MSP[N] fn_23 ( vr_4 ) ; }
vl_2 ++ ; MST[rv.AOR3Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ROR2Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOR2Mutator]MSP[N] fn_21 () ; }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; MST[rv.UOI3Mutator]MSP[S] vl_2 ++ ;
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[N] }
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[InlineConstantMutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR6Mutator]MSP[S]
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; return vr_12 ; MST[ReturnValsMutator]MSP[N] }
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.CRCR3Mutator]MSP[N] }
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[rv.ABSMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[rv.ROR4Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.UOI3Mutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[NonVoidMethodCallMutator]MSP[N]
return true ; MST[rv.CRCR3Mutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[NonVoidMethodCallMutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR4Mutator]MSP[N]
if ( vr_14 . size () != size () ) { return false ; MST[rv.CRCR6Mutator]MSP[N] }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOD1Mutator]MSP[N] }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI4Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI3Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[rv.CRCR6Mutator]MSP[N] }
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.ABSMutator]MSP[N] return null ; } @Override
vl_2 ++ ; MST[rv.CRCR2Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI1Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI2Mutator]MSP[N] return null ; } @Override
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.UOI3Mutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[NonVoidMethodCallMutator]MSP[N] return false ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR2Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.UOI3Mutator]MSP[N]
return true ; MST[rv.CRCR5Mutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.CRCR3Mutator]MSP[N]
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[rv.ROR2Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI3Mutator]MSP[S]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOR2Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[S]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI4Mutator]MSP[N] }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N]
vr_73 . fn_37 = null ; MST[experimental.MemberVariableMutator]MSP[S] vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; vr_73 . fn_1 () ;
vr_22 += vr_22 << 4 ; MST[rv.AOR4Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR1Mutator]MSP[N] return vr_22 ; }
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_10 ( vr_4 , vr_8 ) ; return vr_12 ; MST[ReturnValsMutator]MSP[N] }
while ( vr_30 < vr_34 ) { MST[rv.ABSMutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[rv.CRCR3Mutator]MSP[S] } protected Object fn_2 ( final Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[S]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[rv.UOI3Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[ReturnValsMutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.CRCR6Mutator]MSP[S]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR4Mutator]MSP[N]
vr_1 = fn_2 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N] final int vr_2 = fn_3 ( vr_1 ) ;
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOD1Mutator]MSP[S]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[rv.CRCR6Mutator]MSP[N] vr_73 . fn_1 () ;
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOR1Mutator]MSP[N] fn_23 ( vr_4 ) ; }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI1Mutator]MSP[N] return; } if ( size == 0 ) {
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.UOI1Mutator]MSP[N] vr_30 = vl_4 ; } else {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.CRCR2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOD1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[rv.CRCR3Mutator]MSP[S] } }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ROR1Mutator]MSP[N]
if ( vr_20 == null ) { vr_5 [ fn_4 ] = vr_4 . vr_7 ; MST[rv.UOI2Mutator]MSP[N] } else {
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.UOI3Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ROR3Mutator]MSP[N] return; }
vr_1 = fn_2 ( vr_1 ) ; final int vr_2 = fn_3 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[rv.CRCR5Mutator]MSP[N] } @Override
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[rv.UOI4Mutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOR3Mutator]MSP[N] }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.ABSMutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_20 = null ;
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[rv.UOI1Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; MST[rv.UOI4Mutator]MSP[N] if ( vr_4 != null ) {
return size ; MST[rv.UOI4Mutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI4Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
return vr_30 ; MST[rv.UOI1Mutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; } return new vr_48 <> ( this ) ; MST[NullReturnValsMutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; MST[rv.UOI4Mutator]MSP[N] size ++ ; fn_21 () ; }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.UOI4Mutator]MSP[S]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[rv.UOI3Mutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[rv.ROR1Mutator]MSP[N] return false ; }
while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.UOI1Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
return vr_47 . <vt_1 > fn_34 () ; MST[NonVoidMethodCallMutator]MSP[N] } return new vr_54 <> ( this ) ; } @Override public int size () {
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI1Mutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ROR1Mutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ABSMutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.OBBN3Mutator]MSP[N] }
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; MST[NonVoidMethodCallMutator]MSP[N] while ( vr_66 . hasNext () ) {
if ( vr_14 . size () != size () ) { return false ; MST[ReturnValsMutator]MSP[N] }
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.CRCR3Mutator]MSP[N] fn_21 () ; }
fn_14 ( vr_30 ) ; } } } @SuppressWarnings ( lr_1 ) MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] protected void fn_14 ( final int vr_30 ) {
while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vr_5 [ vr_21 ] = null ; MST[rv.UOI3Mutator]MSP[S] } size = 0 ; } protected Object fn_2 ( final Object vr_1 ) {
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[rv.ROR5Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
final Object vr_1 = vr_66 . vr_7 () ; final Object vr_8 = vr_66 . vr_6 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_8 == null ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[NonVoidMethodCallMutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ROR5Mutator]MSP[N] return; } if ( size == 0 ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; if ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
vr_73 . vr_5 = new vr_3 [ vr_5 . length ] ; vr_73 . vr_18 = null ; vr_73 . fn_35 = null ; MST[experimental.MemberVariableMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
fn_20 ( vr_4 , fn_4 ) ; MST[rv.UOI1Mutator]MSP[N] size ++ ; fn_21 () ; }
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[experimental.MemberVariableMutator]MSP[N] } protected Object fn_2 ( final Object vr_1 ) {
return size ; MST[rv.UOI1Mutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[rv.CRCR3Mutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[InlineConstantMutator]MSP[S] } }
vr_1 = fn_2 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N] final int vr_2 = fn_3 ( vr_1 ) ;
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[rv.UOI2Mutator]MSP[N] vr_4 . vr_2 = vr_2 ;
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[ArgumentPropagationMutator]MSP[S] return false ; } }
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOR1Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR1Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
return vr_47 . <vt_1 > fn_34 () ; } return new vr_54 <> ( this ) ; MST[NullReturnValsMutator]MSP[N] } @Override public int size () {
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; if ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[N]
out . vr_67 ( vr_66 . vr_7 () ) ; MST[VoidMethodCallMutator]MSP[N] out . vr_67 ( vr_66 . vr_6 () ) ; } }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI4Mutator]MSP[N] return; } if ( size == 0 ) {
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI1Mutator]MSP[N] }
while ( vr_30 < vr_34 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[ReturnValsMutator]MSP[N] }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ROR3Mutator]MSP[S]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[NegateConditionalsMutator]MSP[N] return; } if ( size == 0 ) {
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[NonVoidMethodCallMutator]MSP[N] }
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; if ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR1Mutator]MSP[N]
@SuppressWarnings ( lr_1 ) protected void fn_42 ( final tp_3 vr_68 ) throws IOException , vl_7 { vl_1 = vr_68 . vr_69 () ; MST[experimental.MemberVariableMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.ABSMutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI1Mutator]MSP[N] return null ; } @Override
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOR4Mutator]MSP[N] fn_21 () ; }
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOR3Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.UOI1Mutator]MSP[N] return; }
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.UOI1Mutator]MSP[N] vr_30 = vl_4 ; } }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[rv.ROR5Mutator]MSP[N] return true ; }
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[rv.ABSMutator]MSP[S] vr_4 . vr_2 = vr_2 ;
if ( size >= vl_3 ) { MST[ConditionalsBoundaryMutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.CRCR6Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.ABSMutator]MSP[N]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOR2Mutator]MSP[N] fn_23 ( vr_4 ) ; }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOD2Mutator]MSP[S]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI1Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.CRCR6Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI1Mutator]MSP[N] return vr_22 ; }
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI4Mutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[MathMutator]MSP[N] fn_21 () ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[ConditionalsBoundaryMutator]MSP[S]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[MathMutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR5Mutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI4Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[ArgumentPropagationMutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return true ; }
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[NonVoidMethodCallMutator]MSP[N]
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { fn_35 = new vr_53 <> ( this ) ; MST[ConstructorCallMutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[S]
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[rv.UOI4Mutator]MSP[N]
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[NegateConditionalsMutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.UOI1Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR6Mutator]MSP[S]
while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[rv.UOI3Mutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI1Mutator]MSP[S]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOR2Mutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
vr_22 += vr_22 << 4 ; MST[MathMutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR3Mutator]MSP[N]
return fn_35 ; MST[ReturnValsMutator]MSP[N] } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR6Mutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ABSMutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.CRCR4Mutator]MSP[N] fn_23 ( vr_4 ) ; }
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[rv.CRCR5Mutator]MSP[S] } protected Object fn_2 ( final Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[S]
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[experimental.MemberVariableMutator]MSP[N] vr_4 . vr_2 = vr_2 ;
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[rv.UOI1Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.UOI4Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[BooleanTrueReturnValsMutator]MSP[N]
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[NonVoidMethodCallMutator]MSP[N]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.AOD1Mutator]MSP[N]
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[rv.ROR2Mutator]MSP[N]
while ( vr_30 < vr_34 ) { MST[NegateConditionalsMutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] return; } if ( size == 0 ) {
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[ConditionalsBoundaryMutator]MSP[N] vr_30 = vl_4 ; } else {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI2Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.UOI1Mutator]MSP[S]
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI2Mutator]MSP[N]
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[rv.UOI4Mutator]MSP[S]
vl_2 ++ ; MST[rv.CRCR6Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { MST[rv.UOI2Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
return true ; MST[ReturnValsMutator]MSP[S] } @Override public int vr_2 () { int vr_76 = 0 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NonVoidMethodCallMutator]MSP[S]
while ( vr_30 < vr_34 ) { MST[rv.UOI1Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[rv.ROR4Mutator]MSP[N]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[rv.CRCR1Mutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR3Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOR2Mutator]MSP[S]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR4Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NonVoidMethodCallMutator]MSP[S]
return vr_30 ; MST[rv.UOI3Mutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NonVoidMethodCallMutator]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[rv.CRCR6Mutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.UOI4Mutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.CRCR5Mutator]MSP[N] }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR3Mutator]MSP[S]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI3Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.UOI4Mutator]MSP[N] fn_23 ( vr_4 ) ; }
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.UOI3Mutator]MSP[N] vr_30 = vl_4 ; } else {
return vr_37 . <vt_1 , tp_1 > fn_30 () ; MST[NonVoidMethodCallMutator]MSP[N] } return new vr_38 <> ( this ) ; } @Override
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[NegateConditionalsMutator]MSP[N]
return fn_35 ; MST[EmptyObjectReturnValsMutator]MSP[N] } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) {
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI3Mutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR3Mutator]MSP[S]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.UOI3Mutator]MSP[N] fn_21 () ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR5Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
fn_9 ( vr_4 . vr_19 () , vr_4 . vr_6 () ) ; MST[NonVoidMethodCallMutator]MSP[N] } } @Override public tp_1 remove ( Object vr_1 ) {
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[ReturnValsMutator]MSP[N] }
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[rv.ROR2Mutator]MSP[N] return true ; }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR5Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOD2Mutator]MSP[N]
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[rv.ROR4Mutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[NegateConditionalsMutator]MSP[N]
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ROR5Mutator]MSP[N] return; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI2Mutator]MSP[N]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[ArgumentPropagationMutator]MSP[N] }
vr_20 . vr_7 = vr_4 . vr_7 ; MST[experimental.MemberVariableMutator]MSP[S] } } protected void fn_23 ( final vr_3 < vt_1 , tp_1 > vr_4 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
return vr_37 . <vt_1 , tp_1 > fn_30 () ; } return new vr_38 <> ( this ) ; MST[ConstructorCallMutator]MSP[S] } @Override
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[ArgumentPropagationMutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.UOI1Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI1Mutator]MSP[N] while ( vr_4 != null ) {
if ( size () == 0 ) { MST[NonVoidMethodCallMutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[S]
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[rv.UOI4Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ABSMutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI3Mutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI3Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
return true ; MST[BooleanFalseReturnValsMutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[rv.UOI4Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR5Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.UOI4Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[InlineConstantMutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; }
return true ; MST[rv.CRCR4Mutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final int vr_2 = fn_3 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOD2Mutator]MSP[N] }
} @Override public vr_45 < vr_13 . vr_17 < vt_1 , tp_1 > > vr_18 () { if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
public tp_1 fn_9 ( final vt_1 vr_1 , final tp_1 vr_8 ) { final Object vr_10 = fn_2 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR4Mutator]MSP[N] return vr_22 ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ROR3Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
vr_22 += vr_22 << 4 ; MST[rv.AOR3Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( vr_20 == null ) { MST[rv.ROR5Mutator]MSP[N] vr_5 [ fn_4 ] = vr_4 . vr_7 ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
return vr_30 ; MST[PrimitiveReturnsMutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
return vr_47 . <vt_1 > fn_34 () ; MST[NullReturnValsMutator]MSP[N] } return new vr_54 <> ( this ) ; } @Override public int size () {
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ABSMutator]MSP[N] return; } if ( size == 0 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[NegateConditionalsMutator]MSP[N]
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI4Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
final tp_1 vr_12 = vr_4 . vr_6 () ; MST[NonVoidMethodCallMutator]MSP[N] fn_16 ( vr_4 , vr_11 , vr_20 ) ; return vr_12 ; }
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return; }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI1Mutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.ROR5Mutator]MSP[N] vr_30 = vl_4 ; } }
if ( vr_8 == null ) { MST[rv.ROR5Mutator]MSP[N] for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) {
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR5Mutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
while ( vr_30 < vr_34 ) { MST[rv.ROR2Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; return null ; MST[ReturnValsMutator]MSP[N] } @Override
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; MST[rv.UOI1Mutator]MSP[N] } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
return true ; MST[rv.CRCR2Mutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[S] if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { return true ; }
return true ; MST[rv.CRCR6Mutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[S]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.CRCR3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOD2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[S]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI4Mutator]MSP[N] return vr_22 ; }
fn_14 ( vr_30 ) ; MST[rv.ABSMutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI2Mutator]MSP[N] return; } if ( size == 0 ) {
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[rv.UOI1Mutator]MSP[N] }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI2Mutator]MSP[N] }
return vr_1 == null ? NULL : vr_1 ; MST[rv.ROR5Mutator]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOD1Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[rv.ROR4Mutator]MSP[N] return false ; } }
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[NegateConditionalsMutator]MSP[N] }
out . vr_67 ( vr_66 . vr_7 () ) ; MST[NonVoidMethodCallMutator]MSP[N] out . vr_67 ( vr_66 . vr_6 () ) ; } }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[rv.UOI2Mutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[rv.ABSMutator]MSP[N] }
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_10 ( vr_4 , vr_8 ) ; return vr_12 ; MST[NullReturnValsMutator]MSP[N] }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.UOI2Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOD2Mutator]MSP[N]
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.UOI4Mutator]MSP[N] return; }
while ( vr_30 < vr_34 ) { MST[rv.ROR5Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
fn_9 ( vr_1 , vr_8 ) ; MST[ArgumentPropagationMutator]MSP[N] } } @Override @SuppressWarnings ( lr_1 ) protected vr_41 < vt_1 , tp_1 > fn_43 () {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR6Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI4Mutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { MST[NegateConditionalsMutator]MSP[N] return true ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ROR5Mutator]MSP[N]
if ( vr_8 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) {
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[InlineConstantMutator]MSP[N] }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.ABSMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[rv.ROR2Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { return true ; }
vl_2 ++ ; MST[rv.UOI3Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[MathMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; MST[ReturnValsMutator]MSP[N] } @Override public void clear () { vl_2 ++ ;
if ( vr_20 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_5 [ fn_4 ] = vr_4 . vr_7 ; } else {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.CRCR3Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ROR2Mutator]MSP[N]
return vr_4 . vr_6 () ; MST[NonVoidMethodCallMutator]MSP[S] } vr_4 = vr_4 . vr_7 ; } return null ; } @Override public int size () {
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ROR5Mutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[rv.CRCR6Mutator]MSP[N] } @Override
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ROR2Mutator]MSP[N] return; } if ( size == 0 ) {
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[NonVoidMethodCallMutator]MSP[N] return true ; }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[InlineConstantMutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.ABSMutator]MSP[N] }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[MathMutator]MSP[N] return vr_22 ; }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI2Mutator]MSP[N]
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] vr_30 = vl_4 ; } }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[MathMutator]MSP[N]
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[VoidMethodCallMutator]MSP[N]
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { MST[NegateConditionalsMutator]MSP[N] fn_35 = new vr_53 <> ( this ) ; }
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[rv.UOI3Mutator]MSP[N] return vr_12 ; }
vr_4 . vr_7 = null ; vr_4 . vr_1 = null ; vr_4 . vr_8 = null ; MST[experimental.MemberVariableMutator]MSP[N] } protected void fn_21 () {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[S]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI2Mutator]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.ABSMutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[NonVoidMethodCallMutator]MSP[N] }
if ( size () == 0 ) { MST[rv.ROR3Mutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ROR2Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI2Mutator]MSP[N]
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; return vr_12 ; MST[NullReturnValsMutator]MSP[N] }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ABSMutator]MSP[N]
return vr_1 == null ? NULL : vr_1 ; MST[NegateConditionalsMutator]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI4Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[InlineConstantMutator]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[rv.UOI2Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ROR2Mutator]MSP[N] return; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.UOI3Mutator]MSP[S]
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.ABSMutator]MSP[N] return null ; } @Override
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR5Mutator]MSP[N] }
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.CRCR5Mutator]MSP[N] vr_30 = vl_4 ; } }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI1Mutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI2Mutator]MSP[N] return null ; } @Override
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
while ( vr_30 < vr_34 ) { MST[rv.UOI4Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[experimental.MemberVariableMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[rv.UOI2Mutator]MSP[N] } @Override public String toString () {
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[InlineConstantMutator]MSP[N] fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOR2Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.UOI1Mutator]MSP[N] fn_23 ( vr_4 ) ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; MST[rv.ABSMutator]MSP[N] if ( vr_4 != null ) {
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.CRCR4Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.ABSMutator]MSP[N] while ( vr_4 != null ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ROR2Mutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[NegateConditionalsMutator]MSP[N] }
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOR1Mutator]MSP[N] fn_21 () ; }
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[BooleanTrueReturnValsMutator]MSP[N] } @Override
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.ABSMutator]MSP[S]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[ConditionalsBoundaryMutator]MSP[N]
return size ; MST[rv.ABSMutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
fn_20 ( vr_4 , fn_4 ) ; MST[rv.ABSMutator]MSP[N] size ++ ; fn_21 () ; }
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[rv.ROR3Mutator]MSP[N]
if ( size >= vl_3 ) { MST[rv.UOI4Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; MST[NonVoidMethodCallMutator]MSP[N] } return new vr_48 <> ( this ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.CRCR5Mutator]MSP[S]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR4Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_22 += vr_22 << 4 ; MST[rv.UOI3Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI1Mutator]MSP[N] return; } if ( size == 0 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOR2Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vl_2 ++ ; MST[rv.CRCR3Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[InlineConstantMutator]MSP[S] if ( vr_30 <= vl_4 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR2Mutator]MSP[S]
vl_2 ++ ; MST[MathMutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.UOI4Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
vl_2 ++ ; MST[experimental.MemberVariableMutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[rv.UOI3Mutator]MSP[N] } else {
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOD2Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[rv.ROR1Mutator]MSP[S]
final Object vr_1 = vr_66 . vr_7 () ; final Object vr_8 = vr_66 . vr_6 () ; if ( vr_8 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.UOI4Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI4Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
vr_1 = fn_2 ( vr_1 ) ; final int vr_2 = fn_3 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N]
if ( vr_14 . size () != size () ) { return false ; MST[rv.CRCR1Mutator]MSP[N] }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI2Mutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI3Mutator]MSP[N]
vr_1 = fn_2 ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[N] final int vr_2 = fn_3 ( vr_1 ) ;
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.CRCR5Mutator]MSP[N] fn_23 ( vr_4 ) ; }
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ROR1Mutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[InlineConstantMutator]MSP[S]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR6Mutator]MSP[N] return vr_22 ; }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.ABSMutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
protected void fn_10 ( final vr_3 < vt_1 , tp_1 > vr_4 , final tp_1 vr_28 ) { vr_4 . vr_29 ( vr_28 ) ; MST[ArgumentPropagationMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; MST[NonVoidMethodCallMutator]MSP[N] vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ;
vr_22 += vr_22 << 4 ; MST[rv.UOI4Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[experimental.MemberVariableMutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; MST[rv.UOI2Mutator]MSP[N] if ( vr_4 != null ) {
vr_73 . fn_12 ( this ) ; MST[VoidMethodCallMutator]MSP[N] return vr_73 ; } catch ( final tp_4 vr_74 ) { throw new fn_44 () ; } }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.ABSMutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI4Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI2Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.UOI2Mutator]MSP[S]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
if ( size >= vl_3 ) { MST[rv.UOI3Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[VoidMethodCallMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[rv.UOI3Mutator]MSP[N] } @Override public String toString () {
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR6Mutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR3Mutator]MSP[N]
protected void fn_1 () { } @Override public tp_1 get ( Object vr_1 ) { vr_1 = fn_2 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[rv.CRCR2Mutator]MSP[S] }
final int vr_2 = fn_3 ( vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[N] final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ;
return vr_4 . vr_6 () ; MST[NullReturnValsMutator]MSP[S] } vr_4 = vr_4 . vr_7 ; } return null ; } @Override public int size () {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI1Mutator]MSP[N] return null ; } @Override
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.ABSMutator]MSP[N] return vr_22 ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.ABSMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[rv.CRCR1Mutator]MSP[N] } @Override
vr_18 = new vr_46 <> ( this ) ; } return vr_18 ; MST[EmptyObjectReturnValsMutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[S]
vr_32 [ vr_21 ] = null ; MST[rv.UOI1Mutator]MSP[S] do { final vr_3 < vt_1 , tp_1 > vr_7 = vr_4 . vr_7 ;
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI1Mutator]MSP[S]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.UOI4Mutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI4Mutator]MSP[N] return null ; } @Override
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.ABSMutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
if ( vr_20 == null ) { vr_5 [ fn_4 ] = vr_4 . vr_7 ; MST[rv.UOI3Mutator]MSP[N] } else {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOR2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR3Mutator]MSP[N] return vr_22 ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR4Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR2Mutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
while ( vr_30 < vr_34 ) { MST[rv.UOI3Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.OBBN2Mutator]MSP[N] }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.UOI1Mutator]MSP[N]
return vr_30 ; MST[ReturnValsMutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR2Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[MathMutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_2 ++ ; MST[rv.ABSMutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[MathMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[rv.UOI1Mutator]MSP[N] return vr_12 ; }
protected void fn_20 ( final vr_3 < vt_1 , tp_1 > vr_4 , final int fn_4 ) { vr_5 [ fn_4 ] = vr_4 ; MST[rv.ABSMutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[InlineConstantMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_73 . vr_5 = new vr_3 [ vr_5 . length ] ; vr_73 . vr_18 = null ; MST[experimental.MemberVariableMutator]MSP[S] vr_73 . fn_35 = null ;
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[NonVoidMethodCallMutator]MSP[S] return false ; } }
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.ABSMutator]MSP[S] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.UOI1Mutator]MSP[N]
fn_9 ( vr_1 , vr_8 ) ; MST[NonVoidMethodCallMutator]MSP[N] } } @Override @SuppressWarnings ( lr_1 ) protected vr_41 < vt_1 , tp_1 > fn_43 () {
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI3Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[NegateConditionalsMutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.UOI1Mutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOR1Mutator]MSP[N] }
final Object vr_1 = vr_66 . vr_7 () ; MST[NonVoidMethodCallMutator]MSP[N] final Object vr_8 = vr_66 . vr_6 () ; if ( vr_8 == null ) {
public tp_1 fn_9 ( final vt_1 vr_1 , final tp_1 vr_8 ) { final Object vr_10 = fn_2 ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[rv.UOI2Mutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
if ( size () == 0 ) { MST[rv.ROR5Mutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
vr_22 += vr_22 << 4 ; MST[rv.UOI1Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[NonVoidMethodCallMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.UOI2Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
while ( vr_4 != null ) { MST[rv.ROR5Mutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vr_32 [ vr_21 ] = null ; MST[rv.UOI4Mutator]MSP[N] do { final vr_3 < vt_1 , tp_1 > vr_7 = vr_4 . vr_7 ;
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[ArgumentPropagationMutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR2Mutator]MSP[N] }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[MathMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR5Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ROR4Mutator]MSP[S]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
fn_14 ( vr_30 ) ; MST[rv.UOI2Mutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; MST[rv.CRCR5Mutator]MSP[N] } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
fn_20 ( vr_4 , fn_4 ) ; MST[rv.UOI2Mutator]MSP[N] size ++ ; fn_21 () ; }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR4Mutator]MSP[S]
return size ; MST[rv.UOI2Mutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.UOI4Mutator]MSP[N] fn_21 () ; }
fn_9 ( vr_4 . vr_19 () , vr_4 . vr_6 () ) ; MST[NonVoidMethodCallMutator]MSP[N] } } @Override public tp_1 remove ( Object vr_1 ) {
fn_20 ( vr_4 , fn_4 ) ; MST[VoidMethodCallMutator]MSP[N] size ++ ; fn_21 () ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.UOI3Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( size >= vl_3 ) { MST[rv.UOI1Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[rv.ROR5Mutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOD1Mutator]MSP[N] fn_21 () ; }
try { final vr_41 < vt_1 , tp_1 > vr_73 = ( vr_41 < vt_1 , tp_1 > ) super . fn_43 () ; MST[NonVoidMethodCallMutator]MSP[N]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[rv.CRCR5Mutator]MSP[N] }
final tp_1 vr_12 = vr_4 . vr_6 () ; MST[NonVoidMethodCallMutator]MSP[N] fn_10 ( vr_4 , vr_8 ) ; return vr_12 ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR1Mutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI2Mutator]MSP[N] return vr_22 ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOR4Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[rv.CRCR1Mutator]MSP[S] } }
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } return vr_76 ; } @Override public String toString () {
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR3Mutator]MSP[N]
vr_4 . vr_7 = null ; MST[experimental.MemberVariableMutator]MSP[N] vr_4 . vr_1 = null ; vr_4 . vr_8 = null ; } protected void fn_21 () {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOR3Mutator]MSP[N] fn_21 () ; }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; MST[rv.UOI4Mutator]MSP[S] vl_2 ++ ;
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOR2Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR1Mutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[ReturnValsMutator]MSP[N] }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR2Mutator]MSP[S]
return true ; } @Override public int vr_2 () { int vr_76 = 0 ; MST[rv.CRCR3Mutator]MSP[N]
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; } }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[VoidMethodCallMutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[BooleanTrueReturnValsMutator]MSP[N] }
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOD1Mutator]MSP[N] fn_23 ( vr_4 ) ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vl_2 ++ ; MST[rv.AOR4Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR3Mutator]MSP[N]
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI2Mutator]MSP[N]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[NullReturnValsMutator]MSP[N] }
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.ABSMutator]MSP[N]
vr_33 [ vr_11 ] = vr_4 ; MST[rv.UOI3Mutator]MSP[N] vr_4 = vr_7 ; } while ( vr_4 != null ); } }
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[rv.CRCR1Mutator]MSP[S] } protected Object fn_2 ( final Object vr_1 ) {
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.ABSMutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[S]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; MST[rv.UOI3Mutator]MSP[N] } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ROR3Mutator]MSP[N] return; } if ( size == 0 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[S]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ABSMutator]MSP[N] return; } if ( size == 0 ) {
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOD1Mutator]MSP[N]
if ( vr_8 == null ) { MST[NegateConditionalsMutator]MSP[N] for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { MST[rv.ROR3Mutator]MSP[N] return false ; }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI3Mutator]MSP[N]
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; } return new vr_48 <> ( this ) ; MST[ConstructorCallMutator]MSP[N]
while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[S] if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { return true ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.UOI4Mutator]MSP[S]
vr_22 += vr_22 << 4 ; MST[rv.CRCR2Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[rv.UOI3Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[rv.UOI4Mutator]MSP[S] vr_4 . vr_2 = vr_2 ;
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
fn_14 ( vr_30 ) ; } } } @SuppressWarnings ( lr_1 ) MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] protected void fn_14 ( final int vr_30 ) {
final int vr_2 = fn_3 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S]
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[rv.ABSMutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[InlineConstantMutator]MSP[S]
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[rv.ROR5Mutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR4Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.CRCR4Mutator]MSP[N]
int vr_30 = 1 ; MST[rv.CRCR5Mutator]MSP[N] if ( vr_34 > vl_4 ) { vr_30 = vl_4 ; } else {
if ( vr_20 == null ) { MST[NegateConditionalsMutator]MSP[N] vr_5 [ fn_4 ] = vr_4 . vr_7 ; } else {
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.ROR1Mutator]MSP[N] vr_30 = vl_4 ; } }
vl_2 ++ ; MST[rv.AOD2Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
if ( vr_14 . size () != size () ) { MST[rv.ROR3Mutator]MSP[N] return false ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[rv.UOI1Mutator]MSP[N]
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOD2Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[InlineConstantMutator]MSP[N] }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ROR3Mutator]MSP[N]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[rv.UOI4Mutator]MSP[N] }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ABSMutator]MSP[N]
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[NegateConditionalsMutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.UOI1Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.AOR3Mutator]MSP[N] fn_23 ( vr_4 ) ; }
return vr_47 . <vt_1 > fn_34 () ; MST[ReturnValsMutator]MSP[N] } return new vr_54 <> ( this ) ; } @Override public int size () {
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.UOI4Mutator]MSP[N] vr_30 = vl_4 ; } }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.ABSMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[rv.ABSMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[MathMutator]MSP[N] } return vr_76 ; } @Override public String toString () {
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.CRCR3Mutator]MSP[N]
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[InlineConstantMutator]MSP[N] vr_30 = vl_4 ; } else {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOR1Mutator]MSP[N]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; vr_73 . fn_1 () ; MST[VoidMethodCallMutator]MSP[S]
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ROR1Mutator]MSP[N] return; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[InlineConstantMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.AOR1Mutator]MSP[N]
if ( vr_14 . size () != size () ) { return false ; MST[InlineConstantMutator]MSP[N] }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { return false ; MST[rv.CRCR5Mutator]MSP[S] } }
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI4Mutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[NonVoidMethodCallMutator]MSP[N] return false ; }
return true ; MST[InlineConstantMutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[InlineConstantMutator]MSP[N] } @Override
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[rv.UOI4Mutator]MSP[N] } else {
vr_22 += vr_22 << 4 ; MST[rv.ABSMutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI4Mutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[VoidMethodCallMutator]MSP[N] return null ; } @Override
out . vr_67 ( vr_66 . vr_7 () ) ; out . vr_67 ( vr_66 . vr_6 () ) ; MST[VoidMethodCallMutator]MSP[N] } }
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOR4Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI2Mutator]MSP[N] return; } if ( size == 0 ) {
final vt_1 vr_1 = ( vt_1 ) vr_68 . vr_72 () ; MST[NonVoidMethodCallMutator]MSP[N] final tp_1 vr_8 = ( tp_1 ) vr_68 . vr_72 () ;
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI4Mutator]MSP[N] return vr_22 ; }
vr_22 += vr_22 << 4 ; MST[rv.CRCR6Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI2Mutator]MSP[N] }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI4Mutator]MSP[S]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vr_4 . vr_7 = null ; vr_4 . vr_1 = null ; MST[experimental.MemberVariableMutator]MSP[N] vr_4 . vr_8 = null ; } protected void fn_21 () {
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[NegateConditionalsMutator]MSP[N] return; }
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return true ; }
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[rv.ROR3Mutator]MSP[N] return true ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[InlineConstantMutator]MSP[N] }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR6Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI4Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.CRCR4Mutator]MSP[S]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR3Mutator]MSP[N]
vr_5 [ vr_21 ] = null ; MST[rv.UOI4Mutator]MSP[N] } size = 0 ; } protected Object fn_2 ( final Object vr_1 ) {
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.ABSMutator]MSP[N] } return vr_76 ; } @Override public String toString () {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI3Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_20 = null ;
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI4Mutator]MSP[N] return null ; } @Override
protected void fn_20 ( final vr_3 < vt_1 , tp_1 > vr_4 , final int fn_4 ) { vr_5 [ fn_4 ] = vr_4 ; MST[rv.UOI2Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[rv.ABSMutator]MSP[S]
while ( vr_4 != null ) { MST[NegateConditionalsMutator]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[ReturnValsMutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] fn_35 = new vr_53 <> ( this ) ; }
if ( size >= vl_3 ) { MST[rv.ROR1Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR1Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vl_2 ++ ; MST[rv.CRCR4Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR4Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
return true ; MST[rv.CRCR3Mutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[rv.UOI1Mutator]MSP[N]
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.CRCR5Mutator]MSP[N]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[rv.CRCR5Mutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[NonVoidMethodCallMutator]MSP[N] return true ; }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI1Mutator]MSP[N] return vr_22 ; }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[S]
vr_73 . fn_12 ( this ) ; return vr_73 ; MST[NullReturnValsMutator]MSP[N] } catch ( final tp_4 vr_74 ) { throw new fn_44 () ; } }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[MathMutator]MSP[S]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[ArgumentPropagationMutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.CRCR2Mutator]MSP[N] fn_23 ( vr_4 ) ; }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.ABSMutator]MSP[N] }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR3Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vl_2 ++ ; MST[rv.AOR1Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
vl_2 ++ ; MST[rv.UOI2Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
return true ; } @Override public int vr_2 () { int vr_76 = 0 ; MST[rv.CRCR6Mutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR5Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
if ( size >= vl_3 ) { MST[rv.ABSMutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[MathMutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.CRCR4Mutator]MSP[N] }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[experimental.MemberVariableMutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; MST[rv.UOI1Mutator]MSP[N] vl_2 ++ ;
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI4Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI3Mutator]MSP[N]
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[rv.ROR1Mutator]MSP[N]
vr_5 [ vr_21 ] = null ; } size = 0 ; MST[InlineConstantMutator]MSP[S] } protected Object fn_2 ( final Object vr_1 ) {
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[rv.UOI3Mutator]MSP[N]
return vr_47 . <vt_1 > fn_34 () ; } return new vr_54 <> ( this ) ; MST[ReturnValsMutator]MSP[N] } @Override public int size () {
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ROR4Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[rv.ROR4Mutator]MSP[N]
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.CRCR1Mutator]MSP[N] }
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; MST[rv.UOI1Mutator]MSP[N] vr_4 . vr_2 = vr_2 ;
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR6Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI3Mutator]MSP[N]
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[N]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[rv.UOI1Mutator]MSP[N] }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.AOR1Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
return true ; MST[InlineConstantMutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR4Mutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI3Mutator]MSP[N] }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[rv.UOI2Mutator]MSP[N] }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI1Mutator]MSP[S]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[ReturnValsMutator]MSP[N] }
return vr_1 == null ? NULL : vr_1 ; MST[ReturnValsMutator]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI4Mutator]MSP[N] while ( vr_4 != null ) {
@SuppressWarnings ( lr_1 ) protected void fn_42 ( final tp_3 vr_68 ) throws IOException , vl_7 { vl_1 = vr_68 . vr_69 () ; MST[NonVoidMethodCallMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.AOR3Mutator]MSP[N]
protected vr_3 < vt_1 , tp_1 > fn_17 ( Object vr_1 ) { vr_1 = fn_2 ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[S]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.UOI1Mutator]MSP[N] fn_21 () ; }
return vr_1 == null ? NULL : vr_1 ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[rv.CRCR1Mutator]MSP[N] vr_73 . fn_1 () ;
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return true ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOD2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_30 < vr_34 ) { MST[rv.ROR1Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ABSMutator]MSP[S]
final int vr_70 = vr_68 . vr_71 () ; final int size = vr_68 . vr_71 () ; fn_1 () ; MST[VoidMethodCallMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR2Mutator]MSP[N]
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[rv.ROR3Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ROR1Mutator]MSP[S]
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[rv.ROR3Mutator]MSP[N] return false ; } }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vr_73 . vr_5 = new vr_3 [ vr_5 . length ] ; MST[experimental.MemberVariableMutator]MSP[N] vr_73 . vr_18 = null ; vr_73 . fn_35 = null ;
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[rv.UOI4Mutator]MSP[N] return vr_12 ; }
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.UOI2Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[ArgumentPropagationMutator]MSP[S]
if ( size () == 0 ) { MST[rv.ROR2Mutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[rv.CRCR1Mutator]MSP[N] }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[rv.ABSMutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI1Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.ROR5Mutator]MSP[N] vr_30 = vl_4 ; } else {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
} @Override public vr_45 < vr_13 . vr_17 < vt_1 , tp_1 > > vr_18 () { if ( vr_18 == null ) { MST[rv.ROR5Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.UOI2Mutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; }
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ABSMutator]MSP[N]
return true ; MST[rv.CRCR2Mutator]MSP[N] } @Override public int vr_2 () { int vr_76 = 0 ;
protected void fn_20 ( final vr_3 < vt_1 , tp_1 > vr_4 , final int fn_4 ) { vr_5 [ fn_4 ] = vr_4 ; MST[rv.UOI1Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR3Mutator]MSP[N]
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; } return new vr_48 <> ( this ) ; MST[ReturnValsMutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR4Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[VoidMethodCallMutator]MSP[N]
if ( vr_14 . size () != size () ) { return false ; MST[rv.CRCR5Mutator]MSP[N] }
if ( vr_52 instanceof vr_13 == false ) { MST[rv.ROR5Mutator]MSP[N] return false ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR2Mutator]MSP[N] return vr_22 ; }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOR1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.CRCR6Mutator]MSP[N] vr_30 = vl_4 ; } }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI3Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI3Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI2Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
return vr_4 ; MST[NullReturnValsMutator]MSP[S] } vr_4 = vr_4 . vr_7 ; } return null ; }
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.ROR5Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[rv.UOI2Mutator]MSP[N]
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[NegateConditionalsMutator]MSP[N] return true ; }
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.AOD2Mutator]MSP[N] fn_21 () ; }
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOD1Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
return vr_37 . <vt_1 , tp_1 > fn_30 () ; } return new vr_38 <> ( this ) ; MST[ReturnValsMutator]MSP[S] } @Override
return size ; MST[ReturnValsMutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR3Mutator]MSP[N]
vl_2 ++ ; MST[rv.UOI1Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
return true ; } @Override public int vr_2 () { int vr_76 = 0 ; MST[rv.CRCR5Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI2Mutator]MSP[N]
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[experimental.MemberVariableMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.ABSMutator]MSP[N]
if ( vr_20 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] vr_5 [ fn_4 ] = vr_4 . vr_7 ; } else {
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[rv.ROR3Mutator]MSP[S]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.UOI4Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI2Mutator]MSP[N] return vr_22 ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
return vr_1 == null ? NULL : vr_1 ; MST[NullReturnValsMutator]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
if ( vr_52 instanceof vr_13 == false ) { MST[NegateConditionalsMutator]MSP[N] return false ; }
if ( vr_14 . size () != size () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vl_2 ++ ; MST[rv.AOR2Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
fn_14 ( vr_30 ) ; MST[VoidMethodCallMutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR4Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vr_4 = vr_4 . vr_7 ; } } } return false ; MST[ReturnValsMutator]MSP[N] } @Override
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[IncrementsMutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; fn_21 () ; MST[VoidMethodCallMutator]MSP[N] }
} @Override public vr_45 < vr_13 . vr_17 < vt_1 , tp_1 > > vr_18 () { if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[rv.UOI2Mutator]MSP[N] return vr_12 ; }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.ABSMutator]MSP[N] return vr_22 ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = new vr_3 [ vr_30 ] ; MST[rv.UOI1Mutator]MSP[N] } else {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI3Mutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[NegateConditionalsMutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI2Mutator]MSP[N]
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.ROR3Mutator]MSP[N]
vr_18 = new vr_46 <> ( this ) ; MST[experimental.MemberVariableMutator]MSP[N] } return vr_18 ; }
public vr_36 < vt_1 , tp_1 > fn_29 () { if ( size == 0 ) { MST[rv.UOI2Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI4Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[rv.CRCR5Mutator]MSP[N] vr_73 . fn_1 () ;
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[rv.UOI4Mutator]MSP[N] } @Override public String toString () {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[S]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[rv.UOI2Mutator]MSP[N] }
vr_33 [ vr_11 ] = vr_4 ; MST[rv.UOI4Mutator]MSP[N] vr_4 = vr_7 ; } while ( vr_4 != null ); } }
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.CRCR5Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
vr_4 . vr_1 = vr_1 ; vr_4 . vr_8 = vr_8 ; MST[experimental.MemberVariableMutator]MSP[N] }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[rv.ROR2Mutator]MSP[N] return false ; } }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; fn_14 ( fn_15 ( vr_16 ) ) ; MST[rv.UOI4Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[S]
while ( vr_30 < vr_34 ) { MST[rv.ROR3Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[InlineConstantMutator]MSP[N] return vr_22 ; }
while ( vr_30 < vr_34 ) { MST[ConditionalsBoundaryMutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final Object vr_1 = vr_66 . vr_7 () ; final Object vr_8 = vr_66 . vr_6 () ; if ( vr_8 == null ) { MST[NegateConditionalsMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { return true ; }
return vr_4 ; MST[ReturnValsMutator]MSP[S] } vr_4 = vr_4 . vr_7 ; } return null ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; MST[rv.UOI3Mutator]MSP[N] if ( vr_4 != null ) {
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[PrimitiveReturnsMutator]MSP[N] }
} @Override public vr_45 < vr_13 . vr_17 < vt_1 , tp_1 > > vr_18 () { if ( vr_18 == null ) { MST[NegateConditionalsMutator]MSP[N]
if ( vr_8 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.UOI3Mutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[NegateConditionalsMutator]MSP[N]
if ( vr_52 instanceof vr_13 == false ) { return false ; MST[rv.CRCR5Mutator]MSP[N] }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.CRCR6Mutator]MSP[N] }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[InlineConstantMutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[rv.ROR5Mutator]MSP[N] return false ; }
vr_22 += vr_22 << 4 ; MST[rv.AOR2Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.ABSMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; vr_5 = vr_33 ; MST[experimental.MemberVariableMutator]MSP[N] } } protected int fn_15 ( final int vr_34 ) {
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.CRCR6Mutator]MSP[N] fn_21 () ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI1Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_20 = null ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI2Mutator]MSP[N]
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] vr_30 = vl_4 ; } else {
vr_32 [ vr_21 ] = null ; MST[rv.ABSMutator]MSP[N] do { final vr_3 < vt_1 , tp_1 > vr_7 = vr_4 . vr_7 ;
return true ; MST[rv.CRCR5Mutator]MSP[S] } @Override public int vr_2 () { int vr_76 = 0 ;
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[ConditionalsBoundaryMutator]MSP[N] return; } if ( size == 0 ) {
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[experimental.MemberVariableMutator]MSP[S]
for ( final vr_3 < vt_1 , tp_1 > vr_9 : vr_5 ) { MST[rv.UOI3Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_4 = vr_9 ;
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.CRCR5Mutator]MSP[N] vr_30 = vl_4 ; } else {
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI4Mutator]MSP[N]
protected void fn_20 ( final vr_3 < vt_1 , tp_1 > vr_4 , final int fn_4 ) { vr_5 [ fn_4 ] = vr_4 ; MST[rv.UOI4Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI1Mutator]MSP[N]
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; MST[NullReturnValsMutator]MSP[N] } return new vr_48 <> ( this ) ;
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[InlineConstantMutator]MSP[N] vr_73 . fn_1 () ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR1Mutator]MSP[N]
if ( size >= vl_3 ) { MST[rv.ROR5Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
fn_9 ( vr_4 . vr_19 () , vr_4 . vr_6 () ) ; MST[NonVoidMethodCallMutator]MSP[N] } } @Override public tp_1 remove ( Object vr_1 ) {
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.UOI4Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR6Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
vr_1 = fn_2 ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[N] final int vr_2 = fn_3 ( vr_1 ) ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR5Mutator]MSP[N]
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.CRCR1Mutator]MSP[N]
return new vr_3 <> ( vr_7 , vr_2 , fn_2 ( vr_1 ) , vr_8 ) ; MST[rv.ABSMutator]MSP[N] }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR1Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; MST[rv.ABSMutator]MSP[N] vl_2 ++ ;
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.ABSMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[MathMutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.CRCR6Mutator]MSP[N] fn_23 ( vr_4 ) ; }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; vr_4 . vr_7 = vr_33 [ vr_11 ] ; MST[experimental.MemberVariableMutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[ReturnValsMutator]MSP[N] } @Override public String toString () {
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.CRCR5Mutator]MSP[N] return vr_22 ; }
final int vr_70 = vr_68 . vr_71 () ; MST[NonVoidMethodCallMutator]MSP[N] final int size = vr_68 . vr_71 () ; fn_1 () ;
return vr_1 == null ? NULL : vr_1 ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } protected int fn_3 ( final Object vr_1 ) {
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[NonVoidMethodCallMutator]MSP[S] return false ; } }
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR4Mutator]MSP[N]
public vr_45 < vt_1 > fn_35 () { if ( fn_35 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] fn_35 = new vr_53 <> ( this ) ; }
return vr_37 . <vt_1 , tp_1 > fn_30 () ; } return new vr_38 <> ( this ) ; MST[NullReturnValsMutator]MSP[S] } @Override
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOD1Mutator]MSP[S]
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; MST[rv.UOI3Mutator]MSP[N] return vr_22 ; }
if ( size () == 0 ) { return lr_6 ; MST[EmptyObjectReturnValsMutator]MSP[N] } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR2Mutator]MSP[N]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.CRCR4Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[ArgumentPropagationMutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR2Mutator]MSP[S]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.UOI3Mutator]MSP[N] return; } if ( size == 0 ) {
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.CRCR2Mutator]MSP[N]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOD2Mutator]MSP[N]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[rv.ROR4Mutator]MSP[N]
if ( vr_20 == null ) { vr_5 [ fn_4 ] = vr_4 . vr_7 ; MST[rv.UOI4Mutator]MSP[N] } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI4Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
if ( vr_14 . size () != size () ) { MST[NegateConditionalsMutator]MSP[N] return false ; }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR5Mutator]MSP[N]
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[VoidMethodCallMutator]MSP[N] return vr_12 ; }
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[NegateConditionalsMutator]MSP[S]
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[rv.ROR1Mutator]MSP[N]
if ( size >= vl_3 ) { MST[rv.UOI2Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
final Object vr_1 = vr_66 . vr_7 () ; final Object vr_8 = vr_66 . vr_6 () ; if ( vr_8 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.CRCR3Mutator]MSP[S]
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[rv.CRCR6Mutator]MSP[N] }
while ( vr_30 < vr_34 ) { MST[rv.UOI2Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI4Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.CRCR6Mutator]MSP[N]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; vr_73 . size = 0 ; MST[experimental.MemberVariableMutator]MSP[N] vr_73 . fn_1 () ;
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[rv.ROR3Mutator]MSP[N] }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[MathMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOR1Mutator]MSP[S]
vl_2 ++ ; MST[rv.UOI4Mutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
for ( int vr_21 = 0 ; vr_21 < size ; vr_21 ++ ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N]
fn_14 ( vr_30 ) ; MST[rv.UOI3Mutator]MSP[S] } } } @SuppressWarnings ( lr_1 ) protected void fn_14 ( final int vr_30 ) {
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
return true ; } @Override public int vr_2 () { int vr_76 = 0 ; MST[InlineConstantMutator]MSP[N]
if ( size >= vl_3 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.UOI1Mutator]MSP[S]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; vr_5 = new vr_3 [ vr_70 ] ; MST[rv.UOI4Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[ArgumentPropagationMutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[InlineConstantMutator]MSP[N]
return vr_30 ; MST[rv.ABSMutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.UOI2Mutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.UOI3Mutator]MSP[N] return; }
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.ABSMutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.CRCR5Mutator]MSP[N] fn_21 () ; }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.CRCR2Mutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI4Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_20 = null ;
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[rv.ROR3Mutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[IncrementsMutator]MSP[N]
vr_4 = vr_4 . vr_7 ; } fn_11 ( vr_11 , vr_2 , vr_1 , vr_8 ) ; MST[rv.UOI3Mutator]MSP[N] return null ; } @Override
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI3Mutator]MSP[S] vr_5 = vr_33 ; } } protected int fn_15 ( final int vr_34 ) {
protected void fn_1 () { } @Override public tp_1 get ( Object vr_1 ) { vr_1 = fn_2 ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[N]
return vr_47 . < vr_13 . vr_17 < vt_1 , tp_1 > > fn_34 () ; MST[ReturnValsMutator]MSP[N] } return new vr_48 <> ( this ) ;
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[experimental.MemberVariableMutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
vr_3 < vt_1 , tp_1 > vr_4 = vr_32 [ vr_21 ] ; if ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.CRCR3Mutator]MSP[N] fn_23 ( vr_4 ) ; }
return vr_30 ; MST[rv.UOI2Mutator]MSP[N] } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ;
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.CRCR3Mutator]MSP[N] }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[ArgumentPropagationMutator]MSP[N]
final int vr_70 = vr_68 . vr_71 () ; final int size = vr_68 . vr_71 () ; MST[NonVoidMethodCallMutator]MSP[N] fn_1 () ;
fn_14 ( vr_30 ) ; } } } @SuppressWarnings ( lr_1 ) MST[NegateConditionalsMutator]MSP[N] protected void fn_14 ( final int vr_30 ) {
return size ; MST[rv.UOI3Mutator]MSP[N] } @Override public boolean isEmpty () { return size == 0 ; } @Override public boolean fn_6 ( Object vr_1 ) {
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[rv.CRCR5Mutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[S]
while ( vr_4 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI4Mutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI2Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR6Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.AOR4Mutator]MSP[N] }
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.ABSMutator]MSP[N] vr_30 = vl_4 ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[S]
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[MathMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ABSMutator]MSP[N]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
vr_18 = new vr_46 <> ( this ) ; } return vr_18 ; MST[ReturnValsMutator]MSP[N] }
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.CRCR2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.ABSMutator]MSP[N]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR6Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
final Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > vr_66 = fn_33 () ; while ( vr_66 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
fn_14 ( vr_30 ) ; } } } @SuppressWarnings ( lr_1 ) MST[rv.ROR5Mutator]MSP[N] protected void fn_14 ( final int vr_30 ) {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[MathMutator]MSP[N]
if ( vr_20 == null ) { vr_5 [ fn_4 ] = vr_4 . vr_7 ; MST[rv.UOI1Mutator]MSP[N] } else {
vr_76 += vr_66 . vr_7 () . vr_2 () ; } return vr_76 ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public String toString () {
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI1Mutator]MSP[N]
vr_33 [ vr_11 ] = vr_4 ; MST[rv.UOI1Mutator]MSP[S] vr_4 = vr_7 ; } while ( vr_4 != null ); } }
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[NegateConditionalsMutator]MSP[N]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.UOI2Mutator]MSP[N]
if ( vr_20 == null ) { vr_5 [ fn_4 ] = vr_4 . vr_7 ; MST[rv.ABSMutator]MSP[N] } else {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.AOR4Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.ABSMutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_3 = fn_24 ( vr_30 , vl_1 ) ; MST[rv.UOI1Mutator]MSP[N] vr_5 = new vr_3 [ vr_30 ] ; } else {
out . vr_65 ( vr_5 . length ) ; out . vr_65 ( size ) ; MST[rv.UOI2Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.AOD1Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI3Mutator]MSP[N]
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[rv.ROR3Mutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; MST[VoidMethodCallMutator]MSP[N] }
if ( size () == 0 ) { MST[NegateConditionalsMutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR5Mutator]MSP[N]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
final vr_36 < ? , ? > vr_66 = fn_29 () ; try { while ( vr_66 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[N]
int vr_30 = 1 ; if ( vr_34 > vl_4 ) { MST[rv.UOI2Mutator]MSP[N] vr_30 = vl_4 ; } else {
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[rv.UOI3Mutator]MSP[N] fn_23 ( vr_4 ) ; }
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[experimental.MemberVariableMutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[NegateConditionalsMutator]MSP[N]
final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[rv.UOI2Mutator]MSP[N]
final int vr_2 = fn_3 ( vr_10 ) ; final int vr_11 = fn_4 ( vr_2 , vr_5 . length ) ; MST[NonVoidMethodCallMutator]MSP[N]
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.UOI2Mutator]MSP[S]
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.CRCR6Mutator]MSP[N]
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] return; } if ( size == 0 ) {
return fn_35 ; } protected Iterator < vt_1 > fn_36 () { if ( size () == 0 ) { MST[rv.ROR5Mutator]MSP[N]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.ROR5Mutator]MSP[N]
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOR4Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.UOI3Mutator]MSP[N]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[rv.ABSMutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR3Mutator]MSP[S] } @Override public boolean fn_6 ( Object vr_1 ) {
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[ReturnValsMutator]MSP[N] }
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[MathMutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[S]
vr_73 . fn_37 = null ; vr_73 . vl_2 = 0 ; MST[rv.CRCR6Mutator]MSP[S] vr_73 . size = 0 ; vr_73 . fn_1 () ;
vr_22 += vr_22 << 4 ; MST[InlineConstantMutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[rv.CRCR1Mutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ROR2Mutator]MSP[S]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ROR5Mutator]MSP[S]
vl_3 = fn_24 ( vr_70 , vl_1 ) ; MST[ArgumentPropagationMutator]MSP[N] vr_5 = new vr_3 [ vr_70 ] ;
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[MathMutator]MSP[N]
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI4Mutator]MSP[N]
return vr_30 ; } protected int fn_24 ( final int vr_30 , final float vr_35 ) { return (int) ( vr_30 * vr_35 ) ; MST[rv.AOR4Mutator]MSP[N]
if ( size >= vl_3 ) { MST[rv.UOI1Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
vr_76 += vr_66 . vr_7 () . vr_2 () ; MST[rv.AOR1Mutator]MSP[N] } return vr_76 ; } @Override public String toString () {
return true ; MST[ReturnValsMutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
final int vr_15 = vr_14 . size () ; if ( vr_15 == 0 ) { MST[rv.ROR4Mutator]MSP[N] return; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.UOI2Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOD2Mutator]MSP[N]
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[ConditionalsBoundaryMutator]MSP[N]
fn_20 ( vr_4 , fn_4 ) ; size ++ ; MST[rv.CRCR2Mutator]MSP[N] fn_21 () ; }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { MST[rv.ROR4Mutator]MSP[N] return; } if ( size == 0 ) {
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.UOI1Mutator]MSP[N]
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; MST[rv.ABSMutator]MSP[N] size -- ; fn_23 ( vr_4 ) ; }
if ( vr_52 instanceof vr_13 == false ) { MST[rv.ROR2Mutator]MSP[N] return false ; }
out . vr_67 ( vr_66 . vr_7 () ) ; out . vr_67 ( vr_66 . vr_6 () ) ; MST[NonVoidMethodCallMutator]MSP[N] } }
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.UOI3Mutator]MSP[S]
protected void fn_41 ( final tp_2 out ) throws IOException { out . vr_64 ( vl_1 ) ; MST[rv.UOI2Mutator]MSP[N]
if ( vr_14 . size () != size () ) { MST[rv.ROR2Mutator]MSP[N] return false ; }
if ( size >= vl_3 ) { MST[rv.UOI4Mutator]MSP[N] final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) {
if ( size () == 0 ) { MST[rv.ROR1Mutator]MSP[N] return lr_6 ; } final StringBuilder vr_77 = new StringBuilder ( 32 * size () ) ;
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[ConditionalsBoundaryMutator]MSP[N] vr_30 = vl_4 ; } }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
final int vr_11 = fn_4 ( vr_4 . vr_2 , vr_30 ) ; MST[rv.UOI1Mutator]MSP[N] vr_4 . vr_7 = vr_33 [ vr_11 ] ;
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_10 ( vr_4 , vr_8 ) ; MST[VoidMethodCallMutator]MSP[N] return vr_12 ; }
while ( vr_30 < vr_34 ) { MST[rv.UOI3Mutator]MSP[N] vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { vr_30 = vl_4 ; } }
public void fn_12 ( final vr_13 < ? extends vt_1 , ? extends tp_1 > vr_14 ) { fn_13 ( vr_14 ) ; MST[VoidMethodCallMutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.UOI4Mutator]MSP[N]
protected Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > fn_33 () { if ( size () == 0 ) { MST[rv.ROR4Mutator]MSP[N]
vr_5 [ vr_21 ] = null ; MST[rv.ABSMutator]MSP[S] } size = 0 ; } protected Object fn_2 ( final Object vr_1 ) {
vr_20 = vr_4 ; vr_4 = vr_4 . vr_7 ; } return null ; } @Override public void clear () { vl_2 ++ ; MST[rv.CRCR3Mutator]MSP[N]
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[NegateConditionalsMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.CRCR1Mutator]MSP[N]
return vr_47 . <vt_1 > fn_34 () ; } return new vr_54 <> ( this ) ; MST[ConstructorCallMutator]MSP[N] } @Override public int size () {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ fn_4 ( vr_2 , vr_5 . length ) ] ; MST[rv.UOI3Mutator]MSP[S]
vr_22 += vr_22 << 4 ; MST[rv.CRCR5Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
return vr_37 . <vt_1 , tp_1 > fn_30 () ; MST[NullReturnValsMutator]MSP[N] } return new vr_38 <> ( this ) ; } @Override
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[NonVoidMethodCallMutator]MSP[N]
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.AOR4Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
return vr_4 . vr_6 () ; } vr_4 = vr_4 . vr_7 ; } return null ; MST[ReturnValsMutator]MSP[N] } @Override public int size () {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; vr_22 ^= vr_22 >>> 14 ; MST[rv.UOI1Mutator]MSP[N]
final Object vr_1 = vr_66 . vr_7 () ; final Object vr_8 = vr_66 . vr_6 () ; if ( vr_8 == null ) { MST[rv.ROR5Mutator]MSP[S]
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[rv.CRCR5Mutator]MSP[N]
vr_22 += vr_22 << 4 ; MST[rv.UOI2Mutator]MSP[N] vr_22 ^= vr_22 >>> 10 ; return vr_22 ; }
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[MathMutator]MSP[N] fn_23 ( vr_4 ) ; }
vr_22 += vr_22 << 4 ; vr_22 ^= vr_22 >>> 10 ; return vr_22 ; MST[rv.UOI3Mutator]MSP[N] }
if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_10 , vr_4 . vr_1 ) ) { MST[rv.ROR5Mutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[MathMutator]MSP[S] if ( vr_30 <= vl_4 ) {
vr_3 < vt_1 , tp_1 > vr_4 = vr_5 [ vr_11 ] ; MST[rv.UOI3Mutator]MSP[N] while ( vr_4 != null ) {
vl_2 ++ ; fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; MST[experimental.MemberVariableMutator]MSP[N] fn_23 ( vr_4 ) ; }
final int vr_31 = vr_5 . length ; if ( vr_30 <= vr_31 ) { return; } if ( size == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
return size ; } @Override public boolean isEmpty () { return size == 0 ; MST[rv.CRCR3Mutator]MSP[N] } @Override public boolean fn_6 ( Object vr_1 ) {
int vr_22 = vr_1 . vr_2 () ; vr_22 += ~ ( vr_22 << 9 ) ; MST[rv.UOI2Mutator]MSP[N] vr_22 ^= vr_22 >>> 14 ;
for ( int vr_21 = vr_5 . length - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.AOR1Mutator]MSP[S]
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; MST[rv.UOI2Mutator]MSP[N] vl_2 ++ ;
while ( vr_4 != null ) { if ( fn_8 ( vr_8 , vr_4 . vr_6 () ) ) { MST[rv.ROR4Mutator]MSP[N] return true ; }
final vr_3 < vt_1 , tp_1 > vr_4 = fn_19 ( vr_5 [ fn_4 ] , vr_2 , vr_1 , vr_8 ) ; MST[NonVoidMethodCallMutator]MSP[N]
final tp_1 vr_12 = vr_4 . vr_6 () ; fn_16 ( vr_4 , vr_11 , vr_20 ) ; MST[rv.ABSMutator]MSP[N] return vr_12 ; }
final vt_1 vr_1 , final tp_1 vr_8 ) { vr_4 . vr_7 = vr_5 [ fn_4 ] ; vr_4 . vr_2 = vr_2 ; MST[rv.UOI2Mutator]MSP[N]
for ( final vr_36 < vt_1 , tp_1 > vr_66 = fn_29 () ; vr_66 . hasNext () ; ) { MST[rv.ROR2Mutator]MSP[N]
return true ; } vr_4 = vr_4 . vr_7 ; } return false ; MST[InlineConstantMutator]MSP[N] } @Override public boolean fn_7 ( final Object vr_8 ) {
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N]
return vr_4 ; } vr_4 = vr_4 . vr_7 ; } return null ; MST[ReturnValsMutator]MSP[S] }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.AOR3Mutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
final vr_3 < vt_1 , tp_1 > vr_33 [] = new vr_3 [ vr_30 ] ; vl_2 ++ ; MST[rv.AOR4Mutator]MSP[S]
vr_32 [ vr_21 ] = null ; MST[rv.UOI2Mutator]MSP[N] do { final vr_3 < vt_1 , tp_1 > vr_7 = vr_4 . vr_7 ;
protected void fn_11 ( final int fn_4 , final int vr_2 , final vt_1 vr_1 , final tp_1 vr_8 ) { vl_2 ++ ; MST[rv.AOR3Mutator]MSP[N]
vr_18 = new vr_46 <> ( this ) ; MST[ConstructorCallMutator]MSP[N] } return vr_18 ; }
} else { if ( vr_8 . equals ( vr_14 . get ( vr_1 ) ) == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] return false ; } }
for ( int vr_21 = vr_31 - 1 ; vr_21 >= 0 ; vr_21 -- ) { MST[rv.ROR5Mutator]MSP[N]
protected int fn_4 ( final int vr_2 , final int vr_27 ) { return vr_2 & vr_27 - 1 ; MST[rv.UOI3Mutator]MSP[N] }
@Override public boolean equals ( final Object vr_52 ) { if ( vr_52 == this ) { return true ; MST[rv.CRCR3Mutator]MSP[N] }
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ABSMutator]MSP[N]
vr_73 . fn_12 ( this ) ; return vr_73 ; MST[ReturnValsMutator]MSP[N] } catch ( final tp_4 vr_74 ) { throw new fn_44 () ; } }
protected boolean fn_5 ( final Object vr_23 , final Object vr_24 ) { return vr_23 == vr_24 || vr_23 . equals ( vr_24 ) ; MST[NegateConditionalsMutator]MSP[N]
return true ; MST[BooleanFalseReturnValsMutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.ABSMutator]MSP[S]
while ( vr_4 != null ) { if ( vr_4 . vr_2 == vr_2 && fn_5 ( vr_1 , vr_4 . vr_1 ) ) { MST[rv.ROR2Mutator]MSP[N]
while ( vr_30 < vr_34 ) { vr_30 <<= 1 ; } if ( vr_30 > vl_4 ) { MST[rv.UOI3Mutator]MSP[N] vr_30 = vl_4 ; } }
final vt_1 vr_1 = ( vt_1 ) vr_68 . vr_72 () ; final tp_1 vr_8 = ( tp_1 ) vr_68 . vr_72 () ; MST[NonVoidMethodCallMutator]MSP[N]
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; MST[rv.CRCR3Mutator]MSP[S] if ( vr_30 <= vl_4 ) {
return true ; MST[rv.CRCR4Mutator]MSP[N] } vr_4 = vr_4 . vr_7 ; } return false ; } @Override public boolean fn_7 ( final Object vr_8 ) {
if ( size >= vl_3 ) { final int vr_30 = vr_5 . length * 2 ; if ( vr_30 <= vl_4 ) { MST[rv.CRCR5Mutator]MSP[S]
vl_2 ++ ; MST[InlineConstantMutator]MSP[N] fn_22 ( vr_4 , fn_4 , vr_20 ) ; size -- ; fn_23 ( vr_4 ) ; }
final int vr_16 = (int) ( ( size + vr_15 ) / vl_1 + 1 ) ; MST[rv.ABSMutator]MSP[N] fn_14 ( fn_15 ( vr_16 ) ) ;
return vr_25 == vr_26 || vr_25 . equals ( vr_26 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] }
public boolean contains ( final Object vr_1 ) { return vr_49 . fn_6 ( vr_1 ) ; MST[BooleanTrueReturnValsMutator]MSP[N] } @Override
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
public boolean contains ( final Object vr_1 ) { return vr_49 . fn_6 ( vr_1 ) ; MST[ReturnValsMutator]MSP[N] } @Override
return vr_49 . fn_36 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; } @Override
public boolean contains ( final Object vr_1 ) { return vr_49 . fn_6 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
return vr_49 . size () ; MST[ReturnValsMutator]MSP[N] } @Override public void clear () { vr_49 . clear () ; } @Override
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[rv.ABSMutator]MSP[N] } @Override public Iterator < vt_1 > iterator () {
return vr_49 . fn_36 () ; MST[ReturnValsMutator]MSP[N] } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; } @Override
return vr_49 . fn_36 () ; MST[NullReturnValsMutator]MSP[N] } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; } @Override
public boolean contains ( final Object vr_1 ) { return vr_49 . fn_6 ( vr_1 ) ; MST[BooleanFalseReturnValsMutator]MSP[N] } @Override
return vr_49 . size () ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public void clear () { vr_49 . clear () ; } @Override
public boolean remove ( final Object vr_1 ) { final boolean vr_55 = vr_49 . fn_6 ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S]
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[ReturnValsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[rv.UOI3Mutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[rv.UOI4Mutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[rv.UOI2Mutator]MSP[N] } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; return vr_55 ; MST[rv.UOI1Mutator]MSP[N] } @Override public Iterator < vt_1 > iterator () {
return vr_49 . size () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public void clear () { vr_49 . clear () ; } @Override
vr_49 . remove ( vr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S] return vr_55 ; } @Override public Iterator < vt_1 > iterator () {
vr_49 . remove ( vr_1 ) ; MST[ArgumentPropagationMutator]MSP[S] return vr_55 ; } @Override public Iterator < vt_1 > iterator () {
public Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > iterator () { return vr_49 . fn_33 () ; MST[ReturnValsMutator]MSP[N] } @Override
public Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > iterator () { return vr_49 . fn_33 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
public Iterator < vr_13 . vr_17 < vt_1 , tp_1 > > iterator () { return vr_49 . fn_33 () ; MST[NullReturnValsMutator]MSP[N] } @Override
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_39 () ; }
} public void remove () { if ( vl_6 == null ) { throw new fn_32 ( vr_41 . vr_63 ) ; MST[ConstructorCallMutator]MSP[S] }
final vr_3 < vt_1 , tp_1 > vr_60 = vr_7 ; if ( vr_60 == null ) { MST[NegateConditionalsMutator]MSP[N]
} public boolean hasNext () { return vr_7 != null ; MST[ReturnValsMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[rv.UOI1Mutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.UOI2Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_39 () ; }
fn_4 = vr_21 ; vl_6 = vr_60 ; return vr_60 ; MST[ReturnValsMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
fn_4 = vr_21 ; MST[rv.ABSMutator]MSP[N] vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_39 () ; }
} public boolean hasNext () { return vr_7 != null ; MST[rv.ROR5Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
fn_4 = vr_21 ; vl_6 = vr_60 ; return vr_60 ; MST[NullReturnValsMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
while ( vr_62 == null && vr_21 > 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
int vr_21 = fn_4 ; MST[rv.UOI1Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_62 = vr_60 . vr_7 ;
} public boolean hasNext () { return vr_7 != null ; MST[InlineConstantMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[rv.UOI4Mutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
} public boolean hasNext () { return vr_7 != null ; MST[InlineConstantMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
while ( vr_62 == null && vr_21 > 0 ) { MST[NegateConditionalsMutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[rv.UOI2Mutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ABSMutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
} public boolean hasNext () { return vr_7 != null ; MST[BooleanTrueReturnValsMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
fn_4 = vr_21 ; MST[rv.UOI1Mutator]MSP[N] vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
fn_4 = vr_21 ; MST[rv.UOI2Mutator]MSP[N] vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR1Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR4Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR3Mutator]MSP[N] throw new fn_39 () ; }
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR2Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ABSMutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
final vr_3 < vt_1 , tp_1 > vr_60 = vr_7 ; if ( vr_60 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR5Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
throw new fn_40 ( vr_41 . vr_61 ) ; MST[ConstructorCallMutator]MSP[S] } final vr_3 < vt_1 , tp_1 > [] vr_5 = vr_49 . vr_5 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ABSMutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] throw new fn_39 () ; }
} public boolean hasNext () { return vr_7 != null ; MST[NegateConditionalsMutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.UOI4Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR3Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[rv.UOI3Mutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
int vr_21 = fn_4 ; MST[rv.UOI4Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_62 = vr_60 . vr_7 ;
} public void remove () { if ( vl_6 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] throw new fn_32 ( vr_41 . vr_63 ) ; }
while ( vr_62 == null && vr_21 > 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
fn_4 = vr_21 ; vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ; MST[ReturnValsMutator]MSP[N]
vl_6 = null ; MST[experimental.MemberVariableMutator]MSP[N] vl_5 = vr_49 . vl_2 ; } @Override public String toString () { if ( vl_6 != null ) {
if ( vr_49 . vl_2 != vl_5 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR5Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR3Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR6Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR5Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_39 () ; }
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR4Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR6Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR2Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR1Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
while ( vr_62 == null && vr_21 > 0 ) { vr_62 = vr_5 [ -- vr_21 ] ; MST[IncrementsMutator]MSP[N] } vr_7 = vr_62 ;
} public boolean hasNext () { return vr_7 != null ; MST[rv.CRCR3Mutator]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
while ( vr_62 == null && vr_21 > 0 ) { vr_62 = vr_5 [ -- vr_21 ] ; MST[rv.UOI2Mutator]MSP[N] } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[N]
} public void remove () { if ( vl_6 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] throw new fn_32 ( vr_41 . vr_63 ) ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_39 () ; }
while ( vr_62 == null && vr_21 > 0 ) { vr_62 = vr_5 [ -- vr_21 ] ; MST[rv.UOI4Mutator]MSP[N] } vr_7 = vr_62 ;
fn_4 = vr_21 ; vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ; MST[NullReturnValsMutator]MSP[N]
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ABSMutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
while ( vr_62 == null && vr_21 > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR2Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR4Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
while ( vr_62 == null && vr_21 > 0 ) { MST[NegateConditionalsMutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
final vr_3 < vt_1 , tp_1 > vr_60 = vr_7 ; if ( vr_60 == null ) { MST[rv.ROR5Mutator]MSP[N]
if ( vr_49 . vl_2 != vl_5 ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
int vr_21 = fn_4 ; MST[rv.ABSMutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_62 = vr_60 . vr_7 ;
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[experimental.MemberVariableMutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
while ( vr_62 == null && vr_21 > 0 ) { MST[ConditionalsBoundaryMutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
fn_4 = vr_21 ; vl_6 = vr_60 ; MST[experimental.MemberVariableMutator]MSP[N] return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
while ( vr_62 == null && vr_21 > 0 ) { vr_62 = vr_5 [ -- vr_21 ] ; MST[rv.ABSMutator]MSP[N] } vr_7 = vr_62 ;
} public void remove () { if ( vl_6 == null ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_32 ( vr_41 . vr_63 ) ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_39 () ; }
fn_4 = vr_21 ; MST[rv.UOI4Mutator]MSP[N] vl_6 = vr_60 ; return vr_60 ; } protected vr_3 < vt_1 , tp_1 > fn_31 () { return vl_6 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
while ( vr_62 == null && vr_21 > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
} public boolean hasNext () { return vr_7 != null ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
if ( vr_49 . vl_2 != vl_5 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] throw new fn_39 () ; }
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR5Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ; MST[ArgumentPropagationMutator]MSP[N]
vl_6 = null ; vl_5 = vr_49 . vl_2 ; MST[rv.ABSMutator]MSP[N] } @Override public String toString () { if ( vl_6 != null ) {
if ( vr_49 . vl_2 != vl_5 ) { throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[N]
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR2Mutator]MSP[N] throw new fn_39 () ; }
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR1Mutator]MSP[N] throw new fn_39 () ; }
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR4Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
while ( vr_62 == null && vr_21 > 0 ) { MST[rv.ROR3Mutator]MSP[N] vr_62 = vr_5 [ -- vr_21 ] ; } vr_7 = vr_62 ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ABSMutator]MSP[N] throw new fn_39 () ; }
final vr_3 < vt_1 , tp_1 > vr_60 = vr_7 ; if ( vr_60 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
int vr_21 = fn_4 ; MST[rv.UOI2Mutator]MSP[N] vr_3 < vt_1 , tp_1 > vr_62 = vr_60 . vr_7 ;
} public boolean hasNext () { return vr_7 != null ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] } protected vr_3 < vt_1 , tp_1 > vr_39 () {
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
if ( vr_49 . vl_2 != vl_5 ) { MST[rv.ROR1Mutator]MSP[N] throw new fn_39 () ; } vr_49 . remove ( vl_6 . vr_19 () ) ;
} public void remove () { if ( vl_6 == null ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_32 ( vr_41 . vr_63 ) ; }
public vr_13 . vr_17 < vt_1 , tp_1 > vr_7 () { return super . vr_39 () ; MST[ReturnValsMutator]MSP[N] } @Override
public vr_13 . vr_17 < vt_1 , tp_1 > vr_7 () { return super . vr_39 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
public vr_13 . vr_17 < vt_1 , tp_1 > vr_7 () { return super . vr_39 () ; MST[NullReturnValsMutator]MSP[N] } @Override
final vr_3 < vt_1 , tp_1 > vr_40 = fn_31 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_40 == null ) {
throw new fn_32 ( vr_41 . vr_43 ) ; } return vr_40 . vr_6 () ; MST[NullReturnValsMutator]MSP[N] } @Override
final vr_3 < vt_1 , tp_1 > vr_40 = fn_31 () ; if ( vr_40 == null ) { MST[rv.ROR5Mutator]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_40 = fn_31 () ; if ( vr_40 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
final vr_3 < vt_1 , tp_1 > vr_40 = fn_31 () ; if ( vr_40 == null ) { MST[NegateConditionalsMutator]MSP[N]
throw new fn_32 ( vr_41 . vr_43 ) ; } return vr_40 . vr_6 () ; MST[ReturnValsMutator]MSP[N] } @Override
public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NullReturnValsMutator]MSP[S] } @Override public vt_1 vr_19 () {
public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[ReturnValsMutator]MSP[S] } @Override public vt_1 vr_19 () {
final vr_3 < vt_1 , tp_1 > vr_40 = fn_31 () ; if ( vr_40 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public vt_1 vr_19 () {
public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public vt_1 vr_19 () {
throw new fn_32 ( vr_41 . vr_43 ) ; } return vr_40 . vr_6 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
return vr_49 . fn_36 () ; } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
return vr_49 . fn_36 () ; } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
return vr_49 . fn_36 () ; } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[NullReturnValsMutator]MSP[N] } @Override
return vr_49 . fn_36 () ; } @Override public vt_1 vr_7 () { return super . vr_39 () . vr_19 () ; MST[ReturnValsMutator]MSP[N] } @Override
