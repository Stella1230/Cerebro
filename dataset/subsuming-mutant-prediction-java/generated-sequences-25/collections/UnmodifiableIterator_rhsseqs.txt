final Iterator < vt_1 > vr_3 = ( Iterator < vt_1 > ) iterator ; return vr_3 ; MST[NullReturnValsMutator]MSP[S] }
return new vr_4 <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[S] } @Override
public vt_1 fn_2 () { return iterator . fn_2 () ; MST[NullReturnValsMutator]MSP[S] } @Override public void remove () { throw new fn_3 ( lr_3 ) ;
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[N] @SuppressWarnings ( lr_2 )
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] @SuppressWarnings ( lr_2 )
return new vr_4 <> ( iterator ) ; MST[ConstructorCallMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override
public vt_1 fn_2 () { return iterator . fn_2 () ; } @Override public void remove () { throw new fn_3 ( lr_3 ) ; MST[ConstructorCallMutator]MSP[S]
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] @SuppressWarnings ( lr_2 )
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[S] @SuppressWarnings ( lr_2 )
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[N] @SuppressWarnings ( lr_2 )
return new vr_4 <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
vr_1 . vr_2 ( iterator , lr_1 ) ; MST[ArgumentPropagationMutator]MSP[S] if ( iterator instanceof vl_1 ) { @SuppressWarnings ( lr_2 )
final Iterator < vt_1 > vr_3 = ( Iterator < vt_1 > ) iterator ; return vr_3 ; MST[ReturnValsMutator]MSP[S] }
return new vr_4 <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override
public vt_1 fn_2 () { return iterator . fn_2 () ; MST[ReturnValsMutator]MSP[N] } @Override public void remove () { throw new fn_3 ( lr_3 ) ;
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[N] @SuppressWarnings ( lr_2 )
return new vr_4 <> ( iterator ) ; MST[NullReturnValsMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override
return new vr_4 <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[N] @SuppressWarnings ( lr_2 )
return new vr_4 <> ( iterator ) ; MST[ReturnValsMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override
vr_1 . vr_2 ( iterator , lr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S] if ( iterator instanceof vl_1 ) { @SuppressWarnings ( lr_2 )
vr_1 . vr_2 ( iterator , lr_1 ) ; if ( iterator instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[S] @SuppressWarnings ( lr_2 )
