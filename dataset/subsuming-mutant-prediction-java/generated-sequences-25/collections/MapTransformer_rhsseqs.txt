if ( vr_3 == null ) { return vr_4 . <vt_1 , vt_2 > fn_2 () ; MST[NullReturnValsMutator]MSP[N] }
if ( vr_3 == null ) { MST[NegateConditionalsMutator]MSP[N] return vr_4 . <vt_1 , vt_2 > fn_2 () ; }
if ( vr_3 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vr_4 . <vt_1 , vt_2 > fn_2 () ; }
return vr_7 . get ( vr_6 ) ; MST[ReturnValsMutator]MSP[N] } public vr_2 < ? super vt_1 , ? extends vt_2 > fn_4 () {
if ( vr_3 == null ) { return vr_4 . <vt_1 , vt_2 > fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] }
return new vr_5 <> ( vr_3 ) ; MST[NullReturnValsMutator]MSP[N] } @Override public vt_2 fn_3 ( final vt_1 vr_6 ) {
if ( vr_3 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] return vr_4 . <vt_1 , vt_2 > fn_2 () ; }
return new vr_5 <> ( vr_3 ) ; MST[ConstructorCallMutator]MSP[N] } @Override public vt_2 fn_3 ( final vt_1 vr_6 ) {
if ( vr_3 == null ) { return vr_4 . <vt_1 , vt_2 > fn_2 () ; MST[ReturnValsMutator]MSP[N] }
return vr_7 . get ( vr_6 ) ; MST[NonVoidMethodCallMutator]MSP[N] } public vr_2 < ? super vt_1 , ? extends vt_2 > fn_4 () {
return vr_7 . get ( vr_6 ) ; MST[ArgumentPropagationMutator]MSP[S] } public vr_2 < ? super vt_1 , ? extends vt_2 > fn_4 () {
return new vr_5 <> ( vr_3 ) ; MST[ReturnValsMutator]MSP[N] } @Override public vt_2 fn_3 ( final vt_1 vr_6 ) {
return vr_7 . get ( vr_6 ) ; MST[NullReturnValsMutator]MSP[N] } public vr_2 < ? super vt_1 , ? extends vt_2 > fn_4 () {
if ( vr_3 == null ) { MST[rv.ROR5Mutator]MSP[N] return vr_4 . <vt_1 , vt_2 > fn_2 () ; }
