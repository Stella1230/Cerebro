@Override public vr_2 . vr_3 < vt_1 , vt_2 > fn_11 () { return new fn_9 ( fn_12 () . fn_11 () ) ; MST[ConstructorCallMutator]MSP[] }
@Override public void remove () { throw new fn_2 () ; MST[ConstructorCallMutator]MSP[] } @Override public vt_2 fn_13 ( final vt_2 vr_13 ) {
@Override public vr_2 . vr_3 < vt_1 , vt_2 > fn_11 () { return new fn_9 ( fn_12 () . fn_11 () ) ; MST[ReturnValsMutator]MSP[] }
@Override public vr_2 . vr_3 < vt_1 , vt_2 > fn_11 () { return new fn_9 ( fn_12 () . fn_11 () ) ; MST[NullReturnValsMutator]MSP[] }
@Override public vr_2 . vr_3 < vt_1 , vt_2 > fn_11 () { return new fn_9 ( fn_12 () . fn_11 () ) ; MST[NonVoidMethodCallMutator]MSP[] }
@Override public vr_2 . vr_3 < vt_1 , vt_2 > fn_11 () { return new fn_9 ( fn_12 () . fn_11 () ) ; MST[NonVoidMethodCallMutator]MSP[] }
if ( vr_4 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
public boolean remove ( final Object object ) { throw new fn_2 () ; MST[ConstructorCallMutator]MSP[] } @Override
if ( vr_4 instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
if ( vr_4 instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
if ( vr_4 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
return new fn_7 ( fn_8 () . iterator () ) ; MST[NullReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () {
if ( vr_4 instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
return new fn_7 ( fn_8 () . iterator () ) ; MST[ConstructorCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () {
@Override public boolean fn_6 ( final Collection < ? > vr_6 ) { throw new fn_2 () ; MST[ConstructorCallMutator]MSP[] } @Override
return new fn_7 ( fn_8 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () {
if ( vr_4 instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
if ( vr_4 instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
if ( vr_4 instanceof vl_1 ) { return vr_4 ; } return new vr_5 <> ( vr_4 ) ; MST[ConstructorCallMutator]MSP[] } @Override
if ( vr_4 instanceof vl_1 ) { return vr_4 ; } return new vr_5 <> ( vr_4 ) ; MST[ReturnValsMutator]MSP[] } @Override
return new fn_7 ( fn_8 () . iterator () ) ; MST[ReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () {
return new fn_7 ( fn_8 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () {
throw new fn_2 () ; } @Override public boolean fn_5 ( final Collection < ? > vr_6 ) { throw new fn_2 () ; MST[ConstructorCallMutator]MSP[] }
if ( vr_4 instanceof vl_1 ) { return vr_4 ; } return new vr_5 <> ( vr_4 ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override
if ( vr_4 instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[] return vr_4 ; } return new vr_5 <> ( vr_4 ) ; } @Override
