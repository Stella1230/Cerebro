throw new fn_14 () ; } @Override public Object [] toArray () { return vr_13 . vr_17 () . toArray () ; MST[ReturnValsMutator]MSP[] } @Override
public int indexOf ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public vt_1 remove ( final int vr_5 ) { throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] } @Override public boolean remove ( final Object vr_14 ) {
public int indexOf ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[ReturnValsMutator]MSP[] } @Override
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[NonVoidMethodCallMutator]MSP[]
@Override public vr_22 < vt_1 > fn_18 () { return vr_23 . vr_24 ( super . fn_18 () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[ReturnValsMutator]MSP[] }
public int fn_12 ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public < vt_3 > vt_3 [] toArray ( final vt_3 [] array ) { return vr_13 . vr_17 () . toArray ( array ) ; MST[NullReturnValsMutator]MSP[]
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[rv.ABSMutator]MSP[]
throw new fn_14 () ; } @Override public Object [] toArray () { return vr_13 . vr_17 () . toArray () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[NullReturnValsMutator]MSP[] }
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[ReturnValsMutator]MSP[]
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[rv.UOI2Mutator]MSP[]
public boolean fn_13 ( final Collection < ? > vr_16 ) { return vr_13 . vr_17 () . fn_13 ( vr_16 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI4Mutator]MSP[] }
@Override public boolean fn_17 ( final Collection < ? > vr_16 ) { throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] } @Override public void clear () {
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[NonVoidMethodCallMutator]MSP[]
throw new fn_14 () ; } @Override public Object [] toArray () { return vr_13 . vr_17 () . toArray () ; MST[NullReturnValsMutator]MSP[] } @Override
} @Override public boolean contains ( final Object vr_14 ) { return vr_13 . vr_15 ( vr_14 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI1Mutator]MSP[] }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI3Mutator]MSP[] }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI2Mutator]MSP[] }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.ABSMutator]MSP[] }
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] }
throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] } @Override public boolean fn_15 ( final vr_18 < ? super vt_1 > vr_19 ) {
@Override public vr_22 < vt_1 > fn_18 () { return vr_23 . vr_24 ( super . fn_18 () ) ; MST[ReturnValsMutator]MSP[] } @Override
} @Override public boolean contains ( final Object vr_14 ) { return vr_13 . vr_15 ( vr_14 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
public < vt_3 > vt_3 [] toArray ( final vt_3 [] array ) { return vr_13 . vr_17 () . toArray ( array ) ; MST[ArgumentPropagationMutator]MSP[]
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[] }
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[rv.UOI1Mutator]MSP[]
public < vt_3 > vt_3 [] toArray ( final vt_3 [] array ) { return vr_13 . vr_17 () . toArray ( array ) ; MST[NonVoidMethodCallMutator]MSP[]
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[NonVoidMethodCallMutator]MSP[] }
public < vt_3 > vt_3 [] toArray ( final vt_3 [] array ) { return vr_13 . vr_17 () . toArray ( array ) ; MST[NonVoidMethodCallMutator]MSP[]
throw new fn_14 () ; } @Override public boolean fn_16 ( final Collection < ? > vr_16 ) { throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] }
public boolean fn_13 ( final Collection < ? > vr_16 ) { return vr_13 . vr_17 () . fn_13 ( vr_16 ) ; MST[ReturnValsMutator]MSP[] } @Override
public int fn_12 ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[NonVoidMethodCallMutator]MSP[]
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[ArgumentPropagationMutator]MSP[]
public < vt_3 > vt_3 [] toArray ( final vt_3 [] array ) { return vr_13 . vr_17 () . toArray ( array ) ; MST[ReturnValsMutator]MSP[]
@Override public vr_22 < vt_1 > fn_18 () { return vr_23 . vr_24 ( super . fn_18 () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
@Override public vr_22 < vt_1 > fn_18 () { return vr_23 . vr_24 ( super . fn_18 () ) ; MST[ArgumentPropagationMutator]MSP[] } @Override
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[rv.UOI4Mutator]MSP[]
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[rv.UOI3Mutator]MSP[]
throw new fn_14 () ; } @Override public Object [] toArray () { return vr_13 . vr_17 () . toArray () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[rv.UOI3Mutator]MSP[]
} @Override public boolean contains ( final Object vr_14 ) { return vr_13 . vr_15 ( vr_14 ) ; MST[ReturnValsMutator]MSP[] } @Override
throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] } @Override public Object [] toArray () { return vr_13 . vr_17 () . toArray () ; } @Override
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[rv.ABSMutator]MSP[]
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[rv.UOI2Mutator]MSP[]
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[rv.UOI4Mutator]MSP[]
return vr_13 . size () ; } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ; MST[rv.UOI1Mutator]MSP[]
throw new fn_14 () ; MST[ConstructorCallMutator]MSP[] } @Override public boolean fn_16 ( final Collection < ? > vr_16 ) { throw new fn_14 () ; }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI4Mutator]MSP[] }
return vr_13 . size () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ;
public vr_22 < vt_1 > fn_18 ( final int vr_25 ) { return vr_23 . vr_24 ( super . fn_18 ( vr_25 ) ) ; MST[NullReturnValsMutator]MSP[]
public int indexOf ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override
public boolean fn_13 ( final Collection < ? > vr_16 ) { return vr_13 . vr_17 () . fn_13 ( vr_16 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI2Mutator]MSP[] }
public int fn_12 ( final Object vr_14 ) { return vr_13 . indexOf ( vr_14 ) ; MST[ReturnValsMutator]MSP[] } @Override
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI1Mutator]MSP[] }
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.UOI3Mutator]MSP[] }
public boolean fn_13 ( final Collection < ? > vr_16 ) { return vr_13 . vr_17 () . fn_13 ( vr_16 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
@Override public vr_22 < vt_1 > fn_18 () { return vr_23 . vr_24 ( super . fn_18 () ) ; MST[NullReturnValsMutator]MSP[] } @Override
return vr_13 . size () ; MST[PrimitiveReturnsMutator]MSP[] } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ;
} @Override public Iterator < vt_1 > iterator () { return vr_20 . vr_21 ( vr_13 . vr_17 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] }
return vr_13 . size () ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 get ( final int vr_5 ) { return vr_13 . get ( vr_5 ) ;
return vr_28 . vr_29 ( super . fn_19 ( vr_26 , vr_27 ) ) ; MST[rv.ABSMutator]MSP[] }
} @Override public boolean contains ( final Object vr_14 ) { return vr_13 . vr_15 ( vr_14 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
public boolean fn_13 ( final Collection < ? > vr_16 ) { return vr_13 . vr_17 () . fn_13 ( vr_16 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[NonVoidMethodCallMutator]MSP[] return vr_7 ; } } return - 1 ; }
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[rv.ABSMutator]MSP[] }
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; MST[NonVoidMethodCallMutator]MSP[] int vr_7 = 0 ;
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[rv.UOI4Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[PrimitiveReturnsMutator]MSP[] }
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[ReturnValsMutator]MSP[] }
public List < vt_1 > fn_11 () { return new vr_12 <> ( this ) ; MST[ReturnValsMutator]MSP[] } @Override public int size () {
@Override public vr_1 < vt_1 , vt_2 > fn_1 () { return ( vr_1 < vt_1 , vt_2 > ) super . fn_1 () ; MST[ReturnValsMutator]MSP[]
public List < vt_1 > fn_11 () { return new vr_12 <> ( this ) ; MST[ConstructorCallMutator]MSP[] } @Override public int size () {
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[rv.UOI1Mutator]MSP[] }
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[rv.UOI2Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[rv.CRCR4Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[rv.UOI1Mutator]MSP[] } } return - 1 ; }
private void fn_4 ( final tp_2 vr_3 ) throws IOException , vl_1 { vr_3 . vr_4 () ; fn_5 ( vr_3 ) ; MST[VoidMethodCallMutator]MSP[] }
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[] }
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[rv.UOI2Mutator]MSP[] }
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[rv.UOI1Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[rv.CRCR5Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[rv.CRCR1Mutator]MSP[] }
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[rv.UOI2Mutator]MSP[] }
} private void fn_2 ( final tp_1 out ) throws IOException { out . vr_2 () ; MST[VoidMethodCallMutator]MSP[] fn_3 ( out ) ; }
@Override public vr_1 < vt_1 , vt_2 > fn_1 () { return ( vr_1 < vt_1 , vt_2 > ) super . fn_1 () ; MST[NonVoidMethodCallMutator]MSP[]
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; int vr_7 = 0 ; MST[rv.CRCR1Mutator]MSP[]
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[NonVoidMethodCallMutator]MSP[] }
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; int vr_7 = 0 ; MST[rv.CRCR5Mutator]MSP[]
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[NonVoidMethodCallMutator]MSP[] }
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; MST[ArgumentPropagationMutator]MSP[] int vr_7 = 0 ;
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[rv.ROR1Mutator]MSP[] return vr_7 ; } } return - 1 ; }
for ( vr_8 < vt_1 , vt_2 > vr_9 = vr_10 . vr_11 ; vr_9 != vr_10 ; vr_9 = vr_9 . vr_11 , vr_7 ++ ) { MST[IncrementsMutator]MSP[]
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[rv.ABSMutator]MSP[] }
public List < vt_1 > fn_11 () { return new vr_12 <> ( this ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public int size () {
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[rv.ROR4Mutator]MSP[] return vr_7 ; } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[rv.ROR5Mutator]MSP[] return vr_7 ; } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[rv.ROR2Mutator]MSP[] return vr_7 ; } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[rv.ROR3Mutator]MSP[] return vr_7 ; } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[rv.ABSMutator]MSP[] } } return - 1 ; }
for ( vr_8 < vt_1 , vt_2 > vr_9 = vr_10 . vr_11 ; vr_9 != vr_10 ; vr_9 = vr_9 . vr_11 , vr_7 ++ ) { MST[experimental.RemoveIncrementsMutator]MSP[]
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[ReturnValsMutator]MSP[] } } return - 1 ; }
private void fn_4 ( final tp_2 vr_3 ) throws IOException , vl_1 { vr_3 . vr_4 () ; MST[VoidMethodCallMutator]MSP[] fn_5 ( vr_3 ) ; }
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[rv.UOI1Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_7 ; } } return - 1 ; }
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[rv.UOI3Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[rv.UOI4Mutator]MSP[] } } return - 1 ; }
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[rv.ABSMutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[ReturnValsMutator]MSP[] }
} private void fn_2 ( final tp_1 out ) throws IOException { out . vr_2 () ; fn_3 ( out ) ; MST[VoidMethodCallMutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[rv.UOI2Mutator]MSP[] } } return - 1 ; }
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; int vr_7 = 0 ; MST[rv.CRCR6Mutator]MSP[]
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[NonVoidMethodCallMutator]MSP[] }
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[rv.UOI3Mutator]MSP[] }
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[rv.UOI4Mutator]MSP[] }
for ( vr_8 < vt_1 , vt_2 > vr_9 = vr_10 . vr_11 ; vr_9 != vr_10 ; vr_9 = vr_9 . vr_11 , vr_7 ++ ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[]
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_7 ; } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[InlineConstantMutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[PrimitiveReturnsMutator]MSP[] } } return - 1 ; }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { MST[NegateConditionalsMutator]MSP[] return vr_7 ; } } return - 1 ; }
public vt_2 fn_8 ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_8 () ; MST[rv.UOI3Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[rv.CRCR6Mutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; } } return - 1 ; MST[rv.CRCR2Mutator]MSP[] }
public vt_1 get ( final int vr_5 ) { return fn_6 ( vr_5 ) . fn_7 () ; MST[NullReturnValsMutator]MSP[] }
if ( fn_10 ( vr_6 , vr_9 . vr_6 ) ) { return vr_7 ; MST[rv.UOI3Mutator]MSP[] } } return - 1 ; }
@Override public vr_1 < vt_1 , vt_2 > fn_1 () { return ( vr_1 < vt_1 , vt_2 > ) super . fn_1 () ; MST[NullReturnValsMutator]MSP[]
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; int vr_7 = 0 ; MST[InlineConstantMutator]MSP[]
public int indexOf ( Object vr_6 ) { vr_6 = fn_9 ( vr_6 ) ; int vr_7 = 0 ; MST[rv.CRCR3Mutator]MSP[]
public vt_2 remove ( final int vr_5 ) { return remove ( get ( vr_5 ) ) ; MST[rv.UOI4Mutator]MSP[] }
