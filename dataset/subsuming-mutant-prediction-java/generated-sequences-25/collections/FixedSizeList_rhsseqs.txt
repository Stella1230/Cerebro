return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR1Mutator]MSP[N] } @Override
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI2Mutator]MSP[N] }
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI1Mutator]MSP[N] }
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI3Mutator]MSP[N] }
return fn_4 () . get ( vr_2 ) ; MST[ReturnValsMutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return fn_4 () . fn_5 ( object ) ; MST[ReturnValsMutator]MSP[S] } @Override public vr_6 < vt_1 > fn_6 () {
public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
return fn_4 () . fn_5 ( object ) ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public vr_6 < vt_1 > fn_6 () {
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[ReturnValsMutator]MSP[N] } @Override
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.ABSMutator]MSP[S]
return new vr_1 <> ( list ) ; } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[ArgumentPropagationMutator]MSP[N] }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.ABSMutator]MSP[S] return new vr_1 <> ( vr_11 ) ;
return fn_4 () . fn_5 ( object ) ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public vr_6 < vt_1 > fn_6 () {
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[NonVoidMethodCallMutator]MSP[S]
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NonVoidMethodCallMutator]MSP[N] }
return fn_4 () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[EmptyObjectReturnValsMutator]MSP[N]
return new vr_1 <> ( list ) ; MST[NullReturnValsMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override
return fn_4 () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI1Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI2Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI4Mutator]MSP[N] }
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR3Mutator]MSP[N] } @Override public int fn_14 () { return size () ;
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI4Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI3Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
return new vr_1 <> ( list ) ; MST[ConstructorCallMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NullReturnValsMutator]MSP[S] }
public void clear () { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public vt_1 get ( final int vr_2 ) {
} private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[ReturnValsMutator]MSP[N] }
return fn_4 () . get ( vr_2 ) ; MST[rv.UOI2Mutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NullReturnValsMutator]MSP[N] } @Override public int fn_5 ( final Object object ) {
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public int fn_5 ( final Object object ) {
return fn_4 () . get ( vr_2 ) ; MST[rv.UOI4Mutator]MSP[N] } @Override public int indexOf ( final Object object ) {
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NonVoidMethodCallMutator]MSP[N]
} private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[ConstructorCallMutator]MSP[N] }
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NonVoidMethodCallMutator]MSP[N]
return fn_4 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR3Mutator]MSP[N] } @Override
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR5Mutator]MSP[S] } @Override public int fn_14 () { return size () ;
return fn_4 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR5Mutator]MSP[N] } @Override
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[InlineConstantMutator]MSP[N] } @Override
} @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[InlineConstantMutator]MSP[S] } @Override public int fn_14 () { return size () ;
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI1Mutator]MSP[N]
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[ConstructorCallMutator]MSP[N]
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI4Mutator]MSP[N]
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NullReturnValsMutator]MSP[N] } @Override
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI3Mutator]MSP[N]
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI2Mutator]MSP[N]
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.ABSMutator]MSP[S] return new vr_1 <> ( vr_11 ) ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[ReturnValsMutator]MSP[N]
return fn_4 () . get ( vr_2 ) ; MST[NullReturnValsMutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return new vr_1 <> ( list ) ; MST[ReturnValsMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NonVoidMethodCallMutator]MSP[N] }
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.ABSMutator]MSP[N] }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI1Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
return fn_4 () . fn_5 ( object ) ; MST[PrimitiveReturnsMutator]MSP[S] } @Override public vr_6 < vt_1 > fn_6 () {
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NullReturnValsMutator]MSP[N]
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR2Mutator]MSP[S] } @Override public int fn_14 () { return size () ;
public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[ReturnValsMutator]MSP[N]
public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[ReturnValsMutator]MSP[N] } @Override public int fn_5 ( final Object object ) {
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[PrimitiveReturnsMutator]MSP[S]
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[experimental.NakedReceiverMutator]MSP[S] return new vr_1 <> ( vr_11 ) ;
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[ReturnValsMutator]MSP[N]
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR4Mutator]MSP[N] } @Override public int fn_14 () { return size () ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI3Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI4Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI2Mutator]MSP[N] return new vr_1 <> ( vr_11 ) ;
return fn_4 () . get ( vr_2 ) ; MST[rv.UOI3Mutator]MSP[N] } @Override public int indexOf ( final Object object ) {
return fn_4 () . get ( vr_2 ) ; MST[rv.UOI1Mutator]MSP[N] } @Override public int indexOf ( final Object object ) {
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override public int fn_14 () { return size () ;
public boolean remove ( final Object object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[ReturnValsMutator]MSP[S] } @Override public int fn_14 () { return size () ;
} private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[NullReturnValsMutator]MSP[N] }
return fn_4 () . get ( vr_2 ) ; MST[rv.ABSMutator]MSP[N] } @Override public int indexOf ( final Object object ) {
public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[ReturnValsMutator]MSP[N] }
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public int fn_5 ( final Object object ) {
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[S] } @Override public int fn_5 ( final Object object ) {
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR6Mutator]MSP[N] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[ConstructorCallMutator]MSP[N]
return fn_4 () . indexOf ( object ) ; MST[PrimitiveReturnsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () {
return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public int fn_5 ( final Object object ) {
return fn_4 () . indexOf ( object ) ; MST[ReturnValsMutator]MSP[N] } @Override public Iterator < vt_1 > iterator () {
throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR6Mutator]MSP[S] } @Override public int fn_14 () { return size () ;
return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[ConstructorCallMutator]MSP[N] } @Override
public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
