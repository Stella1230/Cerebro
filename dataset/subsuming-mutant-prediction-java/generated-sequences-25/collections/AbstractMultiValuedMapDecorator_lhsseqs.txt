return fn_1 () . size () ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
@Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[NullReturnValsMutator]MSP[] } @Override public int size () {
return fn_1 () . size () ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[ReturnValsMutator]MSP[] } @Override public int size () {
@Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_1 () . get ( vr_2 ) ; MST[ReturnValsMutator]MSP[] } @Override
return fn_1 () . size () ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[ReturnValsMutator]MSP[] } @Override
@Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
@Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_1 () . get ( vr_2 ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override
return fn_1 () . size () ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
return fn_1 () . size () ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
