public int length () { return length ; } @Override public String toString () {
return new String ( fn_1 ( 0 , length ) ) ; } public void fn_2 ( final char vr_1 ) {
if ( vr_1 != vl_1 && vl_2 != vr_1 && ( vr_1 != '0' || length == 0 ) ) {
vr_2 [ length ] = vr_1 ; length ++ ; } vl_2 = vr_1 ; } @Override
protected char [] fn_1 ( final int vr_3 , final int length ) { final char [] vr_4 = new char [ length ] ;
System . vr_5 ( vr_2 , vr_3 , vr_4 , 0 , length ) ; return vr_4 ; } @Override
protected char [] fn_1 ( final int vr_3 , final int length ) { final char [] vr_4 = new char [ length ] ;
System . vr_5 ( vr_2 , vr_2 . length - this . length + vr_3 , vr_4 , 0 , length ) ;
return vr_4 ; } public char fn_3 () { return vr_2 [ fn_4 () ] ; } protected int fn_4 () {
return vr_2 . length - length ; } public char fn_5 () { final char vr_6 = fn_3 () ; length -- ;
return vr_6 ; } private static boolean fn_6 ( final char [] vr_7 , final char vr_8 ) {
for ( final char vr_9 : vr_7 ) { if ( vr_9 == vr_8 ) { return true ; } } return false ; }
public String fn_7 ( final String vr_10 ) { if ( vr_10 == null ) { return null ; }
final tp_1 vr_11 = new tp_1 ( fn_8 ( vr_10 ) ) ;
final tp_2 vr_12 = new tp_2 ( vr_11 . length () * 2 ) ; char vr_13 ; char vr_14 = vl_1 ;
char vr_15 ; while ( vr_11 . length () > 0 ) { vr_15 = vr_11 . fn_5 () ;
if ( vr_11 . length () > 0 ) { vr_13 = vr_11 . fn_3 () ; } else { vr_13 = vl_1 ; }
if ( vr_15 < 'A' || vr_15 > 'Z' ) { continue; } if ( fn_6 ( vl_3 , vr_15 ) ) {
vr_12 . fn_2 ( '0' ) ;
} else if ( vr_15 == 'B' || ( vr_15 == 'P' && vr_13 != 'H' ) ) {
vr_12 . fn_2 ( '1' ) ;
} else if ( ( vr_15 == 'D' || vr_15 == 'T' ) && ! fn_6 ( vl_4 , vr_13 ) ) {
vr_12 . fn_2 ( '2' ) ; } else if ( fn_6 ( vl_5 , vr_15 ) ) {
vr_12 . fn_2 ( '3' ) ; } else if ( fn_6 ( vl_6 , vr_15 ) ) {
vr_12 . fn_2 ( '4' ) ; } else if ( vr_15 == 'X' && ! fn_6 ( vl_7 , vr_14 ) ) {
vr_12 . fn_2 ( '4' ) ; vr_12 . fn_2 ( '8' ) ;
} else if ( vr_15 == 'S' || vr_15 == 'Z' ) { vr_12 . fn_2 ( '8' ) ;
} else if ( vr_15 == 'C' ) { if ( vr_12 . length () == 0 ) {
if ( fn_6 ( vl_8 , vr_13 ) ) { vr_12 . fn_2 ( '4' ) ; } else {
vr_12 . fn_2 ( '8' ) ; } } else {
if ( fn_6 ( vl_9 , vr_14 ) || ! fn_6 ( vl_10 , vr_13 ) ) { vr_12 . fn_2 ( '8' ) ;
} else { vr_12 . fn_2 ( '4' ) ; } } } else if ( fn_6 ( vl_11 , vr_15 ) ) {
vr_12 . fn_2 ( '8' ) ; } else if ( vr_15 == 'R' ) { vr_12 . fn_2 ( '7' ) ;
} else if ( vr_15 == 'L' ) { vr_12 . fn_2 ( '5' ) ;
} else if ( vr_15 == 'M' || vr_15 == 'N' ) { vr_12 . fn_2 ( '6' ) ;
} else if ( vr_15 == 'H' ) { vr_12 . fn_2 ( vl_1 ) ; } else { } vr_14 = vr_15 ; }
return vr_12 . toString () ; } @Override public Object fn_9 ( final Object object ) throws vl_12 {
if ( ! ( object instanceof String ) ) { throw new vl_12 ( lr_1 + String . class . vr_16 () + lr_2 +
object . getClass () . vr_16 () + lr_3 ) ; } return fn_9 ( ( String ) object ) ; } @Override
public String fn_9 ( final String vr_10 ) { return fn_7 ( vr_10 ) ; }
public boolean fn_10 ( final String vr_17 , final String vr_18 ) {
return fn_7 ( vr_17 ) . equals ( fn_7 ( vr_18 ) ) ; } private char [] fn_8 ( final String vr_10 ) {
final char [] vr_19 = vr_10 . vr_20 ( vr_21 . vr_22 ) . fn_11 () ;
for ( int vr_23 = 0 ; vr_23 < vr_19 . length ; vr_23 ++ ) { switch ( vr_19 [ vr_23 ] ) {
case '\u00C4' : vr_19 [ vr_23 ] = 'A' ; break; case '\u00DC' : vr_19 [ vr_23 ] = 'U' ; break; case '\u00D6' :
vr_19 [ vr_23 ] = 'O' ; break; default: break; } } return vr_19 ; }
