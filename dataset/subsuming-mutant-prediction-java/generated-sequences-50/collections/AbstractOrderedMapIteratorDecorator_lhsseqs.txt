protected vr_1 < vt_1 , vt_2 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 fn_2 () { return iterator . fn_2 () ; } @Override public boolean fn_3 () {
protected vr_1 < vt_1 , vt_2 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public vt_1 fn_2 () { return iterator . fn_2 () ; } @Override public boolean fn_3 () {
protected vr_1 < vt_1 , vt_2 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 fn_2 () { return iterator . fn_2 () ; } @Override public boolean fn_3 () {
protected vr_1 < vt_1 , vt_2 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public vt_1 fn_2 () { return iterator . fn_2 () ; } @Override public boolean fn_3 () {
