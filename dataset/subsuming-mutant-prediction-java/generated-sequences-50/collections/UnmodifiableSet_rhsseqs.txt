public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[S] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
} return new vr_4 <> ( vr_2 ) ; MST[EmptyObjectReturnValsMutator]MSP[N] } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[S] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; MST[EmptyObjectReturnValsMutator]MSP[S]
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
} return new vr_4 <> ( vr_2 ) ; MST[ConstructorCallMutator]MSP[N] } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
} return new vr_4 <> ( vr_2 ) ; MST[ReturnValsMutator]MSP[N] } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[NullReturnValsMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[ReturnValsMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; MST[ReturnValsMutator]MSP[S]
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
public boolean fn_4 ( final Collection < ? extends vt_1 > vr_7 ) { throw new fn_3 () ; } @Override public void clear () { throw new fn_3 () ; } @Override public boolean remove ( final Object object ) { throw new fn_3 () ; MST[ConstructorCallMutator]MSP[S] } @Override
} return new vr_4 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_5 . vr_6 ( fn_2 () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[N] } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override
public boolean fn_5 ( final vr_8 < ? super vt_1 > vr_9 ) { throw new fn_3 () ; } @Override public boolean fn_6 ( final Collection < ? > vr_7 ) { throw new fn_3 () ; MST[ConstructorCallMutator]MSP[S] } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ;
public boolean fn_7 ( final Collection < ? > vr_7 ) { throw new fn_3 () ; MST[ConstructorCallMutator]MSP[S] }
