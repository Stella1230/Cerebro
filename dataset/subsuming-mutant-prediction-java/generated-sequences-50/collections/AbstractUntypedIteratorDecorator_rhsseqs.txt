protected Iterator < vt_1 > fn_1 () { return iterator ; MST[NullReturnValsMutator]MSP[S] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public void remove () { iterator . remove () ; }
protected Iterator < vt_1 > fn_1 () { return iterator ; MST[ReturnValsMutator]MSP[S] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public void remove () { iterator . remove () ; }
protected Iterator < vt_1 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public void remove () { iterator . remove () ; }
protected Iterator < vt_1 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public void remove () { iterator . remove () ; MST[VoidMethodCallMutator]MSP[S] }
protected Iterator < vt_1 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[S] } @Override public void remove () { iterator . remove () ; }
protected Iterator < vt_1 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public void remove () { iterator . remove () ; }
protected Iterator < vt_1 > fn_1 () { return iterator ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override public void remove () { iterator . remove () ; }
