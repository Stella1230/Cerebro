public boolean fn_1 ( final tp_1 exception ) { return vr_1 . vr_2 ( exception , vl_1 ) ; } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; MST[VoidMethodCallMutator]MSP[] } @Override
public boolean fn_1 ( final tp_1 exception ) { MST[NonVoidMethodCallMutator]MSP[] return vr_1 . vr_2 ( exception , vl_1 ) ; } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
public boolean fn_1 ( final tp_1 exception ) { return vr_1 . vr_2 ( exception , vl_1 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
public boolean fn_1 ( final tp_1 exception ) { return vr_1 . vr_2 ( exception , vl_1 ) ; MST[ReturnValsMutator]MSP[] } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
public boolean fn_1 ( final tp_1 exception ) { return vr_1 . vr_2 ( exception , vl_1 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
protected void fn_3 ( final IOException vr_5 ) throws IOException { throw new vr_1 ( vr_5 , vl_1 ) ; MST[ConstructorCallMutator]MSP[] }
public boolean fn_1 ( final tp_1 exception ) { return vr_1 . vr_2 ( exception , vl_1 ) ; MST[NonVoidMethodCallMutator]MSP[] } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
public boolean fn_1 ( final tp_1 exception ) { MST[experimental.MemberVariableMutator]MSP[] return vr_1 . vr_2 ( exception , vl_1 ) ; } public void fn_2 ( final tp_1 vr_3 ) throws IOException { vr_1 . vr_4 ( vr_3 , vl_1 ) ; } @Override
