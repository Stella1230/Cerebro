@Override public long fn_1 () { final long vr_1 = vl_1 ; return ( ~ vr_1 ) & 0xffffffffL ; } @Override public void fn_2 () { vl_1 = 0xffffffff ; } @Override public void fn_3 ( final byte [] vr_2 , int vr_3 , int vr_4 ) {
int vr_5 = vl_1 ; while( vr_4 > 7 ) { final int vr_6 = ( vr_2 [ vr_3 + 0 ] ^ vr_5 ) & 0xff ; final int vr_7 = ( vr_2 [ vr_3 + 1 ] ^ ( vr_5 >>>= 8 ) ) & 0xff ;
final int vr_8 = ( vr_2 [ vr_3 + 2 ] ^ ( vr_5 >>>= 8 ) ) & 0xff ; final int vr_9 = ( vr_2 [ vr_3 + 3 ] ^ ( vr_5 >>>= 8 ) ) & 0xff ;
vr_5 = ( vr_10 [ vl_2 + vr_6 ] ^ vr_10 [ vl_3 + vr_7 ] ) ^ ( vr_10 [ vl_4 + vr_8 ] ^ vr_10 [ vl_5 + vr_9 ] ) ; final int vr_11 = vr_2 [ vr_3 + 4 ] & 0xff ;
final int vr_12 = vr_2 [ vr_3 + 5 ] & 0xff ; final int vr_13 = vr_2 [ vr_3 + 6 ] & 0xff ; final int vr_14 = vr_2 [ vr_3 + 7 ] & 0xff ;
vr_5 ^= ( vr_10 [ vl_6 + vr_11 ] ^ vr_10 [ vl_7 + vr_12 ] ) ^ ( vr_10 [ vl_8 + vr_13 ] ^ vr_10 [ vl_9 + vr_14 ] ) ; vr_3 += 8 ; vr_4 -= 8 ; } switch( vr_4 ) {
case 7 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 6 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 5 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 4 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 3 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 2 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ;
case 1 : vr_5 = ( vr_5 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vr_5 ^ vr_2 [ vr_3 ++ ] ) & 0xff ) ] ; default: break; } vl_1 = vr_5 ; } @Override final public void fn_3 ( final int vr_2 ) {
vl_1 = ( vl_1 >>> 8 ) ^ vr_10 [ vl_9 + ( ( vl_1 ^ vr_2 ) & 0xff ) ] ; }
