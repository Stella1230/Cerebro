Ignore	,	df_2
testEncodeBase64ByteArrayBooleanBoolean	,	fn_23
testEncodeBase64StringByteArray	,	fn_12
testEncodeBase64ByteArrayBoolean	,	fn_22
testDecodeByteArray	,	fn_21
testEncodeBase64StringUnChunked	,	fn_14
Test	,	df_1
assertNotNull	,	fn_25
isArrayByteBase64	,	vr_7
testBase64IntByteArrayBoolean	,	fn_8
b64	,	vr_1
getLineLength	,	vr_5
expected	,	vr_11
testDecodeObject	,	fn_19
testBase64IntByteArray	,	fn_7
fail	,	fn_13
testEncodeObject	,	fn_28
binaryData	,	vr_8
testToIntegerBytes	,	fn_33
Arrays	,	vr_3
testDecodeInteger	,	fn_31
encoded	,	vr_10
Base64	,	tp_1
testIsBase64	,	fn_9
testBase64Boolean	,	fn_3
assertFalse	,	fn_2
testDecodeBase64ByteArray	,	fn_27
testEncodeBase64ByteArrayBooleanBooleanInt	,	fn_24
testEncodeInteger	,	fn_32
assertTrue	,	fn_4
testEncodeBase64ByteArray	,	fn_11
isUrlSafe	,	vr_2
testEncodeBase64URLSafe	,	fn_16
encodeBase64	,	vr_9
testIsArrayByteBase64	,	fn_10
getLineSeparator	,	vr_4
"Expected IllegalArgumentException"	,	lr_2
testBase64Int	,	fn_5
assertEquals	,	fn_6
testBase64	,	fn_1
testEncodeBase64URLSafeString	,	fn_17
isBase64	,	vr_6
testDecodeBase64String	,	fn_26
testEncodeByteArray	,	fn_30
"Not yet implemented"	,	lr_1
testEncodeBase64Chunked	,	fn_18
testEncodeToString	,	fn_29
testEncodeBase64StringByteArrayBoolean	,	fn_15
testDecodeString	,	fn_20
