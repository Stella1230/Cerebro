public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; MST[ConstructorCallMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException () ; } @Override public V setValue ( final V obj ) {
public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; } @Override public void remove () { throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[] } @Override public V setValue ( final V obj ) {
public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; MST[ReturnValsMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException () ; } @Override public V setValue ( final V obj ) {
public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; MST[NullReturnValsMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException () ; } @Override public V setValue ( final V obj ) {
public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException () ; } @Override public V setValue ( final V obj ) {
public Map . Entry < K , V > next () { return new UnmodifiableEntry ( getIterator () . next () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException () ; } @Override public V setValue ( final V obj ) {
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return set ; }
throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[] } @Override public boolean removeIf ( final Predicate < ? super Map . Entry < K , V > > filter ) { throw new UnsupportedOperationException () ; } @Override public boolean removeAll ( final Collection < ? > coll ) {
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[rv.ROR1Mutator]MSP[] return set ; }
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[rv.ROR5Mutator]MSP[] return set ; }
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return set ; }
return new UnmodifiableEntrySetIterator ( decorated () . iterator () ) ; MST[NullReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () { final Object [] array = decorated () . toArray () ;
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[rv.ROR3Mutator]MSP[] return set ; }
return new UnmodifiableEntrySetIterator ( decorated () . iterator () ) ; MST[ConstructorCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () { final Object [] array = decorated () . toArray () ;
throw new UnsupportedOperationException () ; } @Override public boolean retainAll ( final Collection < ? > coll ) { throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[] } @Override public Iterator < Map . Entry < K , V > > iterator () {
return new UnmodifiableEntrySetIterator ( decorated () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () { final Object [] array = decorated () . toArray () ;
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[rv.ROR4Mutator]MSP[] return set ; }
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[NegateConditionalsMutator]MSP[] return set ; }
return new UnmodifiableEntrySet <> ( set ) ; MST[ConstructorCallMutator]MSP[] } @Override public boolean add ( final Map . Entry < K , V > object ) { throw new UnsupportedOperationException () ; } @Override
return new UnmodifiableEntrySet <> ( set ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final Map . Entry < K , V > object ) { throw new UnsupportedOperationException () ; } @Override
return new UnmodifiableEntrySetIterator ( decorated () . iterator () ) ; MST[ReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () { final Object [] array = decorated () . toArray () ;
return new UnmodifiableEntrySetIterator ( decorated () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public Object [] toArray () { final Object [] array = decorated () . toArray () ;
throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[] } @Override public boolean retainAll ( final Collection < ? > coll ) { throw new UnsupportedOperationException () ; } @Override public Iterator < Map . Entry < K , V > > iterator () {
return new UnmodifiableEntrySet <> ( set ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public boolean add ( final Map . Entry < K , V > object ) { throw new UnsupportedOperationException () ; } @Override
public static < K , V > Set < Map . Entry < K , V > > unmodifiableEntrySet ( final Set < Map . Entry < K , V > > set ) { if ( set instanceof Unmodifiable ) { MST[rv.ROR2Mutator]MSP[] return set ; }
