return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[rv.CRCR1Mutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return decorated () . set ( index , object ) ; MST[rv.UOI2Mutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . set ( index , object ) ; MST[rv.UOI1Mutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . set ( index , object ) ; MST[rv.UOI3Mutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . get ( index ) ; MST[ReturnValsMutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; MST[ReturnValsMutator]MSP[] } @Override public ListIterator < E > listIterator () {
public boolean removeAll ( final Collection < ? > coll ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean retainAll ( final Collection < ? > coll ) { throw unsupportedOperationException () ; } @Override public E set ( final int index , final E object ) {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public ListIterator < E > listIterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[ReturnValsMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[rv.ABSMutator]MSP[] } @Override
public static < E > FixedSizeList < E > fixedSizeList ( final List < E > list ) { return new FixedSizeList <> ( list ) ; } @Override public boolean add ( final E object ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
return decorated () . set ( index , object ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.ABSMutator]MSP[]
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public ListIterator < E > listIterator () {
public int maxSize () { return size () ; MST[NonVoidMethodCallMutator]MSP[] } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; }
return decorated () . set ( index , object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . get ( index ) ; } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public Iterator < E > iterator () {
return new FixedSizeList <> ( sub ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; } @Override
public static < E > FixedSizeList < E > fixedSizeList ( final List < E > list ) { return new FixedSizeList <> ( list ) ; MST[NullReturnValsMutator]MSP[] } @Override public boolean add ( final E object ) { throw unsupportedOperationException () ; } @Override
return decorated () . get ( index ) ; } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public Iterator < E > iterator () {
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI1Mutator]MSP[]
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI2Mutator]MSP[]
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[NonVoidMethodCallMutator]MSP[]
return decorated () . set ( index , object ) ; MST[rv.UOI4Mutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[rv.CRCR3Mutator]MSP[] } @Override
public boolean addAll ( final int index , final Collection < ? extends E > coll ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void clear () { throw unsupportedOperationException () ; } @Override public E get ( final int index ) {
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI4Mutator]MSP[]
public E remove ( final int index ) { throw unsupportedOperationException () ; } @Override public boolean remove ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean removeIf ( final Predicate < ? super E > filter ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI3Mutator]MSP[]
public static < E > FixedSizeList < E > fixedSizeList ( final List < E > list ) { return new FixedSizeList <> ( list ) ; MST[ConstructorCallMutator]MSP[] } @Override public boolean add ( final E object ) { throw unsupportedOperationException () ; } @Override
return decorated () . set ( index , object ) ; MST[NullReturnValsMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
public boolean addAll ( final int index , final Collection < ? extends E > coll ) { throw unsupportedOperationException () ; } @Override public void clear () { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public E get ( final int index ) {
public int maxSize () { return size () ; } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; MST[ReturnValsMutator]MSP[] }
return decorated () . get ( index ) ; MST[rv.UOI2Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[NullReturnValsMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
return decorated () . get ( index ) ; MST[rv.UOI4Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public int maxSize () { return size () ; } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; MST[ConstructorCallMutator]MSP[] }
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
return decorated () . get ( index ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[rv.CRCR3Mutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[rv.CRCR5Mutator]MSP[] } @Override
return decorated () . get ( index ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[rv.CRCR5Mutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[InlineConstantMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
public E remove ( final int index ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean remove ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean removeIf ( final Predicate < ? super E > filter ) { throw unsupportedOperationException () ; } @Override
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[InlineConstantMutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[rv.UOI1Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[ConstructorCallMutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[rv.UOI4Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[NullReturnValsMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[rv.UOI3Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[rv.UOI2Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.ABSMutator]MSP[]
return new FixedSizeList <> ( sub ) ; MST[ReturnValsMutator]MSP[] } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; } @Override
return decorated () . get ( index ) ; MST[NullReturnValsMutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
public static < E > FixedSizeList < E > fixedSizeList ( final List < E > list ) { return new FixedSizeList <> ( list ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final E object ) { throw unsupportedOperationException () ; } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return decorated () . set ( index , object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . set ( index , object ) ; MST[rv.ABSMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI1Mutator]MSP[]
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override public ListIterator < E > listIterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[NullReturnValsMutator]MSP[] } @Override
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[NonVoidMethodCallMutator]MSP[]
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[rv.CRCR2Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; MST[ReturnValsMutator]MSP[] } @Override
public void add ( final int index , final E object ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean addAll ( final Collection < ? extends E > coll ) { throw unsupportedOperationException () ; } @Override
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[ReturnValsMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
public int maxSize () { return size () ; MST[PrimitiveReturnsMutator]MSP[] } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; }
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[experimental.NakedReceiverMutator]MSP[]
public int maxSize () { return size () ; MST[ReturnValsMutator]MSP[] } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; }
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[rv.CRCR4Mutator]MSP[] } @Override
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI3Mutator]MSP[]
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI4Mutator]MSP[]
return decorated () . set ( index , object ) ; } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ; MST[rv.UOI2Mutator]MSP[]
return decorated () . get ( index ) ; MST[rv.UOI3Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return decorated () . get ( index ) ; MST[rv.UOI1Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
public E remove ( final int index ) { throw unsupportedOperationException () ; } @Override public boolean remove ( final Object object ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean removeIf ( final Predicate < ? super E > filter ) { throw unsupportedOperationException () ; } @Override
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[ReturnValsMutator]MSP[] } @Override
public int maxSize () { return size () ; } private static UnsupportedOperationException unsupportedOperationException () { return new UnsupportedOperationException ( lr_1 ) ; MST[NullReturnValsMutator]MSP[] }
return decorated () . get ( index ) ; MST[rv.ABSMutator]MSP[] } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; } @Override public Iterator < E > iterator () {
return decorated () . set ( index , object ) ; MST[ReturnValsMutator]MSP[] } @Override public List < E > subList ( final int fromIndex , final int toIndex ) { final List < E > sub = decorated () . subList ( fromIndex , toIndex ) ;
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[rv.CRCR6Mutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
return new FixedSizeList <> ( sub ) ; MST[ConstructorCallMutator]MSP[] } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; } @Override
return decorated () . get ( index ) ; } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override public Iterator < E > iterator () {
return UnmodifiableIterator . unmodifiableIterator ( decorated () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int lastIndexOf ( final Object object ) { return decorated () . lastIndexOf ( object ) ; } @Override public ListIterator < E > listIterator () {
return decorated () . get ( index ) ; } @Override public int indexOf ( final Object object ) { return decorated () . indexOf ( object ) ; MST[ReturnValsMutator]MSP[] } @Override public Iterator < E > iterator () {
return new FixedSizeList <> ( sub ) ; } @Override public void remove () { throw unsupportedOperationException () ; } @Override public void add ( final Object object ) { throw unsupportedOperationException () ; } @Override public boolean isFull () { return true ; MST[rv.CRCR6Mutator]MSP[] } @Override
return new FixedSizeListIterator ( decorated () . listIterator ( 0 ) ) ; MST[ConstructorCallMutator]MSP[] } @Override public ListIterator < E > listIterator ( final int index ) { return new FixedSizeListIterator ( decorated () . listIterator ( index ) ) ; } @Override
public boolean removeAll ( final Collection < ? > coll ) { throw unsupportedOperationException () ; } @Override public boolean retainAll ( final Collection < ? > coll ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public E set ( final int index , final E object ) {
public void add ( final int index , final E object ) { throw unsupportedOperationException () ; } @Override public boolean addAll ( final Collection < ? extends E > coll ) { throw unsupportedOperationException () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
