return wrappedCollection ( key ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; } @Override public List < V > remove ( final Object key ) {
@Override @SuppressWarnings ( lr_1 ) protected Map < K , List < V > > getMap () { return ( Map < K , List < V > > ) super . getMap () ; MST[ReturnValsMutator]MSP[] } @Override public List < V > get ( final K key ) {
return wrappedCollection ( key ) ; } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; MST[ReturnValsMutator]MSP[] } @Override public List < V > remove ( final Object key ) {
@Override @SuppressWarnings ( lr_1 ) protected Map < K , List < V > > getMap () { return ( Map < K , List < V > > ) super . getMap () ; MST[NullReturnValsMutator]MSP[] } @Override public List < V > get ( final K key ) {
return wrappedCollection ( key ) ; } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public List < V > remove ( final Object key ) {
@Override @SuppressWarnings ( lr_1 ) protected Map < K , List < V > > getMap () { return ( Map < K , List < V > > ) super . getMap () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public List < V > get ( final K key ) {
return wrappedCollection ( key ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; } @Override public List < V > remove ( final Object key ) {
return wrappedCollection ( key ) ; } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; MST[ConstructorCallMutator]MSP[] } @Override public List < V > remove ( final Object key ) {
return wrappedCollection ( key ) ; MST[ReturnValsMutator]MSP[] } @Override List < V > wrappedCollection ( final K key ) { return new WrappedList ( key ) ; } @Override public List < V > remove ( final Object key ) {
return ListUtils . emptyIfNull ( getMap () . remove ( key ) ) ; } @Override protected List < V > getMapping () { return getMap () . get ( key ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public void add ( final int index , final V value ) {
return ListUtils . emptyIfNull ( getMap () . remove ( key ) ) ; } @Override protected List < V > getMapping () { return getMap () . get ( key ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void add ( final int index , final V value ) {
return ListUtils . emptyIfNull ( getMap () . remove ( key ) ) ; } @Override protected List < V > getMapping () { return getMap () . get ( key ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void add ( final int index , final V value ) {
return ListUtils . emptyIfNull ( getMap () . remove ( key ) ) ; } @Override protected List < V > getMapping () { return getMap () . get ( key ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public void add ( final int index , final V value ) {
return ListUtils . emptyIfNull ( getMap () . remove ( key ) ) ; } @Override protected List < V > getMapping () { return getMap () . get ( key ) ; MST[ReturnValsMutator]MSP[] } @Override public void add ( final int index , final V value ) {
