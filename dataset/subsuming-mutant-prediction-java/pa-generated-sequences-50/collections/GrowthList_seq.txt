public static < E > GrowthList < E > growthList ( final List < E > list ) { return new GrowthList <> ( list ) ; } @Override public void add ( final int index , final E element ) {
final int size = decorated () . size () ; if ( index > size ) { decorated () . addAll ( Collections . <E > nCopies ( index - size , null ) ) ; } decorated () . add ( index , element ) ; } @Override
public boolean addAll ( final int index , final Collection < ? extends E > coll ) { final int size = decorated () . size () ; boolean result = false ; if ( index > size ) {
decorated () . addAll ( Collections . <E > nCopies ( index - size , null ) ) ; result = true ; } return decorated () . addAll ( index , coll ) || result ; } @Override
public E set ( final int index , final E element ) { final int size = decorated () . size () ; if ( index >= size ) {
decorated () . addAll ( Collections . <E > nCopies ( index - size + 1 , null ) ) ; } return decorated () . set ( index , element ) ; }
