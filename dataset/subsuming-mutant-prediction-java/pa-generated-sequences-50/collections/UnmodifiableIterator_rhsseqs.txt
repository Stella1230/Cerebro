final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; MST[NullReturnValsMutator]MSP[S] } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[S] } @Override public E next () {
return iterator . next () ; MST[NullReturnValsMutator]MSP[S] } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[NegateConditionalsMutator]MSP[N] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[ConstructorCallMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
return iterator . next () ; } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; MST[ConstructorCallMutator]MSP[S] }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR2Mutator]MSP[S] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR1Mutator]MSP[N] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; MST[ArgumentPropagationMutator]MSP[S] if ( iterator instanceof Unmodifiable ) { @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; MST[ReturnValsMutator]MSP[S] } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override public E next () {
return iterator . next () ; MST[ReturnValsMutator]MSP[N] } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR5Mutator]MSP[N] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[NullReturnValsMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR3Mutator]MSP[N] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[ReturnValsMutator]MSP[N] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; MST[NonVoidMethodCallMutator]MSP[S] if ( iterator instanceof Unmodifiable ) { @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR4Mutator]MSP[S] @SuppressWarnings ( lr_2 )
