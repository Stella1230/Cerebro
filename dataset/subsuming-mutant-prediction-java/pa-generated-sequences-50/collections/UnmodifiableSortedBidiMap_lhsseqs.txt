return UnmodifiableEntrySet . unmodifiableEntrySet ( set ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public Set < K > keySet () { final Set < K > set = super . keySet () ; return UnmodifiableSet . unmodifiableSet ( set ) ; } @Override public Set < V > values () {
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] @SuppressWarnings ( lr_1 )
final SortedBidiMap < K , V > tmpMap = ( SortedBidiMap < K , V > ) map ; return tmpMap ; } return new UnmodifiableSortedBidiMap <> ( map ) ; MST[NullReturnValsMutator]MSP[] } @Override public void clear () { throw new UnsupportedOperationException () ; } @Override
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] @SuppressWarnings ( lr_1 )
public V remove ( final Object key ) { throw new UnsupportedOperationException () ; } @Override public Set < Map . Entry < K , V > > entrySet () { final Set < Map . Entry < K , V > > set = super . entrySet () ; MST[NonVoidMethodCallMutator]MSP[]
return UnmodifiableEntrySet . unmodifiableEntrySet ( set ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public Set < K > keySet () { final Set < K > set = super . keySet () ; return UnmodifiableSet . unmodifiableSet ( set ) ; } @Override public Set < V > values () {
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_1 )
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_1 )
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_1 )
return UnmodifiableEntrySet . unmodifiableEntrySet ( set ) ; MST[ReturnValsMutator]MSP[] } @Override public Set < K > keySet () { final Set < K > set = super . keySet () ; return UnmodifiableSet . unmodifiableSet ( set ) ; } @Override public Set < V > values () {
final SortedBidiMap < K , V > tmpMap = ( SortedBidiMap < K , V > ) map ; return tmpMap ; } return new UnmodifiableSortedBidiMap <> ( map ) ; MST[ReturnValsMutator]MSP[] } @Override public void clear () { throw new UnsupportedOperationException () ; } @Override
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_1 )
final SortedBidiMap < K , V > tmpMap = ( SortedBidiMap < K , V > ) map ; return tmpMap ; } return new UnmodifiableSortedBidiMap <> ( map ) ; MST[ConstructorCallMutator]MSP[] } @Override public void clear () { throw new UnsupportedOperationException () ; } @Override
return UnmodifiableEntrySet . unmodifiableEntrySet ( set ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public Set < K > keySet () { final Set < K > set = super . keySet () ; return UnmodifiableSet . unmodifiableSet ( set ) ; } @Override public Set < V > values () {
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_1 )
public static < K , V > SortedBidiMap < K , V > unmodifiableSortedBidiMap ( final SortedBidiMap < K , ? extends V > map ) { if ( map instanceof Unmodifiable ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_1 )
