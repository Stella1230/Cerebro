protected Properties createProperties () { return new Properties () ; MST[ConstructorCallMutator]MSP[N] }
protected Properties createProperties () { return new Properties () ; MST[ReturnValsMutator]MSP[N] }
protected Properties createProperties () { return new Properties () ; MST[NullReturnValsMutator]MSP[N] }
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( oldValue ) ; Objects . requireNonNull ( newValue ) ; throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ;
} @Override public synchronized boolean remove ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[InlineConstantMutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
super . storeToXML ( os , comment ) ; } @Override public void storeToXML ( final OutputStream os , final String comment , final String encoding ) throws IOException { super . storeToXML ( os , comment , encoding ) ; MST[VoidMethodCallMutator]MSP[N] } @Override
public synchronized Object computeIfAbsent ( final Object key , final Function < ? super Object , ? extends Object > mappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized Object computeIfPresent ( final Object key ,
@Override public synchronized int hashCode () { return 0 ; MST[rv.CRCR1Mutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public Set < String > stringPropertyNames () { return Collections . emptySet () ; MST[ReturnValsMutator]MSP[S] } @Override public synchronized String toString () { return super . toString () ; } @Override public Collection < Object > values () { return Collections . emptyList () ; } @Override
return Collections . emptySet () ; } @Override public void list ( final PrintStream out ) { super . list ( out ) ; MST[VoidMethodCallMutator]MSP[S] } @Override public void list ( final PrintWriter out ) { super . list ( out ) ; } @Override
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ;
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; } @Override public String getProperty ( final String key ) { return null ; } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; MST[EmptyObjectReturnValsMutator]MSP[S] }
return Collections . emptyEnumeration () ; } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; MST[ReturnValsMutator]MSP[S] } @Override public String getProperty ( final String key ) { return null ; } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; }
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; throw new UnsupportedOperationException () ;
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public Enumeration < ? > propertyNames () {
return Collections . emptySet () ; } @Override public void list ( final PrintStream out ) { super . list ( out ) ; } @Override public void list ( final PrintWriter out ) { super . list ( out ) ; MST[VoidMethodCallMutator]MSP[N] } @Override
@Override public synchronized int hashCode () { return 0 ; MST[rv.CRCR6Mutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public synchronized void replaceAll ( final BiFunction < ? super Object , ? super Object , ? extends Object > function ) { Objects . requireNonNull ( function ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @SuppressWarnings ( lr_1 ) @Override
public Set < String > stringPropertyNames () { return Collections . emptySet () ; } @Override public synchronized String toString () { return super . toString () ; MST[ReturnValsMutator]MSP[S] } @Override public Collection < Object > values () { return Collections . emptyList () ; } @Override
return Collections . emptyEnumeration () ; MST[NullReturnValsMutator]MSP[S] } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[ReturnValsMutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[InlineConstantMutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; } @Override
@Override public synchronized int hashCode () { return 0 ; MST[ReturnValsMutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( oldValue ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( newValue ) ; throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[rv.CRCR6Mutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
public synchronized Object replace ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; } @Override public String getProperty ( final String key ) { return null ; MST[ReturnValsMutator]MSP[S] } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; }
} @Override public synchronized boolean remove ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public Enumeration < ? > propertyNames () {
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; throw new UnsupportedOperationException () ;
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR1Mutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR4Mutator]MSP[S] } @Override
return Collections . emptyEnumeration () ; MST[ReturnValsMutator]MSP[S] } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
public synchronized void putAll ( final Map < ? extends Object , ? extends Object > t ) { Objects . requireNonNull ( t ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized Object putIfAbsent ( final Object key , final Object value ) {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR6Mutator]MSP[S] } @Override
public synchronized Object computeIfAbsent ( final Object key , final Function < ? super Object , ? extends Object > mappingFunction ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object computeIfPresent ( final Object key ,
public synchronized void replaceAll ( final BiFunction < ? super Object , ? super Object , ? extends Object > function ) { Objects . requireNonNull ( function ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @SuppressWarnings ( lr_1 ) @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR6Mutator]MSP[S] } @Override
return Collections . emptySet () ; MST[ReturnValsMutator]MSP[S] } @Override public void list ( final PrintStream out ) { super . list ( out ) ; } @Override public void list ( final PrintWriter out ) { super . list ( out ) ; } @Override
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; MST[NullReturnValsMutator]MSP[S] } @Override public String getProperty ( final String key ) { return null ; } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; }
return Collections . emptyEnumeration () ; } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR4Mutator]MSP[S] } @Override
} @Override public synchronized void loadFromXML ( final InputStream in ) throws IOException , InvalidPropertiesFormatException { Objects . requireNonNull ( in ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object merge ( final Object key , final Object value ,
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR5Mutator]MSP[S] } @Override
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; MST[VoidMethodCallMutator]MSP[N] }
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR5Mutator]MSP[S] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[InlineConstantMutator]MSP[S] } @Override
public void save ( final OutputStream out , final String comments ) { super . save ( out , comments ) ; } @Override public synchronized Object setProperty ( final String key , final String value ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N]
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR1Mutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[ReturnValsMutator]MSP[S] } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[ReturnValsMutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[ReturnValsMutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public Set < String > stringPropertyNames () { return Collections . emptySet () ; } @Override public synchronized String toString () { return super . toString () ; MST[EmptyObjectReturnValsMutator]MSP[S] } @Override public Collection < Object > values () { return Collections . emptyList () ; } @Override
public synchronized Object computeIfAbsent ( final Object key , final Function < ? super Object , ? extends Object > mappingFunction ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object computeIfPresent ( final Object key ,
public synchronized void replaceAll ( final BiFunction < ? super Object , ? super Object , ? extends Object > function ) { Objects . requireNonNull ( function ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @SuppressWarnings ( lr_1 ) @Override
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( oldValue ) ; Objects . requireNonNull ( newValue ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override
public synchronized void forEach ( final BiConsumer < ? super Object , ? super Object > action ) { Objects . requireNonNull ( action ) ; } @Override public synchronized Object get ( final Object key ) { return null ; MST[ReturnValsMutator]MSP[S] } @Override
@Override public synchronized int hashCode () { return 0 ; MST[rv.CRCR5Mutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; MST[ReturnValsMutator]MSP[N] } @Override public Set < Object > keySet () {
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[rv.CRCR4Mutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public synchronized void putAll ( final Map < ? extends Object , ? extends Object > t ) { Objects . requireNonNull ( t ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object putIfAbsent ( final Object key , final Object value ) {
public synchronized void putAll ( final Map < ? extends Object , ? extends Object > t ) { Objects . requireNonNull ( t ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object putIfAbsent ( final Object key , final Object value ) {
public synchronized boolean containsKey ( final Object key ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR2Mutator]MSP[S] } @Override
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( oldValue ) ; Objects . requireNonNull ( newValue ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[InlineConstantMutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
public Set < String > stringPropertyNames () { return Collections . emptySet () ; } @Override public synchronized String toString () { return super . toString () ; } @Override public Collection < Object > values () { return Collections . emptyList () ; MST[ReturnValsMutator]MSP[S] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public Enumeration < ? > propertyNames () {
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public Enumeration < ? > propertyNames () {
} @Override public synchronized void loadFromXML ( final InputStream in ) throws IOException , InvalidPropertiesFormatException { Objects . requireNonNull ( in ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized Object merge ( final Object key , final Object value ,
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[rv.CRCR3Mutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; throw new UnsupportedOperationException () ; } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S]
public Set < String > stringPropertyNames () { return Collections . emptySet () ; } @Override public synchronized String toString () { return super . toString () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public Collection < Object > values () { return Collections . emptyList () ; } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[ReturnValsMutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; } @Override public String getProperty ( final String key ) { return null ; MST[EmptyObjectReturnValsMutator]MSP[S] } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; }
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ;
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( oldValue ) ; Objects . requireNonNull ( newValue ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[NegateConditionalsMutator]MSP[S] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[rv.CRCR6Mutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[rv.CRCR5Mutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public void save ( final OutputStream out , final String comments ) { super . save ( out , comments ) ; } @Override public synchronized Object setProperty ( final String key , final String value ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N]
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[rv.CRCR1Mutator]MSP[S] } @Override
public synchronized Object replace ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized boolean contains ( final Object value ) { return false ; } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public Set < Object > keySet () {
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[rv.CRCR3Mutator]MSP[S] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[rv.CRCR5Mutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[rv.CRCR6Mutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
} @Override public synchronized void loadFromXML ( final InputStream in ) throws IOException , InvalidPropertiesFormatException { Objects . requireNonNull ( in ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized Object merge ( final Object key , final Object value ,
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[rv.CRCR1Mutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[rv.CRCR3Mutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ;
Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
public Set < String > stringPropertyNames () { return Collections . emptySet () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public synchronized String toString () { return super . toString () ; } @Override public Collection < Object > values () { return Collections . emptyList () ; } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[BooleanFalseReturnValsMutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; MST[ReturnValsMutator]MSP[N] } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; } @Override
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; throw new UnsupportedOperationException () ;
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[NegateConditionalsMutator]MSP[S] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[rv.CRCR3Mutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[rv.CRCR1Mutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
return Collections . emptyEnumeration () ; } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public Enumeration < ? > propertyNames () {
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[rv.CRCR6Mutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; MST[NullReturnValsMutator]MSP[N] } @Override public Set < Object > keySet () {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR1Mutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR3Mutator]MSP[S] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[ReturnValsMutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[InlineConstantMutator]MSP[S] } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[rv.CRCR3Mutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[rv.CRCR5Mutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR3Mutator]MSP[N] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; MST[ReturnValsMutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[InlineConstantMutator]MSP[S] } @Override
} @Override public synchronized boolean remove ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ;
public synchronized Object getOrDefault ( final Object key , final Object defaultValue ) { return defaultValue ; } @Override public String getProperty ( final String key ) { return null ; } @Override public String getProperty ( final String key , final String defaultValue ) { return defaultValue ; MST[ReturnValsMutator]MSP[S] }
public synchronized Object replace ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
} @Override public synchronized boolean remove ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR2Mutator]MSP[N] } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR3Mutator]MSP[S] } @Override
@Override public synchronized void clear () { } @Override public synchronized Object compute ( final Object key , final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( oldValue ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( newValue ) ; throw new UnsupportedOperationException () ; } @Override
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; throw new UnsupportedOperationException () ; } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ;
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR5Mutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR5Mutator]MSP[S] } @Override
public synchronized boolean containsKey ( final Object key ) { return false ; MST[InlineConstantMutator]MSP[S] } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
@Override public synchronized int hashCode () { return 0 ; MST[InlineConstantMutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
super . storeToXML ( os , comment ) ; MST[VoidMethodCallMutator]MSP[S] } @Override public void storeToXML ( final OutputStream os , final String comment , final String encoding ) throws IOException { super . storeToXML ( os , comment , encoding ) ; } @Override
return Collections . emptyEnumeration () ; } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
@Override public synchronized void clear () { } @Override public synchronized Object compute ( final Object key , final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override
public void save ( final OutputStream out , final String comments ) { super . save ( out , comments ) ; MST[VoidMethodCallMutator]MSP[S] } @Override public synchronized Object setProperty ( final String key , final String value ) { Objects . requireNonNull ( key ) ;
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR2Mutator]MSP[N] } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.ROR3Mutator]MSP[S] } @Override
@Override public synchronized void clear () { } @Override public synchronized Object compute ( final Object key , final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
final BiFunction < ? super Object , ? super Object , ? extends Object > remappingFunction ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; } @Override public synchronized boolean contains ( final Object value ) { return false ; MST[rv.CRCR5Mutator]MSP[S] } @Override
} @Override public synchronized boolean remove ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] } @Override
public synchronized void load ( final InputStream inStream ) throws IOException { Objects . requireNonNull ( inStream ) ; throw new UnsupportedOperationException () ; } @Override public synchronized void load ( final Reader reader ) throws IOException { Objects . requireNonNull ( reader ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ;
public Set < String > stringPropertyNames () { return Collections . emptySet () ; } @Override public synchronized String toString () { return super . toString () ; } @Override public Collection < Object > values () { return Collections . emptyList () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override
return Collections . emptySet () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public void list ( final PrintStream out ) { super . list ( out ) ; } @Override public void list ( final PrintWriter out ) { super . list ( out ) ; } @Override
return Collections . emptyEnumeration () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] } @Override
@Override public synchronized int hashCode () { return 0 ; MST[rv.CRCR3Mutator]MSP[N] } @Override public synchronized boolean isEmpty () { return true ; } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S]
public Set < Entry < Object , Object > > entrySet () { return Collections . emptySet () ; } @Override public synchronized boolean equals ( final Object o ) { return ( o instanceof Properties ) && ( ( Properties ) o ) . isEmpty () ; MST[rv.CRCR4Mutator]MSP[N] } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[rv.CRCR2Mutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; } @Override
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override public synchronized int size () { return 0 ; } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
public synchronized boolean containsKey ( final Object key ) { return false ; } @Override public boolean containsValue ( final Object value ) { return false ; } @Override public synchronized Enumeration < Object > elements () { return Collections . emptyEnumeration () ; MST[NullReturnValsMutator]MSP[S] } @Override
return Collections . emptyEnumeration () ; } @Override public synchronized Object put ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; MST[ConstructorCallMutator]MSP[S] } @Override
Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ;
public synchronized Object replace ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[ArgumentPropagationMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
public synchronized Object replace ( final Object key , final Object value ) { Objects . requireNonNull ( key ) ; Objects . requireNonNull ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] throw new UnsupportedOperationException () ; } @Override
@Override public synchronized int hashCode () { return 0 ; } @Override public synchronized boolean isEmpty () { return true ; MST[rv.CRCR6Mutator]MSP[N] } @Override public synchronized Enumeration < Object > keys () { return Collections . emptyEnumeration () ; } @Override public Set < Object > keySet () {
public synchronized boolean replace ( final Object key , final Object oldValue , final Object newValue ) { Objects . requireNonNull ( key ) ; MST[NonVoidMethodCallMutator]MSP[N] Objects . requireNonNull ( oldValue ) ; Objects . requireNonNull ( newValue ) ; throw new UnsupportedOperationException () ; } @Override
Objects . requireNonNull ( key ) ; MST[ArgumentPropagationMutator]MSP[N] Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override protected void rehash () { } @Override public synchronized Object remove ( final Object key ) { Objects . requireNonNull ( key ) ; throw new UnsupportedOperationException () ;
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[rv.CRCR5Mutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
Objects . requireNonNull ( value ) ; throw new UnsupportedOperationException () ; } @Override public synchronized int size () { return 0 ; MST[rv.CRCR1Mutator]MSP[N] } @Override public void store ( final OutputStream out , final String comments ) throws IOException { super . store ( out , comments ) ; }
@Override public void store ( final Writer writer , final String comments ) throws IOException { super . store ( writer , comments ) ; MST[VoidMethodCallMutator]MSP[S] } @Override public void storeToXML ( final OutputStream os , final String comment ) throws IOException {
