final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; MST[NullReturnValsMutator]MSP[] } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[] } @Override public E next () {
return iterator . next () ; MST[NullReturnValsMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[ConstructorCallMutator]MSP[] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
return iterator . next () ; } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; MST[ConstructorCallMutator]MSP[] }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; MST[ArgumentPropagationMutator]MSP[] if ( iterator instanceof Unmodifiable ) { @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; MST[ReturnValsMutator]MSP[] } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public E next () {
return iterator . next () ; MST[ReturnValsMutator]MSP[] } @Override public void remove () { throw new UnsupportedOperationException ( lr_3 ) ; }
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[NullReturnValsMutator]MSP[] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_2 )
final Iterator < E > tmpIterator = ( Iterator < E > ) iterator ; return tmpIterator ; } return new UnmodifiableIterator <> ( iterator ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public E next () {
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( iterator instanceof Unmodifiable ) { @SuppressWarnings ( lr_2 )
public static < E > Iterator < E > unmodifiableIterator ( final Iterator < ? extends E > iterator ) { Objects . requireNonNull ( iterator , lr_1 ) ; if ( iterator instanceof Unmodifiable ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_2 )
