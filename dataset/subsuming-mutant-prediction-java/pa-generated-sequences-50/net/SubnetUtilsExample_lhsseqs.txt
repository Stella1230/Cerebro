System . out . println ( lr_3 ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[NonVoidMethodCallMutator]MSP[] final String prompt = lr_14 ;
System . out . println ( lr_3 ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR4Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . println ( lr_3 ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) MST[NonVoidMethodCallMutator]MSP[] + lr_19 + subnet + lr_20 ) ; System . out . println ( prompt ) ; } } }
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR2Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_7 , info . getAddress () ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_5 , info . getNetmask () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR1Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ; MST[NonVoidMethodCallMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
System . out . println ( lr_3 ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[experimental.NakedReceiverMutator]MSP[] final String prompt = lr_14 ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , MST[VoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[InlineConstantMutator]MSP[] final String prompt = lr_14 ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[experimental.NakedReceiverMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR3Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[NegateConditionalsMutator]MSP[]
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[rv.ROR4Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . println ( lr_3 ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR3Mutator]MSP[] final String prompt = lr_14 ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR2Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR6Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; System . out . println ( prompt ) ; MST[NonVoidMethodCallMutator]MSP[] } } }
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[InlineConstantMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR3Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[rv.ROR5Mutator]MSP[]
System . out . println ( lr_3 ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR3Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR5Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { MST[ConstructorCallMutator]MSP[] final String address = scanner . nextLine () ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () , MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . println ( lr_3 ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[rv.ROR2Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR1Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[experimental.NakedReceiverMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR5Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR6Mutator]MSP[] final String prompt = lr_14 ;
System . out . println ( lr_3 ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . println ( lr_3 ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[NonVoidMethodCallMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
public static void main ( final String [] args ) { final String subnet = lr_1 ; final SubnetUtils utils = new SubnetUtils ( subnet ) ; final SubnetInfo info = utils . getInfo () ; System . out . printf ( lr_2 , subnet ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () , MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[InlineConstantMutator]MSP[] final String prompt = lr_14 ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . println ( lr_3 ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR1Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . println ( lr_3 ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR6Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR6Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[NonVoidMethodCallMutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR4Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; System . out . printf ( lr_10 , info . getLowAddress () , MST[NonVoidMethodCallMutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . println ( prompt ) ; } } }
public static void main ( final String [] args ) { final String subnet = lr_1 ; final SubnetUtils utils = new SubnetUtils ( subnet ) ; final SubnetInfo info = utils . getInfo () ; MST[ConstructorCallMutator]MSP[] System . out . printf ( lr_2 , subnet ) ;
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[ConstructorCallMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR2Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR4Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[InlineConstantMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[NonVoidMethodCallMutator]MSP[] final String prompt = lr_14 ;
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR5Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; MST[NonVoidMethodCallMutator]MSP[] System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[rv.ROR1Mutator]MSP[]
System . out . println ( lr_3 ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[rv.CRCR1Mutator]MSP[]
System . out . println ( lr_15 + address + lr_16 + ( info . isInRange ( address ) ? lr_17 : lr_18 ) + lr_19 + subnet + lr_20 ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . println ( prompt ) ; } } }
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR6Mutator]MSP[] final String prompt = lr_14 ;
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ; MST[rv.ROR3Mutator]MSP[]
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR5Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; MST[rv.CRCR4Mutator]MSP[] final String prompt = lr_14 ;
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_3 ) ; MST[rv.CRCR3Mutator]MSP[] System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[rv.CRCR2Mutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR1Mutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[rv.CRCR6Mutator]MSP[]
System . out . printf ( lr_9 , info . getBroadcastAddress () , Integer . toBinaryString ( info . asInteger ( info . getBroadcastAddress () ) ) ) ; MST[InlineConstantMutator]MSP[] System . out . printf ( lr_10 , info . getLowAddress () ,
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR3Mutator]MSP[]
System . out . println ( prompt ) ; try ( final Scanner scanner = new Scanner ( System . in ) ) { MST[VoidMethodCallMutator]MSP[] while ( scanner . hasNextLine () ) { final String address = scanner . nextLine () ;
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[rv.CRCR2Mutator]MSP[]
Integer . toBinaryString ( info . asInteger ( info . getLowAddress () ) ) ) ; System . out . printf ( lr_11 , info . getHighAddress () , Integer . toBinaryString ( info . asInteger ( info . getHighAddress () ) ) ) ; MST[experimental.NakedReceiverMutator]MSP[]
System . out . printf ( lr_5 , info . getNetmask () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetmask () ) ) ) ; System . out . printf ( lr_6 , info . getCidrSignature () ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[rv.CRCR4Mutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; System . out . printf ( lr_8 , info . getNetworkAddress () , MST[NonVoidMethodCallMutator]MSP[] Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_12 , Long . valueOf ( info . getAddressCountLong () ) ) ; System . out . printf ( lr_13 , Arrays . toString ( info . getAllAddresses () ) ) ; final String prompt = lr_14 ; MST[InlineConstantMutator]MSP[]
System . out . println ( lr_3 ) ; System . out . printf ( lr_4 , info . getAddress () , Integer . toBinaryString ( info . asInteger ( info . getAddress () ) ) ) ; MST[InlineConstantMutator]MSP[]
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR5Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
System . out . printf ( lr_7 , info . getAddress () ) ; MST[rv.CRCR6Mutator]MSP[] System . out . printf ( lr_8 , info . getNetworkAddress () , Integer . toBinaryString ( info . asInteger ( info . getNetworkAddress () ) ) ) ;
