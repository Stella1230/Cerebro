return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[rv.UOI4Mutator]MSP[]
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI4Mutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR6Mutator]MSP[]
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[rv.UOI2Mutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.ABSMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI4Mutator]MSP[] throws IOException {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.ROR3Mutator]MSP[]
if ( pointer != null ) { MST[rv.ABSMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[rv.UOI4Mutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ; MST[rv.CRCR5Mutator]MSP[]
if ( pointer != null ) { MST[rv.UOI1Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
try MST[rv.UOI3Mutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[rv.ABSMutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[rv.UOI4Mutator]MSP[] result . setLastArticle ( lastNum ) ;
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[rv.UOI2Mutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[]
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI2Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI4Mutator]MSP[] throws IOException {
try MST[VoidMethodCallMutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI1Mutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.ROR2Mutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[rv.ABSMutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI2Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[IncrementsMutator]MSP[] result . setLastArticle ( lastNum ) ;
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[rv.UOI1Mutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
if ( pointer != null ) { MST[rv.UOI2Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[rv.UOI3Mutator]MSP[] {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { MST[VoidMethodCallMutator]MSP[] int i = 0 ; try {
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[RemoveConditionalMutator_ORDER_IF]MSP[]
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; MST[ConstructorCallMutator]MSP[] result . setNewsgroup ( tokens [ i ++ ] ) ;
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI2Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[InlineConstantMutator]MSP[]
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.ABSMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
article . setArticleId ( parts [ i ++ ] ) ; article . addReference ( parts [ i ++ ] ) ; } catch ( final NumberFormatException e ) { } } return article ; } private NewsgroupInfo [] readNewsgroupListing () throws IOException MST[ReturnValsMutator]MSP[] {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.ABSMutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
public boolean selectNewsgroup ( final String newsgroup , final NewsgroupInfo info ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( group ( newsgroup ) ) ) { return false ; } if ( info != null ) { parseGroupReply ( getReplyString () , info ) ; MST[NonVoidMethodCallMutator]MSP[] }
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[rv.UOI4Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[]
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[rv.UOI4Mutator]MSP[] {
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[rv.UOI3Mutator]MSP[]
article . setArticleId ( parts [ i ++ ] ) ; article . addReference ( parts [ i ++ ] ) ; } catch ( final NumberFormatException e ) { } } return article ; } private NewsgroupInfo [] readNewsgroupListing () throws IOException MST[NullReturnValsMutator]MSP[] {
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[rv.ABSMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR2Mutator]MSP[]
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI1Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI2Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[ArgumentPropagationMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI1Mutator]MSP[]
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[rv.UOI4Mutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI3Mutator]MSP[]
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI2Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[rv.UOI3Mutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectPreviousArticle () throws IOException MST[NonVoidMethodCallMutator]MSP[] { return selectPreviousArticle ( ( ArticleInfo ) null ) ; } public boolean selectNextArticle ( final ArticleInfo pointer ) throws IOException {
if ( pointer != null ) { MST[NonVoidMethodCallMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI3Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI4Mutator]MSP[] throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[NonVoidMethodCallMutator]MSP[] {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[]
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR1Mutator]MSP[]
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[rv.ABSMutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI1Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
if ( ! NNTPReply . isPositiveCompletion ( stat () ) ) { return false ; MST[rv.ROR5Mutator]MSP[] } } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final String articleId ) throws IOException {
switch ( tokens [ i ++ ] . charAt ( 0 ) ) MST[ReturnValsMutator]MSP[] { case 'y' : case 'Y' : result . setPostingPermission ( NewsgroupInfo . PERMITTED_POSTING_PERMISSION ) ; break; case 'n' : case 'N' : result . setPostingPermission ( NewsgroupInfo . PROHIBITED_POSTING_PERMISSION ) ; break; case 'm' :
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[NegateConditionalsMutator]MSP[]
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[rv.UOI1Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[rv.ABSMutator]MSP[]
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[rv.ABSMutator]MSP[] throws IOException {
public Iterable < String > iterateNewNews ( final NewGroupsOrNewsQuery query ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] if ( NNTPReply . isPositiveCompletion ( newnews ( query . getNewsgroups () , query . getDate () , query . getTime () , query . isGMT () , query . getDistributions () ) ) ) {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[rv.UOI4Mutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
if ( pointer != null ) { MST[rv.UOI4Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.ABSMutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[experimental.RemoveIncrementsMutator]MSP[] result . setLastArticle ( lastNum ) ;
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI3Mutator]MSP[] throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[rv.ABSMutator]MSP[] {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI1Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[rv.ABSMutator]MSP[] result . setLastArticle ( lastNum ) ;
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI1Mutator]MSP[] throws IOException {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI1Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI4Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[rv.ABSMutator]MSP[] {
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; MST[NonVoidMethodCallMutator]MSP[] } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ;
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.ROR4Mutator]MSP[]
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[rv.UOI1Mutator]MSP[] {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI4Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[rv.UOI1Mutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[rv.UOI3Mutator]MSP[] result . setLastArticle ( lastNum ) ;
if ( ! NNTPReply . isPositiveCompletion ( stat () ) ) { return false ; MST[NegateConditionalsMutator]MSP[] } } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final String articleId ) throws IOException {
return selectArticle ( articleId , ( ArticleInfo ) null ) ; } public boolean selectArticle ( final ArticleInfo pointer ) throws IOException MST[NonVoidMethodCallMutator]MSP[] { return selectArticle ( null , pointer ) ; } public boolean selectArticle ( final long articleNumber , final ArticleInfo pointer ) throws IOException {
public Iterable < String > iterateNewNews ( final NewGroupsOrNewsQuery query ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] if ( NNTPReply . isPositiveCompletion ( newnews ( query . getNewsgroups () , query . getDate () , query . getTime () , query . isGMT () , query . getDistributions () ) ) ) {
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[NonVoidMethodCallMutator]MSP[] throws IOException {
if ( pointer != null ) { MST[ArgumentPropagationMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI1Mutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI4Mutator]MSP[]
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[rv.UOI3Mutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[rv.UOI4Mutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[rv.UOI2Mutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
return null ; } return new DotTerminatedMessageWriter ( _writer_ ) ; } public boolean logout () throws IOException { return NNTPReply . isPositiveCompletion ( quit () ) ; } public boolean authenticate ( final String username , final String password ) MST[NonVoidMethodCallMutator]MSP[] throws IOException {
return null ; } return new DotTerminatedMessageWriter ( _writer_ ) ; } public boolean logout () throws IOException MST[NonVoidMethodCallMutator]MSP[] { return NNTPReply . isPositiveCompletion ( quit () ) ; } public boolean authenticate ( final String username , final String password ) throws IOException {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[ConditionalsBoundaryMutator]MSP[]
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[]
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[rv.UOI1Mutator]MSP[] result . setLastArticle ( lastNum ) ;
public Iterable < String > iterateNewNews ( final NewGroupsOrNewsQuery query ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] if ( NNTPReply . isPositiveCompletion ( newnews ( query . getNewsgroups () , query . getDate () , query . getTime () , query . isGMT () , query . getDistributions () ) ) ) {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[InlineConstantMutator]MSP[]
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI3Mutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI1Mutator]MSP[] throws IOException {
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[rv.UOI1Mutator]MSP[]
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[NonVoidMethodCallMutator]MSP[] throws IOException {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR3Mutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR4Mutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.ROR1Mutator]MSP[]
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI3Mutator]MSP[] throws IOException {
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; MST[ReturnValsMutator]MSP[] int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ;
if ( ! NNTPReply . isPositiveCompletion ( next () ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectNextArticle () throws IOException MST[NonVoidMethodCallMutator]MSP[] {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI4Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[NonVoidMethodCallMutator]MSP[] {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[rv.UOI3Mutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[rv.UOI2Mutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[NonVoidMethodCallMutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI4Mutator]MSP[]
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.ROR5Mutator]MSP[]
if ( pointer != null ) { MST[rv.UOI3Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.ABSMutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI1Mutator]MSP[] throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[rv.UOI4Mutator]MSP[] {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[rv.ABSMutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI3Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
try MST[experimental.RemoveIncrementsMutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; MST[NonVoidMethodCallMutator]MSP[] } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.ABSMutator]MSP[]
if ( ! NNTPReply . isPositiveCompletion ( stat () ) ) { return false ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final String articleId ) throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[]
return new ReplyIterator ( _reader_ ) ; } throw new IOException ( lr_11 + getReplyString () ) ; } public boolean completePendingCommand () throws IOException MST[NonVoidMethodCallMutator]MSP[] { return NNTPReply . isPositiveCompletion ( getReply () ) ; } public Writer postArticle () throws IOException {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[NonVoidMethodCallMutator]MSP[]
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ; MST[rv.CRCR1Mutator]MSP[]
if ( ! NNTPReply . isPositiveCompletion ( stat () ) ) { return false ; } } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; MST[NonVoidMethodCallMutator]MSP[] } return true ; } public boolean selectArticle ( final String articleId ) throws IOException {
if ( pointer != null ) { MST[rv.ABSMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI2Mutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR1Mutator]MSP[]
return selectArticle ( articleNumber , null ) ; } public boolean selectPreviousArticle ( final ArticleInfo pointer ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { if ( ! NNTPReply . isPositiveCompletion ( last () ) ) { return false ; } if ( pointer != null ) {
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR6Mutator]MSP[]
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI3Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
if ( pointer != null ) { MST[rv.UOI2Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[rv.UOI3Mutator]MSP[] {
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[rv.UOI2Mutator]MSP[]
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) MST[NegateConditionalsMutator]MSP[] throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR2Mutator]MSP[]
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI2Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
public Iterable < String > iterateNewNews ( final NewGroupsOrNewsQuery query ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] if ( NNTPReply . isPositiveCompletion ( newnews ( query . getNewsgroups () , query . getDate () , query . getTime () , query . isGMT () , query . getDistributions () ) ) ) {
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[ArgumentPropagationMutator]MSP[]
return new ReplyIterator ( _reader_ ) ; } throw new IOException ( lr_11 + getReplyString () ) ; } public boolean completePendingCommand () throws IOException { return NNTPReply . isPositiveCompletion ( getReply () ) ; } public Writer postArticle () throws IOException MST[NonVoidMethodCallMutator]MSP[] {
try MST[rv.ABSMutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR5Mutator]MSP[]
if ( ! NNTPReply . isPositiveIntermediate ( post () ) ) { return null ; } return new DotTerminatedMessageWriter ( _writer_ ) ; } public Writer forwardArticle ( final String articleId ) throws IOException MST[NonVoidMethodCallMutator]MSP[] { if ( ! NNTPReply . isPositiveIntermediate ( ihave ( articleId ) ) ) {
public boolean selectArticle ( final String articleId , final ArticleInfo pointer ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( stat ( articleId ) ) ) { return false ; } } else {
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ; MST[rv.CRCR6Mutator]MSP[]
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI4Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
public Iterable < String > iterateNewNews ( final NewGroupsOrNewsQuery query ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] if ( NNTPReply . isPositiveCompletion ( newnews ( query . getNewsgroups () , query . getDate () , query . getTime () , query . isGMT () , query . getDistributions () ) ) ) {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[rv.UOI3Mutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.ABSMutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI2Mutator]MSP[]
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI1Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[rv.UOI1Mutator]MSP[] {
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[rv.UOI4Mutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[rv.UOI1Mutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[NonVoidMethodCallMutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI3Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
if ( pointer != null ) { MST[rv.UOI1Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[rv.ABSMutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) MST[rv.UOI3Mutator]MSP[] throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber ,
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
try MST[rv.UOI2Mutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[rv.UOI3Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI3Mutator]MSP[] throws IOException {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.ROR2Mutator]MSP[]
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[rv.ABSMutator]MSP[]
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[rv.UOI2Mutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( lr_5 , lr_6 ) ) ) { return null ; } try ( final BufferedReader reader = new DotTerminatedMessageReader ( _reader_ ) ) { String line ; final ArrayList < String > list = new ArrayList <> () ; MST[NonVoidMethodCallMutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.ROR3Mutator]MSP[]
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.ABSMutator]MSP[] throws IOException {
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) MST[rv.ROR5Mutator]MSP[] throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else {
try ( final StringWriter help = new StringWriter () ; final BufferedReader reader = new DotTerminatedMessageReader ( _reader_ ) ) { MST[NonVoidMethodCallMutator]MSP[] Util . copyReader ( reader , help ) ; return help . toString () ; } } public String [] listOverviewFmt () throws IOException {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI3Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
if ( ! NNTPReply . isPositiveCompletion ( stat () ) ) { return false ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final String articleId ) throws IOException {
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[NegateConditionalsMutator]MSP[]
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else { MST[rv.UOI2Mutator]MSP[]
return retrieveArticle ( articleNumber , null ) ; } public BufferedReader retrieveArticleHeader ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI2Mutator]MSP[] throws IOException { return __retrieve ( NNTPCommand . HEAD , articleId , pointer ) ; } public Reader retrieveArticleHeader ( final String articleId ) throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException MST[rv.UOI2Mutator]MSP[] {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.CRCR4Mutator]MSP[]
private BufferedReader __retrieveArticleInfo ( final String articleRange ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( stat ( articleNumber ) ) ) { MST[rv.UOI4Mutator]MSP[] return false ; } if ( pointer != null ) { parseArticlePointer ( getReplyString () , pointer ) ; } return true ; } public boolean selectArticle ( final long articleNumber ) throws IOException {
public Iterable < Article > iterateArticleInfo ( final long lowArticleNumber , final long highArticleNumber ) MST[rv.UOI1Mutator]MSP[] throws IOException { final BufferedReader info = retrieveArticleInfo ( lowArticleNumber , highArticleNumber ) ; if ( info == null ) { throw new IOException ( lr_13 + getReplyString () ) ; }
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; MST[NonVoidMethodCallMutator]MSP[] try {
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; MST[ConstructorCallMutator]MSP[] if ( parts . length > 6 ) { int i = 0 ; try {
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.ABSMutator]MSP[] throws IOException {
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.ROR5Mutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR3Mutator]MSP[]
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; MST[rv.ABSMutator]MSP[] } @Deprecated public boolean selectArticle ( final int a ) throws IOException { return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[ConstructorCallMutator]MSP[]
return retrieve ( NNTPCommand . HEAD , articleNumber , pointer ) ; } public BufferedReader retrieveArticleHeader ( final long articleNumber ) throws IOException { return retrieveArticleHeader ( articleNumber , null ) ; } public BufferedReader retrieveArticleBody ( final String articleId , final ArticleInfo pointer ) MST[rv.UOI2Mutator]MSP[] throws IOException {
if ( pointer != null ) { MST[rv.UOI4Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[NonVoidMethodCallMutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI2Mutator]MSP[] throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.UOI3Mutator]MSP[]
try MST[rv.UOI4Mutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[rv.UOI2Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[]
final long highArticleNumber ) throws IOException { return __retrieveHeader ( header , lowArticleNumber + lr_12 + highArticleNumber ) ; } @Deprecated public Reader retrieveHeader ( final String header , final int lowArticleNumber , final int highArticleNumber ) MST[rv.UOI2Mutator]MSP[] throws IOException {
if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command ) ) ) { return null ; } } if ( pointer != null ) { MST[NonVoidMethodCallMutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; }
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.ROR1Mutator]MSP[]
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ; MST[InlineConstantMutator]MSP[]
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[ConstructorCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[rv.UOI3Mutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
{ final String tokens [] = entry . split ( lr_1 ) ; if ( tokens . length < 4 ) { return null ; } final NewsgroupInfo result = new NewsgroupInfo () ; int i = 0 ; result . setNewsgroup ( tokens [ i ++ ] ) ; MST[rv.CRCR3Mutator]MSP[]
return selectArticle ( articleId , ( ArticleInfo ) null ) ; } public boolean selectArticle ( final ArticleInfo pointer ) throws IOException { return selectArticle ( null , pointer ) ; MST[NonVoidMethodCallMutator]MSP[] } public boolean selectArticle ( final long articleNumber , final ArticleInfo pointer ) throws IOException {
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[RemoveConditionalMutator_ORDER_ELSE]MSP[]
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[rv.UOI3Mutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
try MST[IncrementsMutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
try MST[rv.UOI1Mutator]MSP[] { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; result . setLastArticle ( lastNum ) ;
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI4Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[RemoveConditionalMutator_ORDER_IF]MSP[]
private BufferedReader __retrieve ( final int command , final String articleId , final ArticleInfo pointer ) MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throws IOException { if ( articleId != null ) { if ( ! NNTPReply . isPositiveCompletion ( sendCommand ( command , articleId ) ) ) { return null ; } } else {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[rv.ABSMutator]MSP[]
return retrieveArticleInfo ( ( long ) lowArticleNumber ) ; } @Deprecated public boolean selectArticle ( final int a ) throws IOException { MST[rv.UOI1Mutator]MSP[] return selectArticle ( ( long ) a ) ; } @Deprecated public Reader retrieveArticleHeader ( final int a ) throws IOException {
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[]
article . setSubject ( line ) ; final String parts [] = line . split ( lr_4 ) ; if ( parts . length > 6 ) { int i = 0 ; try { MST[rv.ROR4Mutator]MSP[]
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[NonVoidMethodCallMutator]MSP[] result . setLastArticle ( lastNum ) ;
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[ConditionalsBoundaryMutator]MSP[]
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[]
info . setNewsgroup ( tokens [ i ++ ] ) ; info . setPostingPermission ( NewsgroupInfo . UNKNOWN_POSTING_PERMISSION ) ; return ; } catch ( final NumberFormatException e ) { } } throw new MalformedServerReplyException ( lr_3 + reply ) ; } static NewsgroupInfo parseNewsgroupListEntry ( final String entry ) MST[rv.CRCR5Mutator]MSP[]
return retrieveHeader ( header , ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber , final int highArticleNumber ) throws IOException { MST[rv.UOI4Mutator]MSP[] return retrieveArticleInfo ( ( long ) lowArticleNumber , ( long ) highArticleNumber ) ; } @Deprecated
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
if ( pointer != null ) { MST[rv.UOI3Mutator]MSP[] parseArticlePointer ( getReplyString () , pointer ) ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticle ( final String articleId , final ArticleInfo pointer ) throws IOException {
public Reader retrieveHeader ( final String a , final int b ) throws IOException { MST[rv.UOI1Mutator]MSP[] return retrieveHeader ( a , ( long ) b ) ; } @Deprecated public boolean selectArticle ( final int a , final ArticlePointer ap ) throws IOException {
return __retrieveArticleInfo ( Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveArticleInfo ( final long lowArticleNumber , MST[NonVoidMethodCallMutator]MSP[] final long highArticleNumber ) throws IOException { return __retrieveArticleInfo ( lowArticleNumber + lr_12 + highArticleNumber ) ; }
try { final long lastNum = Long . parseLong ( tokens [ i ++ ] ) ; final long firstNum = Long . parseLong ( tokens [ i ++ ] ) ; result . setFirstArticle ( firstNum ) ; MST[rv.UOI2Mutator]MSP[] result . setLastArticle ( lastNum ) ;
return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveHeader ( final String header , final long articleNumber ) throws IOException { return __retrieveHeader ( header , Long . toString ( articleNumber ) ) ; } public BufferedReader retrieveHeader ( final String header , final long lowArticleNumber , MST[experimental.NakedReceiverMutator]MSP[]
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[rv.UOI2Mutator]MSP[] {
final ArticleInfo ai = ap2ai ( ap ) ; final boolean b = selectArticle ( a , ai ) ; ai2ap ( ai , ap ) ; return b ; } @Deprecated public Reader retrieveArticleInfo ( final int lowArticleNumber ) throws IOException { MST[rv.UOI1Mutator]MSP[]
private BufferedReader __retrieveArticleInfo ( final String articleRange ) throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xover ( articleRange ) ) ) { return null ; } return new DotTerminatedMessageReader ( _reader_ ) ; } public BufferedReader retrieveArticleInfo ( final long articleNumber ) throws IOException MST[NonVoidMethodCallMutator]MSP[] {
return new ArticleIterator ( new ReplyIterator ( info , false ) ) ; } private BufferedReader __retrieveHeader ( final String header , final String articleRange ) MST[NonVoidMethodCallMutator]MSP[] throws IOException { if ( ! NNTPReply . isPositiveCompletion ( xhdr ( header , articleRange ) ) ) { return null ; }
