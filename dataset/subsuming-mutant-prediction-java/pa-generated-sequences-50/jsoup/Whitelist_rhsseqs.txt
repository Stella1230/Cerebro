protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) this . attributes . remove ( name ) ; } return this ; MST[ReturnValsMutator]MSP[S] } public Whitelist addEnforcedAttribute ( String tag , String attribute , String value ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
for ( String protocol : removeProtocols ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[NegateConditionalsMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
Validate . notEmpty ( attribute ) ; Validate . notNull ( removeProtocols ) ; TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attr = AttributeKey . valueOf ( attribute ) ; Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ; MST[VoidMethodCallMutator]MSP[S]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
preserveRelativeLinks = preserve ; MST[experimental.MemberVariableMutator]MSP[S] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR1Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[rv.ROR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[experimental.NakedReceiverMutator]MSP[S]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
if ( this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; MST[ArgumentPropagationMutator]MSP[N] }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; MST[VoidMethodCallMutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ; MST[VoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; MST[NullReturnValsMutator]MSP[N] } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N] ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR5Mutator]MSP[N]
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
. addAttributes ( lr_6 , lr_25 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR1Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR6Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[NonVoidMethodCallMutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; MST[ArgumentPropagationMutator]MSP[S] if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
if ( this . attributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[NegateConditionalsMutator]MSP[S] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; } return this ; MST[NullReturnValsMutator]MSP[N] } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
protocols . remove ( tagName ) ; } return this ; MST[ReturnValsMutator]MSP[S] } protected boolean isSafeTag ( String tag ) { return tagNames . contains ( TagName . valueOf ( tag ) ) ; } protected boolean isSafeAttribute ( String tagName , Element el , Attribute attr ) {
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[NegateConditionalsMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
attrMap = this . protocols . get ( tagName ) ; MST[ArgumentPropagationMutator]MSP[S] } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
for ( String protocol : removeProtocols ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
for ( String protocol : removeProtocols ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; MST[NonVoidMethodCallMutator]MSP[S] } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; MST[ArgumentPropagationMutator]MSP[N] enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { Validate . notEmpty ( tagName ) ; MST[VoidMethodCallMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notEmpty ( attribute ) ;
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
preserveRelativeLinks = preserve ; MST[rv.UOI4Mutator]MSP[S] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N]
Validate . notEmpty ( attribute ) ; Validate . notNull ( removeProtocols ) ; TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attr = AttributeKey . valueOf ( attribute ) ; Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ; MST[NonVoidMethodCallMutator]MSP[S]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[S] attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
if ( this . attributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[NullReturnValsMutator]MSP[N] . addTags ( lr_32 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N] ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { Validate . notEmpty ( tagName ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[NonVoidMethodCallMutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
preserveRelativeLinks = preserve ; return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N]
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; MST[ArgumentPropagationMutator]MSP[N] } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[rv.ROR4Mutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[rv.ROR4Mutator]MSP[N]
if ( this . attributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR2Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[rv.ROR4Mutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR5Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI2Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR4Mutator]MSP[N]
tagNames . add ( TagName . valueOf ( tagName ) ) ; MST[NonVoidMethodCallMutator]MSP[N] } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { Validate . notEmpty ( tag ) ;
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR2Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_32 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[rv.ROR2Mutator]MSP[N] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] protocols . remove ( tagName ) ; } } return this ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[InlineConstantMutator]MSP[N] . addTags ( lr_32 )
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[rv.ROR5Mutator]MSP[S] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
Validate . notEmpty ( attribute ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notNull ( removeProtocols ) ; TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attr = AttributeKey . valueOf ( attribute ) ; Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR6Mutator]MSP[N]
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; MST[VoidMethodCallMutator]MSP[N] attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; MST[ConstructorCallMutator]MSP[N] for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[NonVoidMethodCallMutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
preserveRelativeLinks = preserve ; return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notNull ( protocols ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; MST[NonVoidMethodCallMutator]MSP[N] } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; MST[ConstructorCallMutator]MSP[N] this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) {
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[rv.ROR1Mutator]MSP[N]
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[rv.ROR2Mutator]MSP[N]
protSet = attrMap . get ( attrKey ) ; MST[NonVoidMethodCallMutator]MSP[S] } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ;
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ; MST[ConstructorCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
for ( String protocol : removeProtocols ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR3Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR4Mutator]MSP[N]
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; MST[VoidMethodCallMutator]MSP[N] for ( String tagName : tags ) { Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[S] if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[NullReturnValsMutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[ConditionalsBoundaryMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR4Mutator]MSP[N]
Protocol prot = Protocol . valueOf ( protocol ) ; protSet . add ( prot ) ; MST[NonVoidMethodCallMutator]MSP[N] } return this ; } public Whitelist removeProtocols ( String tag , String attribute , String ... removeProtocols ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR5Mutator]MSP[N]
return this ; MST[ReturnValsMutator]MSP[N] } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
attrMap . put ( attrKey , attrVal ) ; MST[ArgumentPropagationMutator]MSP[N] enforcedAttributes . put ( tagName , attrMap ) ; } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; MST[NonVoidMethodCallMutator]MSP[S] }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
preserveRelativeLinks = preserve ; MST[rv.UOI1Mutator]MSP[N] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[rv.ROR1Mutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR5Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[S] Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ;
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; MST[NonVoidMethodCallMutator]MSP[N] } if ( attrMap . containsKey ( attrKey ) ) {
Protocol prot = Protocol . valueOf ( protocol ) ; protSet . add ( prot ) ; } return this ; } public Whitelist removeProtocols ( String tag , String attribute , String ... removeProtocols ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[ReturnValsMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
preserveRelativeLinks = preserve ; return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ; MST[VoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[NegateConditionalsMutator]MSP[S]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
this . attributes . remove ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] } if( tag . equals ( lr_65 ) ) for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N]
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[rv.ROR1Mutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[InlineConstantMutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[rv.ROR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR4Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] } } return this ; }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; MST[ArgumentPropagationMutator]MSP[N] } if ( attrMap . containsKey ( attrKey ) ) {
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[InlineConstantMutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; MST[ArgumentPropagationMutator]MSP[S] currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR5Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N] ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; MST[NonVoidMethodCallMutator]MSP[N] } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[NegateConditionalsMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; MST[ArgumentPropagationMutator]MSP[N] } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ;
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[InlineConstantMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_6 , lr_25 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR1Mutator]MSP[N]
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[rv.ROR4Mutator]MSP[N] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR6Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
protSet = attrMap . get ( attrKey ) ; MST[ArgumentPropagationMutator]MSP[S] } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
Validate . notEmpty ( attribute ) ; Validate . notEmpty ( value ) ; TagName tagName = TagName . valueOf ( tag ) ; tagNames . add ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( protocol ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[S] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR2Mutator]MSP[S]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N]
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR3Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N]
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ; MST[NonVoidMethodCallMutator]MSP[S]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[NegateConditionalsMutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; MST[NonVoidMethodCallMutator]MSP[N] }
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[NonVoidMethodCallMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[VoidMethodCallMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
attrMap . put ( attrKey , attrVal ) ; MST[NonVoidMethodCallMutator]MSP[N] enforcedAttributes . put ( tagName , attrMap ) ; } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[rv.ROR5Mutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; MST[NonVoidMethodCallMutator]MSP[S] } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[rv.ROR3Mutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[experimental.NakedReceiverMutator]MSP[N]
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[rv.ROR5Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR4Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[rv.ROR3Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N]
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[rv.ROR4Mutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR3Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
Validate . notEmpty ( attribute ) ; Validate . notNull ( removeProtocols ) ; TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[S] AttributeKey attr = AttributeKey . valueOf ( attribute ) ; Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[InlineConstantMutator]MSP[N]
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI2Mutator]MSP[S] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
if ( this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; MST[NonVoidMethodCallMutator]MSP[N] }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; MST[ArgumentPropagationMutator]MSP[N] protocols . remove ( tagName ) ; } } return this ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[experimental.NakedReceiverMutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[RemoveConditionalMutator_ORDER_ELSE]MSP[S]
attrMap = this . protocols . get ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[S] } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) {
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[ReturnValsMutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
Protocol prot = Protocol . valueOf ( protocol ) ; protSet . add ( prot ) ; } return this ; MST[ReturnValsMutator]MSP[N] } public Whitelist removeProtocols ( String tag , String attribute , String ... removeProtocols ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N] . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 )
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR1Mutator]MSP[N]
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; MST[NonVoidMethodCallMutator]MSP[S] if( currentSet . isEmpty () )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; MST[NonVoidMethodCallMutator]MSP[S] if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR5Mutator]MSP[S]
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[experimental.NakedReceiverMutator]MSP[S] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; MST[NullReturnValsMutator]MSP[N] } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { Validate . notEmpty ( tag ) ;
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_32 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR2Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[rv.ROR1Mutator]MSP[S] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR3Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[N]
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
Validate . notEmpty ( attribute ) ; Validate . notEmpty ( value ) ; TagName tagName = TagName . valueOf ( tag ) ; tagNames . add ( tagName ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
Protocol prot = Protocol . valueOf ( protocol ) ; protSet . add ( prot ) ; } return this ; MST[NullReturnValsMutator]MSP[N] } public Whitelist removeProtocols ( String tag , String attribute , String ... removeProtocols ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[NonVoidMethodCallMutator]MSP[N] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
protocols . remove ( tagName ) ; } return this ; MST[NullReturnValsMutator]MSP[S] } protected boolean isSafeTag ( String tag ) { return tagNames . contains ( TagName . valueOf ( tag ) ) ; } protected boolean isSafeAttribute ( String tagName , Element el , Attribute attr ) {
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ; MST[ArgumentPropagationMutator]MSP[S]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[ReturnValsMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR3Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[rv.ROR2Mutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) this . attributes . remove ( name ) ; } return this ; } public Whitelist addEnforcedAttribute ( String tag , String attribute , String value ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[N] } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_32 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[VoidMethodCallMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR1Mutator]MSP[N]
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[rv.ROR2Mutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR1Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) MST[experimental.NakedReceiverMutator]MSP[N] ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 )
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[NegateConditionalsMutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
tagNames . add ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[S] Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[NegateConditionalsMutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[rv.ROR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
if ( this . attributes . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
preserveRelativeLinks = preserve ; MST[rv.UOI3Mutator]MSP[S] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[rv.ROR5Mutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
if ( this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
if ( this . attributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_32 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[rv.ROR3Mutator]MSP[S] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
Validate . notEmpty ( attribute ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notEmpty ( value ) ; TagName tagName = TagName . valueOf ( tag ) ; tagNames . add ( tagName ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; MST[VoidMethodCallMutator]MSP[N] Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ;
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; MST[NonVoidMethodCallMutator]MSP[S] Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ;
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[NonVoidMethodCallMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; MST[NonVoidMethodCallMutator]MSP[N] }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) MST[experimental.NakedReceiverMutator]MSP[S] ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; MST[ConstructorCallMutator]MSP[N] } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR3Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[S] if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; MST[NonVoidMethodCallMutator]MSP[S]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
Protocol prot = Protocol . valueOf ( protocol ) ; MST[NonVoidMethodCallMutator]MSP[N] protSet . add ( prot ) ; } return this ; } public Whitelist removeProtocols ( String tag , String attribute , String ... removeProtocols ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[InlineConstantMutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; MST[ConstructorCallMutator]MSP[S] for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
preserveRelativeLinks = preserve ; return this ; MST[ReturnValsMutator]MSP[S] } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[NullReturnValsMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI2Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
Validate . notEmpty ( attribute ) ; Validate . notEmpty ( value ) ; MST[VoidMethodCallMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ; tagNames . add ( tagName ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( tagName ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; MST[VoidMethodCallMutator]MSP[N] attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.UOI2Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR6Mutator]MSP[S]
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[RemoveConditionalMutator_ORDER_IF]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; MST[VoidMethodCallMutator]MSP[N] attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
if ( this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; MST[ArgumentPropagationMutator]MSP[S] attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI3Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[NonVoidMethodCallMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; MST[ReturnValsMutator]MSP[N] } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
Validate . notEmpty ( attribute ) ; Validate . notEmpty ( value ) ; TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[N] tagNames . add ( tagName ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; MST[VoidMethodCallMutator]MSP[N] Validate . isTrue ( attributes . length > 0 , lr_64 ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR2Mutator]MSP[N]
Validate . notEmpty ( attribute ) ; Validate . notNull ( removeProtocols ) ; TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attr = AttributeKey . valueOf ( attribute ) ; MST[NonVoidMethodCallMutator]MSP[S] Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( enforcedAttributes . containsKey ( tagName ) ) { enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) this . attributes . remove ( name ) ; } return this ; MST[NullReturnValsMutator]MSP[S] } public Whitelist addEnforcedAttribute ( String tag , String attribute , String value ) { Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR5Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; MST[ReturnValsMutator]MSP[N] } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[ConstructorCallMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[rv.ROR5Mutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N]
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; MST[NonVoidMethodCallMutator]MSP[N] Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) {
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[experimental.NakedReceiverMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; MST[ReturnValsMutator]MSP[S] }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; MST[NullReturnValsMutator]MSP[S] } public Whitelist preserveRelativeLinks ( boolean preserve ) {
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; MST[NullReturnValsMutator]MSP[S] }
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
preserveRelativeLinks = preserve ; MST[rv.ABSMutator]MSP[N] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[RemoveConditionalMutator_ORDER_IF]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
preserveRelativeLinks = preserve ; MST[rv.UOI2Mutator]MSP[N] return this ; } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[rv.ROR1Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR5Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[ConstructorCallMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) MST[NonVoidMethodCallMutator]MSP[N] ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; MST[ConstructorCallMutator]MSP[N] attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { Validate . notEmpty ( protocol ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR4Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; MST[VoidMethodCallMutator]MSP[N] Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; TagName tagName = TagName . valueOf ( tag ) ;
for ( String protocol : removeProtocols ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
Map < AttributeKey , Set < Protocol > > tagProtocols = protocols . get ( tagName ) ; MST[ArgumentPropagationMutator]MSP[S] Validate . isTrue ( tagProtocols . containsKey ( attr ) , lr_66 ) ; Set < Protocol > attrProtocols = tagProtocols . get ( attr ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[NonVoidMethodCallMutator]MSP[S] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) MST[NonVoidMethodCallMutator]MSP[N] ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
attrMap = this . protocols . get ( tagName ) ; } else { attrMap = new HashMap <> () ; this . protocols . put ( tagName , attrMap ) ; } if ( attrMap . containsKey ( attrKey ) ) { MST[rv.ROR4Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[rv.ROR3Mutator]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI4Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR2Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) enforcedAttributes . remove ( tagName ) ; } return this ; MST[ReturnValsMutator]MSP[S] } public Whitelist preserveRelativeLinks ( boolean preserve ) {
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR6Mutator]MSP[N] . addTags ( lr_32 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
preserveRelativeLinks = preserve ; return this ; MST[NullReturnValsMutator]MSP[S] } public Whitelist addProtocols ( String tag , String attribute , String ... protocols ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ; Validate . notNull ( protocols ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; MST[VoidMethodCallMutator]MSP[N] for( String tag : tags ) { Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR2Mutator]MSP[S]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[ConstructorCallMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[rv.ROR3Mutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; MST[ArgumentPropagationMutator]MSP[N] } return this ; } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
for ( String protocol : removeProtocols ) { MST[rv.UOI4Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[experimental.NakedReceiverMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
this . attributes . remove ( tagName ) ; MST[ArgumentPropagationMutator]MSP[N] } if( tag . equals ( lr_65 ) ) for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR6Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
for ( String protocol : removeProtocols ) { MST[rv.ABSMutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; MST[NonVoidMethodCallMutator]MSP[S] currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
Validate . notEmpty ( attribute ) ; Validate . notNull ( removeProtocols ) ; MST[VoidMethodCallMutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attr = AttributeKey . valueOf ( attribute ) ; Validate . isTrue ( protocols . containsKey ( tagName ) , lr_66 ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; MST[ArgumentPropagationMutator]MSP[N] } } return this ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
if ( this . attributes . containsKey ( tagName ) ) { MST[rv.ROR4Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[InlineConstantMutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR2Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) { MST[rv.ROR3Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[NullReturnValsMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N] ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { Validate . notEmpty ( tagName ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR3Mutator]MSP[S]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[rv.CRCR1Mutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[experimental.NakedReceiverMutator]MSP[N] . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.ROR1Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR1Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[NonVoidMethodCallMutator]MSP[N]
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () MST[rv.CRCR3Mutator]MSP[N] . addTags ( lr_32 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[experimental.NakedReceiverMutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR5Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
this . attributes . remove ( tagName ) ; } if( tag . equals ( lr_65 ) ) MST[NonVoidMethodCallMutator]MSP[N] for( TagName name : this . attributes . keySet () ) { Set < AttributeKey > currentSet = this . attributes . get ( name ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR4Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
attrMap . put ( attrKey , attrVal ) ; enforcedAttributes . put ( tagName , attrMap ) ; } return this ; MST[ReturnValsMutator]MSP[N] } public Whitelist removeEnforcedAttribute ( String tag , String attribute ) { Validate . notEmpty ( tag ) ; Validate . notEmpty ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; MST[NonVoidMethodCallMutator]MSP[N] } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { Validate . notEmpty ( tag ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[rv.CRCR1Mutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
return this ; MST[NullReturnValsMutator]MSP[N] } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( tag ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ; Map < AttributeKey , Set < Protocol > > attrMap ; Set < Protocol > protSet ; if ( this . protocols . containsKey ( tagName ) ) {
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR2Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
AttributeValue attrVal = AttributeValue . valueOf ( value ) ; if ( enforcedAttributes . containsKey ( tagName ) ) { MST[NegateConditionalsMutator]MSP[N] enforcedAttributes . get ( tagName ) . put ( attrKey , attrVal ) ; } else { Map < AttributeKey , AttributeValue > attrMap = new HashMap <> () ;
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR2Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[InlineConstantMutator]MSP[S]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR4Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI2Mutator]MSP[N] Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
for ( String protocol : removeProtocols ) { MST[rv.UOI2Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[ReturnValsMutator]MSP[N] . addTags (
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
if ( this . attributes . containsKey ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . addAll ( attributeSet ) ; } else { this . attributes . put ( tagName , attributeSet ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR6Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags ( MST[NonVoidMethodCallMutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . remove ( tagName ) ) { MST[rv.ROR1Mutator]MSP[N] attributes . remove ( tagName ) ; enforcedAttributes . remove ( tagName ) ; protocols . remove ( tagName ) ; } } return this ; }
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () ) MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[InlineConstantMutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
. addProtocols ( lr_18 , lr_9 , lr_27 , lr_28 ) ; } public Whitelist addTags ( String ... tags ) { Validate . notNull ( tags ) ; for ( String tagName : tags ) { MST[rv.ABSMutator]MSP[N] Validate . notEmpty ( tagName ) ;
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[rv.CRCR6Mutator]MSP[N] TagName tagName = TagName . valueOf ( tag ) ;
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR2Mutator]MSP[N]
TagName tagName = TagName . valueOf ( tag ) ; MST[NonVoidMethodCallMutator]MSP[S] Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR1Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR6Mutator]MSP[N]
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
TagName tagName = TagName . valueOf ( tag ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; MST[NonVoidMethodCallMutator]MSP[S] }
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[rv.ROR5Mutator]MSP[S] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
Map < AttributeKey , AttributeValue > attrMap = enforcedAttributes . get ( tagName ) ; attrMap . remove ( attrKey ) ; if( attrMap . isEmpty () ) MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] enforcedAttributes . remove ( tagName ) ; } return this ; } public Whitelist preserveRelativeLinks ( boolean preserve ) {
tagNames . add ( TagName . valueOf ( tagName ) ) ; } return this ; } public Whitelist removeTags ( String ... tags ) { Validate . notNull ( tags ) ; for( String tag : tags ) { MST[rv.UOI3Mutator]MSP[S] Validate . notEmpty ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 )
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[NonVoidMethodCallMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) MST[rv.CRCR5Mutator]MSP[N] . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 , lr_37 ) MST[InlineConstantMutator]MSP[N] . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 ) MST[rv.CRCR3Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
if( tagNames . contains ( tagName ) && this . attributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] Set < AttributeKey > currentSet = this . attributes . get ( tagName ) ; currentSet . removeAll ( attributeSet ) ; if( currentSet . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR3Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) MST[rv.CRCR3Mutator]MSP[N] . addAttributes ( lr_49 , lr_58 , lr_38 )
public Whitelist addAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; MST[VoidMethodCallMutator]MSP[N] Validate . isTrue ( attributes . length > 0 , lr_64 ) ; TagName tagName = TagName . valueOf ( tag ) ;
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
TagName tagName = TagName . valueOf ( tag ) ; if( tagNames . contains ( tagName ) && enforcedAttributes . containsKey ( tagName ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] AttributeKey attrKey = AttributeKey . valueOf ( attribute ) ;
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
return this ; } public Whitelist removeAttributes ( String tag , String ... attributes ) { Validate . notEmpty ( tag ) ; Validate . notNull ( attributes ) ; Validate . isTrue ( attributes . length > 0 , lr_64 ) ; MST[ConditionalsBoundaryMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N] . addAttributes ( lr_41 , lr_20 , lr_38 )
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR1Mutator]MSP[N]
protSet = attrMap . get ( attrKey ) ; } else { protSet = new HashSet <> () ; attrMap . put ( attrKey , protSet ) ; } for ( String protocol : protocols ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( protocol ) ;
. addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addEnforcedAttribute ( lr_6 , lr_30 , lr_31 ) ; } public static Whitelist basicWithImages () { return basic () . addTags ( lr_32 ) MST[rv.CRCR3Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR1Mutator]MSP[N] . addTags (
. addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 ) MST[rv.CRCR3Mutator]MSP[N] . addProtocols ( lr_9 , lr_9 , lr_27 , lr_28 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () . addTags (
tagNames . add ( tagName ) ; Set < AttributeKey > attributeSet = new HashSet <> () ; for ( String key : attributes ) { MST[rv.UOI1Mutator]MSP[N] Validate . notEmpty ( key ) ; attributeSet . add ( AttributeKey . valueOf ( key ) ) ; }
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR5Mutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR6Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR2Mutator]MSP[N]
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () MST[rv.CRCR4Mutator]MSP[N] . addTags (
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addAttributes ( lr_15 , lr_56 , lr_57 ) . addAttributes ( lr_18 , lr_9 ) . addAttributes ( lr_49 , lr_58 , lr_38 ) MST[rv.CRCR6Mutator]MSP[N]
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[rv.CRCR2Mutator]MSP[N] . addTags (
for ( String protocol : removeProtocols ) { MST[rv.UOI1Mutator]MSP[S] Validate . notEmpty ( protocol ) ; attrProtocols . remove ( Protocol . valueOf ( protocol ) ) ; } if ( attrProtocols . isEmpty () ) { tagProtocols . remove ( attr ) ; if ( tagProtocols . isEmpty () )
public static Whitelist none () { return new Whitelist () ; } public static Whitelist simpleText () { return new Whitelist () . addTags ( lr_1 , lr_2 , lr_3 , lr_4 , lr_5 ) ; } public static Whitelist basic () { return new Whitelist () MST[InlineConstantMutator]MSP[N] . addTags (
. addAttributes ( lr_51 , lr_59 , lr_60 , lr_61 , lr_62 , lr_38 ) . addAttributes ( MST[InlineConstantMutator]MSP[N] lr_53 , lr_59 , lr_60 , lr_61 , lr_62 , lr_63 , lr_38 ) . addAttributes ( lr_24 , lr_57 )
. addAttributes ( lr_32 , lr_33 , lr_34 , lr_35 , lr_36 , lr_37 , lr_38 ) . addProtocols ( lr_32 , lr_36 , lr_27 , lr_28 ) ; } public static Whitelist relaxed () { return new Whitelist () . addTags ( MST[InlineConstantMutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR4Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 , lr_37 ) . addAttributes ( lr_7 , lr_9 ) . addAttributes ( lr_40 , lr_20 , lr_38 ) . addAttributes ( lr_41 , lr_20 , lr_38 ) MST[rv.CRCR5Mutator]MSP[N]
. addAttributes ( lr_6 , lr_25 ) . addAttributes ( lr_7 , lr_9 ) MST[rv.CRCR5Mutator]MSP[N] . addAttributes ( lr_18 , lr_9 ) . addProtocols ( lr_6 , lr_25 , lr_26 , lr_27 , lr_28 , lr_29 ) . addProtocols ( lr_7 , lr_9 , lr_27 , lr_28 )
