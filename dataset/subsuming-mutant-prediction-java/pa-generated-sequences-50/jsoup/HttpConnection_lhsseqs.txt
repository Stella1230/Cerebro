public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[ConditionalsBoundaryMutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[rv.ABSMutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; MST[ReturnValsMutator]MSP[] } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ;
return this ; MST[NullReturnValsMutator]MSP[] } public String requestBody () { return body ; } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[PrimitiveReturnsMutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[rv.ABSMutator]MSP[] }
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; MST[BooleanTrueReturnValsMutator]MSP[] } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ;
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[experimental.MemberVariableMutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
return this ; MST[NullReturnValsMutator]MSP[] } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; } public Request data ( Connection . KeyVal keyval ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.UOI1Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; MST[ReturnValsMutator]MSP[] } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[rv.UOI4Mutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[rv.ABSMutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; return this ; MST[ReturnValsMutator]MSP[] } public Collection < Connection . KeyVal > data () { return data ; } public Connection . Request requestBody ( String body ) { this . body = body ;
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[rv.UOI4Mutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[rv.UOI3Mutator]MSP[]
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[rv.UOI2Mutator]MSP[] }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ROR2Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return this ; MST[ReturnValsMutator]MSP[] } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; } public Request data ( Connection . KeyVal keyval ) {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[rv.UOI1Mutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
return ( T ) this ; } public Map < String , String > cookies () { return cookies ; } public Proxy proxy () { return proxy ; MST[NullReturnValsMutator]MSP[] } public Request proxy ( Proxy proxy ) { this . proxy = proxy ; return this ; }
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; MST[NullReturnValsMutator]MSP[] } public Request data ( Connection . KeyVal keyval ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.CRCR3Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return ( T ) this ; } public Map < String , String > cookies () { return cookies ; } public Proxy proxy () { return proxy ; MST[ReturnValsMutator]MSP[] } public Request proxy ( Proxy proxy ) { this . proxy = proxy ; return this ; }
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[rv.UOI2Mutator]MSP[]
return this ; } public boolean ignoreContentType () { return ignoreContentType ; MST[BooleanTrueReturnValsMutator]MSP[] } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; } public Request data ( Connection . KeyVal keyval ) {
return this ; } public String requestBody () { return body ; } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; MST[ReturnValsMutator]MSP[] }
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; MST[ReturnValsMutator]MSP[] } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ;
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; return this ; } public Collection < Connection . KeyVal > data () { return data ; MST[EmptyObjectReturnValsMutator]MSP[] } public Connection . Request requestBody ( String body ) { this . body = body ;
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; return this ; } public Collection < Connection . KeyVal > data () { return data ; } public Connection . Request requestBody ( String body ) { this . body = body ; MST[experimental.MemberVariableMutator]MSP[]
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.UOI4Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[rv.UOI2Mutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[VoidMethodCallMutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[experimental.MemberVariableMutator]MSP[]
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[PrimitiveReturnsMutator]MSP[] }
return this ; } public boolean ignoreContentType () { return ignoreContentType ; MST[ReturnValsMutator]MSP[] } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; } public Request data ( Connection . KeyVal keyval ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[rv.UOI1Mutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public String postDataCharset () { return postDataCharset ; MST[EmptyObjectReturnValsMutator]MSP[] } static Response execute ( Connection . Request req ) throws IOException { return execute ( req , null ) ; } static Response execute ( Connection . Request req , Response previousResponse ) throws IOException {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; MST[ReturnValsMutator]MSP[] } public Request data ( Connection . KeyVal keyval ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; MST[NullReturnValsMutator]MSP[] } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ;
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[rv.ABSMutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.CRCR6Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[rv.UOI3Mutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ROR4Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; MST[NonVoidMethodCallMutator]MSP[] return this ; } public Collection < Connection . KeyVal > data () { return data ; } public Connection . Request requestBody ( String body ) { this . body = body ;
return this ; } public String requestBody () { return body ; } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; MST[NullReturnValsMutator]MSP[] }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[RemoveConditionalMutator_ORDER_IF]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[NegateConditionalsMutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[ReturnValsMutator]MSP[] }
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; return this ; MST[NullReturnValsMutator]MSP[] } public Collection < Connection . KeyVal > data () { return data ; } public Connection . Request requestBody ( String body ) { this . body = body ;
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[InlineConstantMutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public String postDataCharset () { return postDataCharset ; MST[ReturnValsMutator]MSP[] } static Response execute ( Connection . Request req ) throws IOException { return execute ( req , null ) ; } static Response execute ( Connection . Request req , Response previousResponse ) throws IOException {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[ReturnValsMutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
return this ; } public String requestBody () { return body ; MST[ReturnValsMutator]MSP[] } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; }
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[rv.UOI1Mutator]MSP[] }
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[rv.UOI3Mutator]MSP[] }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ROR1Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; MST[NullReturnValsMutator]MSP[] } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ROR5Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ROR3Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[rv.UOI1Mutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.UOI2Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
Validate . notNull ( keyval , lr_30 ) ; MST[VoidMethodCallMutator]MSP[] data . add ( keyval ) ; return this ; } public Collection < Connection . KeyVal > data () { return data ; } public Connection . Request requestBody ( String body ) { this . body = body ;
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[rv.UOI3Mutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.CRCR4Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.ABSMutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; MST[BooleanFalseReturnValsMutator]MSP[] } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ;
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.CRCR5Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[rv.UOI4Mutator]MSP[]
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[rv.UOI4Mutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; MST[rv.UOI2Mutator]MSP[] return this ; } public Request data ( Connection . KeyVal keyval ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.UOI3Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
Validate . notNull ( keyval , lr_30 ) ; data . add ( keyval ) ; return this ; } public Collection < Connection . KeyVal > data () { return data ; MST[ReturnValsMutator]MSP[] } public Connection . Request requestBody ( String body ) { this . body = body ;
return this ; } public String requestBody () { return body ; MST[EmptyObjectReturnValsMutator]MSP[] } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[rv.UOI2Mutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return this ; MST[ReturnValsMutator]MSP[] } public String requestBody () { return body ; } public Request parser ( Parser parser ) { this . parser = parser ; parserDefined = true ; return this ; } public Parser parser () { return parser ; }
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; MST[rv.UOI3Mutator]MSP[] } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; timeoutMilliseconds = millis ; MST[experimental.MemberVariableMutator]MSP[] return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
public Request timeout ( int millis ) { Validate . isTrue ( millis >= 0 , lr_28 ) ; MST[rv.CRCR2Mutator]MSP[] timeoutMilliseconds = millis ; return this ; } public int maxBodySize () { return maxBodySizeBytes ; } public Connection . Request maxBodySize ( int bytes ) {
return this ; } public boolean ignoreContentType () { return ignoreContentType ; MST[BooleanFalseReturnValsMutator]MSP[] } public Connection . Request ignoreContentType ( boolean ignoreContentType ) { this . ignoreContentType = ignoreContentType ; return this ; } public Request data ( Connection . KeyVal keyval ) {
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[rv.ABSMutator]MSP[]
public Request proxy ( String host , int port ) { this . proxy = new Proxy ( Proxy . Type . HTTP , InetSocketAddress . createUnresolved ( host , port ) ) ; return this ; } public int timeout () { return timeoutMilliseconds ; MST[rv.UOI4Mutator]MSP[] }
public boolean ignoreHttpErrors () { return ignoreHttpErrors ; } public SSLSocketFactory sslSocketFactory () { return sslSocketFactory ; } public void sslSocketFactory ( SSLSocketFactory sslSocketFactory ) { this . sslSocketFactory = sslSocketFactory ; } public Connection . Request ignoreHttpErrors ( boolean ignoreHttpErrors ) { this . ignoreHttpErrors = ignoreHttpErrors ; MST[rv.UOI1Mutator]MSP[]
