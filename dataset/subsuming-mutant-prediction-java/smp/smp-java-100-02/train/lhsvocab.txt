)	986365
(	978214
;	845511
.	557249
{	540640
}	524310
,	382182
final	339352
=	335090
()	316124
return	260374
vr_1	218910
if	217034
public	172238
int	165599
<	141048
vr_2	139582
==	127928
>	126079
0	119081
]	113831
[	113831
vr_3	109028
vr_4	105553
+	105544
null	93089
String	92877
1	92215
new	87302
tp_1	82050
vr_5	81952
@Override	81257
vr_6	74510
vt_1	71317
vr_7	71165
vr_13	68939
boolean	68749
length	66703
vl_1	65207
vr_8	64479
?	63744
vr_9	63227
-	61938
static	61313
&&	61219
vr_11	60612
vr_10	58421
vl_2	57019
:	55870
vr_12	53387
fn_1	53090
vr_17	50724
fn_2	49129
false	46993
!=	46588
fn_3	45618
vr_14	45453
vr_18	44882
vr_22	44662
void	44640
else	44639
[]	43480
vr_15	41434
vr_16	39897
++	39446
throw	38392
vr_19	38350
this	37910
||	37720
vr_21	37223
vr_23	36265
append	35518
vr_20	34840
size	33865
vr_26	33790
&	33447
throws	33070
fn_4	33054
vl_3	32454
vr_24	32118
IOException	31494
true	30682
for	30515
2	30374
tp_2	30044
fn_5	28797
vr_25	28218
private	27265
!	27216
byte	26908
long	25517
Object	25162
vl_4	24747
vl_6	24062
fn_6	24058
vt_2	22495
array	22091
lr_1	21769
>=	21737
equals	20905
fn_7	20400
object	20304
vl_5	18580
case	18311
iterator	18241
<<	17823
char	17717
vr_27	17598
vr_28	17519
vr_33	17463
break;	16618
vr_35	16366
vr_29	15912
super	15497
vr_31	15193
vr_30	15140
while	15026
charAt	14884
vr_44	14834
vr_34	14342
0xff	14342
add	14239
fn_8	14035
lr_2	13832
get	13794
vr_32	13673
+=	13612
vr_46	13493
out	13477
vr_38	13399
>>>	12917
toString	12895
fn_10	12840
System	12533
fn_12	12482
type	12468
<=	12352
vl_7	12320
args	12265
vr_36	12256
fn_9	12236
|	11914
3	11672
>>	11667
remove	11584
hasNext	11521
vr_43	11501
4	11501
instanceof	11167
extends	11154
contains	10897
<>	10785
protected	10487
8	10388
vr_42	10376
vr_45	10188
MST[NonVoidMethodCallMutator]MSP[]	10118
Collection	9948
vl_9	9749
fn_11	9734
tp_3	9684
fn_13	9677
lr_3	9641
--	9533
StringBuilder	9402
indexOf	9231
IllegalArgumentException	9217
fn_15	9147
fn_17	9103
vr_57	8982
Integer	8953
try	8646
vl_8	8645
vr_39	8644
vr_37	8623
*	8516
vr_47	8496
16	8299
lr_4	8244
/	8035
Iterator	7732
List	7587
isEmpty	7574
fn_18	7267
catch	7260
vl_10	7246
fn_16	7179
vr_41	7164
vr_40	7158
vr_56	7100
vr_71	6717
vr_48	6691
lr_6	6580
vr_49	6573
lr_5	6567
fn_14	6408
MST[rv.ABSMutator]MSP[]	6395
MST[rv.UOI3Mutator]MSP[]	6366
MST[rv.UOI1Mutator]MSP[]	6366
MST[rv.UOI4Mutator]MSP[]	6170
'	6162
lr_9	6084
MST[rv.UOI2Mutator]MSP[]	5993
fn_19	5862
MST[rv.CRCR5Mutator]MSP[]	5821
vr_50	5815
MST[rv.CRCR6Mutator]MSP[]	5792
MST[InlineConstantMutator]MSP[]	5781
lr_7	5681
line	5679
MST[rv.CRCR3Mutator]MSP[]	5638
vl_12	5613
tp_4	5513
vr_52	5440
24	5401
tp_5	5351
Type	5257
vr_51	5237
vr_59	5212
vr_55	5178
vt_3	5163
vr_60	5127
(byte)(	5126
MST[NegateConditionalsMutator]MSP[]	4980
valueOf	4973
MST[rv.ROR5Mutator]MSP[]	4963
@SuppressWarnings	4904
Class	4875
println	4836
double	4777
list	4721
synchronized	4707
%	4705
vr_70	4660
MST[ReturnValsMutator]MSP[]	4590
vr_53	4482
vr_68	4457
fn_21	4374
vr_73	4364
fn_20	4353
clear	4317
^=	4317
switch	4238
lr_8	4183
MST[rv.CRCR1Mutator]MSP[]	4153
MST[RemoveConditionalMutator_EQUAL_IF]MSP[]	4029
MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[]	4017
vr_69	3945
MST[rv.CRCR4Mutator]MSP[]	3916
MST[rv.CRCR2Mutator]MSP[]	3841
vr_62	3657
^	3646
MST[rv.ROR1Mutator]MSP[]	3638
vl_11	3634
MST[rv.ROR4Mutator]MSP[]	3634
vr_54	3632
MST[rv.ROR2Mutator]MSP[]	3626
vr_61	3625
MST[rv.ROR3Mutator]MSP[]	3620
...	3610
return;	3548
vl_14	3509
fn_27	3460
vl_19	3445
fn_25	3435
fn_24	3429
0x3f	3422
vr_66	3401
vr_58	3369
(byte)	3366
fn_23	3357
vr_92	3216
default:	3193
lr_10	3184
vr_63	3167
toArray	3148
Long	3101
getClass	3086
float	3004
fn_26	2997
string	2965
fn_22	2885
ArrayList	2877
collection	2854
lr_11	2839
5	2782
lr_12	2767
fn_29	2725
'K'	2659
lr_27	2649
6	2614
fn_28	2578
|=	2559
LENGTH	2558
short	2500
lr_28	2367
-=	2352
vl_15	2324
'H'	2313
lr_13	2293
'S'	2293
ParseException	2270
vl_22	2249
32	2227
vr_67	2221
fn_41	2200
vr_76	2196
'.'	2178
0xFF	2150
vr_72	2148
lr_14	2143
vl_13	2125
vr_93	2115
vr_64	2083
@Deprecated	2057
vt_4	2044
vl_17	2028
7	2026
tp_6	2018
fn_37	1996
vr_75	1970
MST[NullReturnValsMutator]MSP[]	1923
MST[ConstructorCallMutator]MSP[]	1923
lr_15	1894
'A'	1844
fn_31	1819
if(	1809
fn_30	1794
MST[VoidMethodCallMutator]MSP[]	1758
lr_32	1755
fn_33	1749
MST[MathMutator]MSP[]	1737
lr_17	1732
lr_18	1731
vr_74	1692
<vt_1	1690
readLine	1689
vr_65	1664
400	1657
200	1657
vr_94	1656
builder	1656
500	1656
300	1656
continue;	1639
'0'	1633
vr_88	1632
vr_96	1629
'X'	1627
lr_20	1623
lr_38	1606
MST[experimental.NakedReceiverMutator]MSP[]	1591
exit	1571
lr_16	1562
vl_16	1553
error	1539
'E'	1528
fn_32	1525
Double	1518
'\r'	1512
vr_87	1508
fn_36	1494
vr_84	1483
Float	1479
vr_85	1461
main	1402
vr_86	1391
'\n'	1387
MST[ArgumentPropagationMutator]MSP[]	1386
fn_42	1371
vr_78	1368
for(	1364
0xffffffffL	1346
vl_20	1316
vr_95	1312
trim	1285
10	1273
&=	1236
lr_22	1226
lr_19	1220
fn_43	1215
fn_40	1208
31	1199
fn_35	1191
'Z'	1184
lr_36	1171
BufferedReader	1152
'J'	1151
Boolean	1150
'='	1145
1000	1133
MST[rv.AOR1Mutator]MSP[]	1123
fn_39	1121
MST[experimental.MemberVariableMutator]MSP[]	1113
lr_23	1107
lr_24	1099
pow	1097
MST[rv.AOR3Mutator]MSP[]	1097
MST[rv.AOR2Mutator]MSP[]	1097
MST[rv.AOR4Mutator]MSP[]	1096
vr_82	1094
equalsIgnoreCase	1087
vr_77	1085
MST[rv.AOD2Mutator]MSP[]	1084
MST[rv.AOD1Mutator]MSP[]	1075
Builder	1074
Enumeration	1072
do	1067
vr_100	1058
vl_18	1053
);	1053
vr_89	1037
':'	1030
vr_97	1027
vr_80	1027
vr_109	1020
14	1017
lr_25	1012
vr_83	1005
'>'	985
::	978
100	971
abs	961
MST[ConditionalsBoundaryMutator]MSP[]	958
'+'	950
MST[RemoveConditionalMutator_ORDER_ELSE]MSP[]	948
vr_79	943
'-'	939
MST[RemoveConditionalMutator_ORDER_IF]MSP[]	929
exp	928
vr_107	927
y1	926
1.0	920
lr_29	918
Array	913
0xffff	913
9	910
fn_34	909
lr_21	904
fn_38	903
MST[BooleanTrueReturnValsMutator]MSP[]	902
'e'	898
'9'	897
tp_8	894
0xfffffff	892
fn_44	887
40	886
600	884
lr_37	873
'F'	871
48	868
0x3	868
37	858
21	855
~	851
printf	851
lr_41	845
tp_7	834
vr_102	823
lr_42	822
'R'	821
'/'	818
0x100	815
/=	810
Properties	807
properties	803
'a'	801
vr_108	787
vr_101	785
time	771
fn_46	771
lr_26	761
fn_45	760
56	755
MST[EmptyObjectReturnValsMutator]MSP[]	751
22	750
'W'	750
','	737
15	736
lr_40	734
'T'	731
'G'	724
'N'	722
vr_91	716
'M'	714
vr_138	713
lr_59	689
nextElement	688
lr_62	679
vr_132	669
0x7	668
256	661
MST[PrimitiveReturnsMutator]MSP[]	658
vr_90	647
getType	630
Util	628
lr_51	626
0xf	626
0x3c	626
0x30	626
vr_114	624
'I'	618
'z'	616
'*'	616
vr_81	611
'%'	609
20	608
lr_34	585
'P'	585
while(	580
lr_35	580
lr_60	579
lr_57	579
27	574
vr_156	567
tp_9	565
'n'	564
'C'	560
lr_33	555
'?'	548
'@'	547
MST[BooleanFalseReturnValsMutator]MSP[]	546
(;	544
'7'	541
lr_61	537
lr_39	525
vr_105	521
Short	517
'Y'	517
getProperty	513
26	512
vr_103	510
fn_47	503
enumeration	500
(int)	497
lr_52	496
0x55555555	495
vt_5	491
25	491
lr_53	490
PrintWriter	487
lr_55	485
fn_52	485
'm'	483
18	482
lb_1;	480
'L'	478
lr_56	477
lr_45	477
lr_31	476
28	472
lr_49	471
vr_98	470
fn_49	467
lr_47	465
vl_21	464
lr_43	463
lr_30	459
12	458
vr_148	457
lr_44	455
0x1	453
'u'	451
>>>=	447
fn_57	446
'U'	445
13	443
lr_50	442
lr_58	441
class	436
'<'	433
lr_46	432
128	430
finally	426
*=	424
switch(	423
Exception	423
fn_53	418
'l'	413
lb_1:	409
'O'	407
lr_48	403
17	402
'Q'	398
Enum	393
vl_23	377
'd'	377
'D'	376
0x80000000L	375
0x100000000L	375
Byte	374
1237	368
1231	368
'V'	368
lr_54	367
break	363
'f'	360
isDigit	359
'\t'	355
->	353
fn_56	351
tp_10	350
util	349
fn_62	347
'{'	343
fn_48	342
fn_50	341
'r'	338
'!'	333
getValues	332
<<=	331
'"'	329
0L	326
fn_63	325
fn_85	321
lr_63	318
0xff00ff	318
0x6	318
0x38	318
'~'	318
fn_61	313
getArgs	308
fn_70	308
0xffff0000	308
fn_54	305
lr_64	304
1L	303
MST[IncrementsMutator]MSP[]	300
MST[rv.OBBN1Mutator]MSP[]	297
MST[rv.OBBN2Mutator]MSP[]	295
MST[rv.OBBN3Mutator]MSP[]	293
getDescription	291
'#'	283
vr_149	281
SYSTEM	281
(short)(	277
fn_51	275
fn_81	271
vr_99	270
rewind	269
vr_110	267
lr_66	267
65.536	266
rename	264
exception	262
10000	260
vr_139	259
fn_78	259
0xff0000	256
0xff00	256
0xf0000000	256
0xcccc0000	256
stringBuilder	254
vr_143	253
vr_116	252
continue	252
lr_65	247
vr_112	245
vr_111	245
tp_18	239
fn_55	237
vr_151	235
SIZE	233
vr_124	228
vr_152	226
65535	225
60000	225
vr_113	224
0xf0f0f0f	220
(short)	217
vr_123	214
fn_68	213
fn_67	213
'B'	212
fn_79	204
0x10000	201
vt_6	200
vr_147	199
vl_24	196
lr_67	195
'}'	195
'\0'	195
'['	195
lr_68	194
vr_104	193
1000D	192
NULL	190
lr_129	187
lr_128	187
fn_72	184
fn_65	179
MST[experimental.RemoveIncrementsMutator]MSP[]	179
lr_133	178
'b'	177
tp_17	175
lr_69	173
fn_66	172
<tp_1	172
23	170
0xF8	168
lr_90	167
fn_59	167
<vt_2	166
propertyNames	163
0x33333333	162
'o'	162
'i'	162
ceil	160
vr_125	158
vr_122	156
vr_117	156
vr_115	155
fn_75	154
lr_80	150
assert	148
vr_118	147
tp_19	144
'\\'	144
fn_74	143
default	139
TYPE	139
lb_2;	135
lb_2:	135
vr_121	134
tp_16	134
lr_70	134
vr_154	132
65536L	127
'c'	124
0xC7	123
log	122
fn_69	122
1000L	122
fn_87	121
tp_12	120
vr_134	119
vr_133	119
vr_120	119
lr_89	119
vr_130	118
vt_8	117
vt_7	117
fn_86	117
vr_142	116
sqrt	116
TRUE	115
0.0F	115
vr_141	114
vr_135	114
0.0	114
fn_89	113
PROPERTIES	113
']'	113
vr_150	110
tp_11	110
fn_60	110
synchronized(	109
<tp_2	109
lr_85	108
LIST	107
fn_58	106
0x700	106
0x600	106
vr_155	105
fn_77	104
lr_130	103
lr_127	103
lr_126	103
lr_125	103
fn_88	103
lr_98	102
floor	102
19	102
vr_136	101
lr_104	100
512	100
vr_131	99
vr_106	99
SIGNED	96
(char)	96
tp_14	94
lr_135	94
lr_134	94
lr_132	94
lr_131	94
's'	94
'\f'	94
<vt_3	93
255	93
vr_145	92
vr_129	91
fn_84	88
0xffffffff	88
vr_144	87
EXCEPTION	86
vr_146	85
11	85
lr_136	84
vr_153	83
lr_105	83
vr_127	79
lr_117	79
lr_116	79
lr_115	79
vr_126	78
compareToIgnoreCase	78
FALSE	77
vr_128	76
lr_71	76
80	76
SHORT	75
0x3F	75
APPEND	74
lr_74	72
lr_73	72
lr_72	72
fn_71	71
<vl_3	71
fn_80	70
vl_25	69
vr_119	68
vr_157	66
lr_110	65
lr_109	65
lr_108	65
lr_107	65
'w'	65
'x'	64
include	63
'|'	63
lr_114	62
lr_124	59
lr_123	59
lr_122	59
lr_121	59
lr_120	59
lr_119	59
lr_118	59
getWidth	58
vr_140	57
lr_113	56
lr_112	56
lr_111	56
700	56
fn_73	55
MST[experimental.SwitchMutator]MSP[]	55
lr_88	54
lr_87	54
lr_86	54
lr_84	54
MST[experimental.RemoveSwitchMutator_1]MSP[]	54
't'	54
'\u00C7'	54
tp_13	53
Main	53
tp_23	52
lr_95	52
lr_94	52
lr_93	52
lr_92	52
lr_91	52
lr_83	52
lr_82	52
fn_90	52
MST[experimental.RemoveSwitchMutator_0]MSP[]	52
0.0f	52
tp_20	51
'\u00D1'	50
lr_81	49
lr_79	49
lr_78	49
1024	49
vl_26	48
0xF0	48
';'	48
lr_97	47
lr_96	47
0x0F	46
0.0D	46
fn_64	45
lr_77	44
lr_76	44
lr_75	44
fn_76	44
'\''	44
setWidth	42
0d	42
MST[experimental.RemoveSwitchMutator_2]MSP[]	41
0.0d	40
0f	39
fn_83	37
fn_82	37
ERROR	37
8203	36
173	36
160	36
union	34
TypeHandler	34
62	32
16.51	32
0x4C434C00	32
0x01	32
register	30
lr_99	30
lr_103	30
lr_102	30
lr_101	30
lr_100	30
vl_32	28
tp_15	27
lr_106	27
60	27
64	26
vr_137	25
sizeOf	24
tp_21	20
MST[experimental.BigIntegerMutator]MSP[]	20
vr_159	19
MST[InvertNegsMutator]MSP[]	19
5000	19
fn_100	18
<Object	18
vr_160	16
MST[experimental.RemoveSwitchMutator_3]MSP[]	16
;)	16
vl_39	15
1.2	15
0.9	15
vl_42	14
vl_36	14
vr_161	13
RENAME	13
'&'	13
vl_33	12
tp_22	12
getArgList	12
MST[experimental.RemoveSwitchMutator_4]MSP[]	11
50	11
vr_158	10
vl_56	10
3000	10
0x0FF	10
vl_46	9
vl_28	9
vl_27	9
tp_24	9
fn_132	9
30	9
%=	9
vr_167	8
vl_44	8
vl_35	8
fn_141	8
MST[experimental.RemoveSwitchMutator_5]MSP[]	8
vr_163	7
vl_65	7
vl_49	7
vl_41	7
vl_40	7
vl_31	7
vl_29	7
fn_142	7
fn_140	7
fn_139	7
4294967295L	7
vr_176	6
vr_175	6
vr_174	6
vr_173	6
fn_94	6
fn_93	6
vr_169	5
try{	5
fn_131	5
fn_124	5
fn_105	5
MST[experimental.RemoveSwitchMutator_6]MSP[]	5
Get	5
(char)(	5
vr_191	4
vr_181	4
vr_168	4
vl_72	4
vl_71	4
vl_38	4
ioException	4
fn_98	4
fn_165	4
fn_104	4
MST[experimental.RemoveSwitchMutator_7]MSP[]	4
MST[experimental.RemoveSwitchMutator_10]MSP[]	4
{}	3
vr_187	3
vr_180	3
vr_179	3
vr_170	3
vr_166	3
vr_162	3
vl_61	3
vl_50	3
vl_48	3
vl_45	3
vl_43	3
vl_34	3
override	3
fn_162	3
fn_161	3
fn_160	3
fn_159	3
fn_158	3
fn_133	3
fn_130	3
fn_129	3
MST[experimental.RemoveSwitchMutator_9]MSP[]	3
MST[experimental.RemoveSwitchMutator_8]MSP[]	3
MST[experimental.RemoveSwitchMutator_25]MSP[]	3
MST[experimental.RemoveSwitchMutator_24]MSP[]	3
MST[experimental.RemoveSwitchMutator_23]MSP[]	3
MST[experimental.RemoveSwitchMutator_22]MSP[]	3
MST[experimental.RemoveSwitchMutator_21]MSP[]	3
MST[experimental.RemoveSwitchMutator_20]MSP[]	3
MST[experimental.RemoveSwitchMutator_19]MSP[]	3
MST[experimental.RemoveSwitchMutator_18]MSP[]	3
MST[experimental.RemoveSwitchMutator_17]MSP[]	3
MST[experimental.RemoveSwitchMutator_15]MSP[]	3
MST[experimental.RemoveSwitchMutator_14]MSP[]	3
MST[experimental.RemoveSwitchMutator_13]MSP[]	3
MST[experimental.RemoveSwitchMutator_12]MSP[]	3
MST[experimental.RemoveSwitchMutator_11]MSP[]	3
33	3
2048	3
'y'	3
vr_193	2
vr_192	2
vr_190	2
vr_177	2
vr_172	2
vr_171	2
vr_165	2
vr_164	2
vl_74	2
vl_69	2
vl_68	2
vl_67	2
vl_60	2
vl_57	2
vl_55	2
vl_51	2
vl_47	2
vl_37	2
vl_30	2
fn_97	2
fn_96	2
fn_92	2
fn_91	2
fn_164	2
fn_163	2
fn_138	2
fn_137	2
fn_136	2
fn_135	2
fn_134	2
fn_126	2
fn_125	2
fn_123	2
fn_122	2
fn_101	2
MST[experimental.RemoveSwitchMutator_27]MSP[]	2
MST[experimental.RemoveSwitchMutator_26]MSP[]	2
MST[experimental.RemoveSwitchMutator_16]MSP[]	2
GET	2
6000	2
0xE0	2
0xC0	2
0x80	2
'`'	2
')'	2
'('	2
vr_189	1
vr_188	1
vr_186	1
vr_185	1
vr_184	1
vr_183	1
vr_182	1
vr_178	1
vl_73	1
vl_70	1
vl_66	1
vl_64	1
vl_63	1
vl_62	1
vl_59	1
vl_58	1
vl_54	1
vl_53	1
vl_52	1
fn_99	1
fn_95	1
fn_169	1
fn_168	1
fn_167	1
fn_166	1
fn_157	1
fn_156	1
fn_155	1
fn_154	1
fn_153	1
fn_152	1
fn_151	1
fn_150	1
fn_149	1
fn_148	1
fn_147	1
fn_146	1
fn_145	1
fn_144	1
fn_143	1
fn_128	1
fn_127	1
fn_121	1
fn_120	1
fn_119	1
fn_118	1
fn_117	1
fn_116	1
fn_115	1
fn_114	1
fn_113	1
fn_112	1
fn_111	1
fn_110	1
fn_109	1
fn_108	1
fn_107	1
fn_106	1
fn_103	1
fn_102	1
catch(	1
abort	1
MST[experimental.RemoveSwitchMutator_29]MSP[]	1
MST[experimental.RemoveSwitchMutator_28]MSP[]	1
LONG	1
Error	1
73	1
71	1
67	1
29	1
127	1
1000000	1
1.5	1
0xff51afd7ed558ccdL	1
0xc4ceb9fe1a85ec53L	1
0xc2b2ae35	1
0xFF00	1
0xEF	1
0xBF	1
0xBB	1
0x85ebca6b	1
0x500	1
0x400	1
0x300	1
0x200	1
0x0F0F0F0F	1
0x0000003F	1
(vt_2)	1
(vt_1)	1
(tp_14)	1
(long)	1
'p'	1
'k'	1
'h'	1
'^'	1
