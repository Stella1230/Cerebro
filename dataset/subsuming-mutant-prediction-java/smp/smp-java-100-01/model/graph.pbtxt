node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "../smp-java-100-00/train/lhs.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read/filenames/Size"
  input: "train_input_fn/parallel_read/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read/filenames/Greater"
  input: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read/filenames/Const"
  input: "^train_input_fn/parallel_read/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read/filenames"
  input: "train_input_fn/parallel_read/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/filenames/ToFloat"
  input: "train_input_fn/parallel_read/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/ToFloat"
  input: "train_input_fn/parallel_read/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read/TextLineReaderV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read/common_queue"
  input: "train_input_fn/parallel_read/ReaderReadV2"
  input: "train_input_fn/parallel_read/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "../smp-java-100-00/train/rhs.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read_1/filenames/Size"
  input: "train_input_fn/parallel_read_1/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read_1/filenames/Greater"
  input: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read_1/filenames/Const"
  input: "^train_input_fn/parallel_read_1/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read_1/filenames"
  input: "train_input_fn/parallel_read_1/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/filenames/ToFloat"
  input: "train_input_fn/parallel_read_1/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read_1/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/ToFloat"
  input: "train_input_fn/parallel_read_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read_1/TextLineReaderV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  input: "train_input_fn/parallel_read_1/ReaderReadV2"
  input: "train_input_fn/parallel_read_1/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 797314110
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/random_shuffle_queue"
  input: "train_input_fn/parallel_read/common_queue_Dequeue:1"
  input: "train_input_fn/parallel_read_1/common_queue_Dequeue:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit"
  op: "StringSplit"
  input: "train_input_fn/packed"
  input: "train_input_fn/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "skip_empty"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat"
  op: "ConcatV2"
  input: "train_input_fn/StringSplit:1"
  input: "train_input_fn/concat/values_1"
  input: "train_input_fn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size"
  op: "Size"
  input: "train_input_fn/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed_1"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit_1"
  op: "StringSplit"
  input: "train_input_fn/packed_1"
  input: "train_input_fn/Const_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "skip_empty"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_START"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1"
  op: "ConcatV2"
  input: "train_input_fn/concat_1/values_0"
  input: "train_input_fn/StringSplit_1:1"
  input: "train_input_fn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2"
  op: "ConcatV2"
  input: "train_input_fn/concat_1"
  input: "train_input_fn/concat_2/values_1"
  input: "train_input_fn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size_1"
  op: "Size"
  input: "train_input_fn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual"
  op: "GreaterEqual"
  input: "train_input_fn/Size"
  input: "train_input_fn/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\200\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual"
  op: "LessEqual"
  input: "train_input_fn/bucket_queue/LessEqual/x"
  input: "train_input_fn/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000\377\377\377\177"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less"
  op: "Less"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LogicalAnd"
  op: "LogicalAnd"
  input: "train_input_fn/bucket_queue/LessEqual"
  input: "train_input_fn/bucket_queue/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Where"
  op: "Where"
  input: "train_input_fn/bucket_queue/LogicalAnd"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Min"
  op: "Min"
  input: "train_input_fn/bucket_queue/Where"
  input: "train_input_fn/bucket_queue/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/ToInt32"
  op: "Cast"
  input: "train_input_fn/bucket_queue/Min"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5208
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Switch"
  op: "Switch"
  input: "train_input_fn/GreaterEqual"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/ToInt32"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/concat"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6"
  op: "Switch"
  input: "train_input_fn/Size_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8"
  op: "Switch"
  input: "train_input_fn/concat_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_0"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_1"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_2"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_3"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_4"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/group_deps"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/group_deps_1"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  input: "^train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_1"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_2"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_3"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_4"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_5"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019201228860765696
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul"
  op: "Mul"
  input: "train_input_fn/bucket_queue/bucket/Cast_5"
  input: "train_input_fn/bucket_queue/bucket/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5208_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5208_full"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5208_full"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5208_full/tags"
  input: "train_input_fn/bucket_queue/bucket/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/dequeue_top"
  op: "QueueDequeueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1176
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: "."
        string_val: "{"
        string_val: "}"
        string_val: ","
        string_val: "final"
        string_val: "="
        string_val: "()"
        string_val: "return"
        string_val: "vr_1"
        string_val: "if"
        string_val: "public"
        string_val: "int"
        string_val: "<"
        string_val: "vr_2"
        string_val: "=="
        string_val: ">"
        string_val: "0"
        string_val: "]"
        string_val: "["
        string_val: "vr_3"
        string_val: "vr_4"
        string_val: "+"
        string_val: "null"
        string_val: "String"
        string_val: "1"
        string_val: "new"
        string_val: "tp_1"
        string_val: "vr_5"
        string_val: "@Override"
        string_val: "vr_6"
        string_val: "vt_1"
        string_val: "vr_7"
        string_val: "vr_13"
        string_val: "boolean"
        string_val: "length"
        string_val: "vl_1"
        string_val: "vr_8"
        string_val: "?"
        string_val: "vr_9"
        string_val: "-"
        string_val: "static"
        string_val: "&&"
        string_val: "vr_11"
        string_val: "vr_10"
        string_val: "vl_2"
        string_val: ":"
        string_val: "vr_12"
        string_val: "fn_1"
        string_val: "vr_17"
        string_val: "fn_2"
        string_val: "false"
        string_val: "!="
        string_val: "fn_3"
        string_val: "vr_14"
        string_val: "vr_18"
        string_val: "vr_22"
        string_val: "void"
        string_val: "else"
        string_val: "[]"
        string_val: "vr_15"
        string_val: "vr_16"
        string_val: "++"
        string_val: "throw"
        string_val: "vr_19"
        string_val: "this"
        string_val: "||"
        string_val: "vr_21"
        string_val: "vr_23"
        string_val: "append"
        string_val: "vr_20"
        string_val: "size"
        string_val: "vr_26"
        string_val: "&"
        string_val: "throws"
        string_val: "fn_4"
        string_val: "vl_3"
        string_val: "vr_24"
        string_val: "IOException"
        string_val: "true"
        string_val: "for"
        string_val: "2"
        string_val: "tp_2"
        string_val: "fn_5"
        string_val: "vr_25"
        string_val: "private"
        string_val: "!"
        string_val: "byte"
        string_val: "long"
        string_val: "Object"
        string_val: "vl_4"
        string_val: "vl_6"
        string_val: "fn_6"
        string_val: "vt_2"
        string_val: "array"
        string_val: "lr_1"
        string_val: ">="
        string_val: "equals"
        string_val: "fn_7"
        string_val: "object"
        string_val: "vl_5"
        string_val: "case"
        string_val: "iterator"
        string_val: "<<"
        string_val: "char"
        string_val: "vr_27"
        string_val: "vr_28"
        string_val: "vr_33"
        string_val: "break;"
        string_val: "vr_35"
        string_val: "vr_29"
        string_val: "super"
        string_val: "vr_31"
        string_val: "vr_30"
        string_val: "while"
        string_val: "charAt"
        string_val: "vr_44"
        string_val: "vr_34"
        string_val: "0xff"
        string_val: "add"
        string_val: "fn_8"
        string_val: "lr_2"
        string_val: "get"
        string_val: "vr_32"
        string_val: "+="
        string_val: "vr_46"
        string_val: "out"
        string_val: "vr_38"
        string_val: ">>>"
        string_val: "toString"
        string_val: "fn_10"
        string_val: "System"
        string_val: "fn_12"
        string_val: "type"
        string_val: "<="
        string_val: "vl_7"
        string_val: "args"
        string_val: "vr_36"
        string_val: "fn_9"
        string_val: "|"
        string_val: "3"
        string_val: ">>"
        string_val: "remove"
        string_val: "hasNext"
        string_val: "vr_43"
        string_val: "4"
        string_val: "instanceof"
        string_val: "extends"
        string_val: "contains"
        string_val: "<>"
        string_val: "protected"
        string_val: "8"
        string_val: "vr_42"
        string_val: "vr_45"
        string_val: "MST[NonVoidMethodCallMutator]MSP[]"
        string_val: "Collection"
        string_val: "vl_9"
        string_val: "fn_11"
        string_val: "tp_3"
        string_val: "fn_13"
        string_val: "lr_3"
        string_val: "--"
        string_val: "StringBuilder"
        string_val: "indexOf"
        string_val: "IllegalArgumentException"
        string_val: "fn_15"
        string_val: "fn_17"
        string_val: "vr_57"
        string_val: "Integer"
        string_val: "try"
        string_val: "vl_8"
        string_val: "vr_39"
        string_val: "vr_37"
        string_val: "*"
        string_val: "vr_47"
        string_val: "16"
        string_val: "lr_4"
        string_val: "/"
        string_val: "Iterator"
        string_val: "List"
        string_val: "isEmpty"
        string_val: "fn_18"
        string_val: "catch"
        string_val: "vl_10"
        string_val: "fn_16"
        string_val: "vr_41"
        string_val: "vr_40"
        string_val: "vr_56"
        string_val: "vr_71"
        string_val: "vr_48"
        string_val: "lr_6"
        string_val: "vr_49"
        string_val: "lr_5"
        string_val: "fn_14"
        string_val: "MST[rv.ABSMutator]MSP[]"
        string_val: "MST[rv.UOI3Mutator]MSP[]"
        string_val: "MST[rv.UOI1Mutator]MSP[]"
        string_val: "MST[rv.UOI4Mutator]MSP[]"
        string_val: "\'"
        string_val: "lr_9"
        string_val: "MST[rv.UOI2Mutator]MSP[]"
        string_val: "fn_19"
        string_val: "MST[rv.CRCR5Mutator]MSP[]"
        string_val: "vr_50"
        string_val: "MST[rv.CRCR6Mutator]MSP[]"
        string_val: "MST[InlineConstantMutator]MSP[]"
        string_val: "lr_7"
        string_val: "line"
        string_val: "MST[rv.CRCR3Mutator]MSP[]"
        string_val: "vl_12"
        string_val: "tp_4"
        string_val: "vr_52"
        string_val: "24"
        string_val: "tp_5"
        string_val: "Type"
        string_val: "vr_51"
        string_val: "vr_59"
        string_val: "vr_55"
        string_val: "vt_3"
        string_val: "vr_60"
        string_val: "(byte)("
        string_val: "MST[NegateConditionalsMutator]MSP[]"
        string_val: "valueOf"
        string_val: "MST[rv.ROR5Mutator]MSP[]"
        string_val: "@SuppressWarnings"
        string_val: "Class"
        string_val: "println"
        string_val: "double"
        string_val: "list"
        string_val: "synchronized"
        string_val: "%"
        string_val: "vr_70"
        string_val: "MST[ReturnValsMutator]MSP[]"
        string_val: "vr_53"
        string_val: "vr_68"
        string_val: "fn_21"
        string_val: "vr_73"
        string_val: "fn_20"
        string_val: "clear"
        string_val: "^="
        string_val: "switch"
        string_val: "lr_8"
        string_val: "MST[rv.CRCR1Mutator]MSP[]"
        string_val: "MST[RemoveConditionalMutator_EQUAL_IF]MSP[]"
        string_val: "MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[]"
        string_val: "vr_69"
        string_val: "MST[rv.CRCR4Mutator]MSP[]"
        string_val: "MST[rv.CRCR2Mutator]MSP[]"
        string_val: "vr_62"
        string_val: "^"
        string_val: "MST[rv.ROR1Mutator]MSP[]"
        string_val: "vl_11"
        string_val: "MST[rv.ROR4Mutator]MSP[]"
        string_val: "vr_54"
        string_val: "MST[rv.ROR2Mutator]MSP[]"
        string_val: "vr_61"
        string_val: "MST[rv.ROR3Mutator]MSP[]"
        string_val: "..."
        string_val: "return;"
        string_val: "vl_14"
        string_val: "fn_27"
        string_val: "vl_19"
        string_val: "fn_25"
        string_val: "fn_24"
        string_val: "0x3f"
        string_val: "vr_66"
        string_val: "vr_58"
        string_val: "(byte)"
        string_val: "fn_23"
        string_val: "vr_92"
        string_val: "default:"
        string_val: "lr_10"
        string_val: "vr_63"
        string_val: "toArray"
        string_val: "Long"
        string_val: "getClass"
        string_val: "float"
        string_val: "fn_26"
        string_val: "string"
        string_val: "fn_22"
        string_val: "ArrayList"
        string_val: "collection"
        string_val: "lr_11"
        string_val: "5"
        string_val: "lr_12"
        string_val: "fn_29"
        string_val: "\'K\'"
        string_val: "lr_27"
        string_val: "6"
        string_val: "fn_28"
        string_val: "|="
        string_val: "LENGTH"
        string_val: "short"
        string_val: "lr_28"
        string_val: "-="
        string_val: "vl_15"
        string_val: "\'H\'"
        string_val: "lr_13"
        string_val: "\'S\'"
        string_val: "ParseException"
        string_val: "vl_22"
        string_val: "32"
        string_val: "vr_67"
        string_val: "fn_41"
        string_val: "vr_76"
        string_val: "\'.\'"
        string_val: "0xFF"
        string_val: "vr_72"
        string_val: "lr_14"
        string_val: "vl_13"
        string_val: "vr_93"
        string_val: "vr_64"
        string_val: "@Deprecated"
        string_val: "vt_4"
        string_val: "vl_17"
        string_val: "7"
        string_val: "tp_6"
        string_val: "fn_37"
        string_val: "vr_75"
        string_val: "MST[NullReturnValsMutator]MSP[]"
        string_val: "MST[ConstructorCallMutator]MSP[]"
        string_val: "lr_15"
        string_val: "\'A\'"
        string_val: "fn_31"
        string_val: "if("
        string_val: "fn_30"
        string_val: "MST[VoidMethodCallMutator]MSP[]"
        string_val: "lr_32"
        string_val: "fn_33"
        string_val: "MST[MathMutator]MSP[]"
        string_val: "lr_17"
        string_val: "lr_18"
        string_val: "vr_74"
        string_val: "<vt_1"
        string_val: "readLine"
        string_val: "vr_65"
        string_val: "400"
        string_val: "200"
        string_val: "vr_94"
        string_val: "builder"
        string_val: "500"
        string_val: "300"
        string_val: "continue;"
        string_val: "\'0\'"
        string_val: "vr_88"
        string_val: "vr_96"
        string_val: "\'X\'"
        string_val: "lr_20"
        string_val: "lr_38"
        string_val: "MST[experimental.NakedReceiverMutator]MSP[]"
        string_val: "exit"
        string_val: "lr_16"
        string_val: "vl_16"
        string_val: "error"
        string_val: "\'E\'"
        string_val: "fn_32"
        string_val: "Double"
        string_val: "\'\\r\'"
        string_val: "vr_87"
        string_val: "fn_36"
        string_val: "vr_84"
        string_val: "Float"
        string_val: "vr_85"
        string_val: "main"
        string_val: "vr_86"
        string_val: "\'\\n\'"
        string_val: "MST[ArgumentPropagationMutator]MSP[]"
        string_val: "fn_42"
        string_val: "vr_78"
        string_val: "for("
        string_val: "0xffffffffL"
        string_val: "vl_20"
        string_val: "vr_95"
        string_val: "trim"
        string_val: "10"
        string_val: "&="
        string_val: "lr_22"
        string_val: "lr_19"
        string_val: "fn_43"
        string_val: "fn_40"
        string_val: "31"
        string_val: "fn_35"
        string_val: "\'Z\'"
        string_val: "lr_36"
        string_val: "BufferedReader"
        string_val: "\'J\'"
        string_val: "Boolean"
        string_val: "\'=\'"
        string_val: "1000"
        string_val: "MST[rv.AOR1Mutator]MSP[]"
        string_val: "fn_39"
        string_val: "MST[experimental.MemberVariableMutator]MSP[]"
        string_val: "lr_23"
        string_val: "lr_24"
        string_val: "pow"
        string_val: "MST[rv.AOR3Mutator]MSP[]"
        string_val: "MST[rv.AOR2Mutator]MSP[]"
        string_val: "MST[rv.AOR4Mutator]MSP[]"
        string_val: "vr_82"
        string_val: "equalsIgnoreCase"
        string_val: "vr_77"
        string_val: "MST[rv.AOD2Mutator]MSP[]"
        string_val: "MST[rv.AOD1Mutator]MSP[]"
        string_val: "Builder"
        string_val: "Enumeration"
        string_val: "do"
        string_val: "vr_100"
        string_val: "vl_18"
        string_val: ");"
        string_val: "vr_89"
        string_val: "\':\'"
        string_val: "vr_97"
        string_val: "vr_80"
        string_val: "vr_109"
        string_val: "14"
        string_val: "lr_25"
        string_val: "vr_83"
        string_val: "\'>\'"
        string_val: "::"
        string_val: "100"
        string_val: "abs"
        string_val: "MST[ConditionalsBoundaryMutator]MSP[]"
        string_val: "\'+\'"
        string_val: "MST[RemoveConditionalMutator_ORDER_ELSE]MSP[]"
        string_val: "vr_79"
        string_val: "\'-\'"
        string_val: "MST[RemoveConditionalMutator_ORDER_IF]MSP[]"
        string_val: "exp"
        string_val: "vr_107"
        string_val: "y1"
        string_val: "1.0"
        string_val: "lr_29"
        string_val: "Array"
        string_val: "0xffff"
        string_val: "9"
        string_val: "fn_34"
        string_val: "lr_21"
        string_val: "fn_38"
        string_val: "MST[BooleanTrueReturnValsMutator]MSP[]"
        string_val: "\'e\'"
        string_val: "\'9\'"
        string_val: "tp_8"
        string_val: "0xfffffff"
        string_val: "fn_44"
        string_val: "40"
        string_val: "600"
        string_val: "lr_37"
        string_val: "\'F\'"
        string_val: "48"
        string_val: "0x3"
        string_val: "37"
        string_val: "21"
        string_val: "~"
        string_val: "printf"
        string_val: "lr_41"
        string_val: "tp_7"
        string_val: "vr_102"
        string_val: "lr_42"
        string_val: "\'R\'"
        string_val: "\'/\'"
        string_val: "0x100"
        string_val: "/="
        string_val: "Properties"
        string_val: "properties"
        string_val: "\'a\'"
        string_val: "vr_108"
        string_val: "vr_101"
        string_val: "time"
        string_val: "fn_46"
        string_val: "lr_26"
        string_val: "fn_45"
        string_val: "56"
        string_val: "MST[EmptyObjectReturnValsMutator]MSP[]"
        string_val: "22"
        string_val: "\'W\'"
        string_val: "\',\'"
        string_val: "15"
        string_val: "lr_40"
        string_val: "\'T\'"
        string_val: "\'G\'"
        string_val: "\'N\'"
        string_val: "vr_91"
        string_val: "\'M\'"
        string_val: "vr_138"
        string_val: "lr_59"
        string_val: "nextElement"
        string_val: "lr_62"
        string_val: "vr_132"
        string_val: "0x7"
        string_val: "256"
        string_val: "MST[PrimitiveReturnsMutator]MSP[]"
        string_val: "vr_90"
        string_val: "getType"
        string_val: "Util"
        string_val: "lr_51"
        string_val: "0xf"
        string_val: "0x3c"
        string_val: "0x30"
        string_val: "vr_114"
        string_val: "\'I\'"
        string_val: "\'z\'"
        string_val: "\'*\'"
        string_val: "vr_81"
        string_val: "\'%\'"
        string_val: "20"
        string_val: "lr_34"
        string_val: "\'P\'"
        string_val: "while("
        string_val: "lr_35"
        string_val: "lr_60"
        string_val: "lr_57"
        string_val: "27"
        string_val: "vr_156"
        string_val: "tp_9"
        string_val: "\'n\'"
        string_val: "\'C\'"
        string_val: "lr_33"
        string_val: "\'?\'"
        string_val: "\'@\'"
        string_val: "MST[BooleanFalseReturnValsMutator]MSP[]"
        string_val: "(;"
        string_val: "\'7\'"
        string_val: "lr_61"
        string_val: "lr_39"
        string_val: "vr_105"
        string_val: "Short"
        string_val: "\'Y\'"
        string_val: "getProperty"
        string_val: "26"
        string_val: "vr_103"
        string_val: "fn_47"
        string_val: "enumeration"
        string_val: "(int)"
        string_val: "lr_52"
        string_val: "0x55555555"
        string_val: "vt_5"
        string_val: "25"
        string_val: "lr_53"
        string_val: "PrintWriter"
        string_val: "lr_55"
        string_val: "fn_52"
        string_val: "\'m\'"
        string_val: "18"
        string_val: "lb_1;"
        string_val: "\'L\'"
        string_val: "lr_56"
        string_val: "lr_45"
        string_val: "lr_31"
        string_val: "28"
        string_val: "lr_49"
        string_val: "vr_98"
        string_val: "fn_49"
        string_val: "lr_47"
        string_val: "vl_21"
        string_val: "lr_43"
        string_val: "lr_30"
        string_val: "12"
        string_val: "vr_148"
        string_val: "lr_44"
        string_val: "0x1"
        string_val: "\'u\'"
        string_val: ">>>="
        string_val: "fn_57"
        string_val: "\'U\'"
        string_val: "13"
        string_val: "lr_50"
        string_val: "lr_58"
        string_val: "class"
        string_val: "\'<\'"
        string_val: "lr_46"
        string_val: "128"
        string_val: "finally"
        string_val: "*="
        string_val: "switch("
        string_val: "Exception"
        string_val: "fn_53"
        string_val: "\'l\'"
        string_val: "lb_1:"
        string_val: "\'O\'"
        string_val: "lr_48"
        string_val: "17"
        string_val: "\'Q\'"
        string_val: "Enum"
        string_val: "vl_23"
        string_val: "\'d\'"
        string_val: "\'D\'"
        string_val: "0x80000000L"
        string_val: "0x100000000L"
        string_val: "Byte"
        string_val: "1237"
        string_val: "1231"
        string_val: "\'V\'"
        string_val: "lr_54"
        string_val: "break"
        string_val: "\'f\'"
        string_val: "isDigit"
        string_val: "\'\\t\'"
        string_val: "->"
        string_val: "fn_56"
        string_val: "tp_10"
        string_val: "util"
        string_val: "fn_62"
        string_val: "\'{\'"
        string_val: "fn_48"
        string_val: "fn_50"
        string_val: "\'r\'"
        string_val: "\'!\'"
        string_val: "getValues"
        string_val: "<<="
        string_val: "\'\"\'"
        string_val: "0L"
        string_val: "fn_63"
        string_val: "fn_85"
        string_val: "lr_63"
        string_val: "0xff00ff"
        string_val: "0x6"
        string_val: "0x38"
        string_val: "\'~\'"
        string_val: "fn_61"
        string_val: "getArgs"
        string_val: "fn_70"
        string_val: "0xffff0000"
        string_val: "fn_54"
        string_val: "lr_64"
        string_val: "1L"
        string_val: "MST[IncrementsMutator]MSP[]"
        string_val: "MST[rv.OBBN1Mutator]MSP[]"
        string_val: "MST[rv.OBBN2Mutator]MSP[]"
        string_val: "MST[rv.OBBN3Mutator]MSP[]"
        string_val: "getDescription"
        string_val: "\'#\'"
        string_val: "vr_149"
        string_val: "SYSTEM"
        string_val: "(short)("
        string_val: "fn_51"
        string_val: "fn_81"
        string_val: "vr_99"
        string_val: "rewind"
        string_val: "vr_110"
        string_val: "lr_66"
        string_val: "65.536"
        string_val: "rename"
        string_val: "exception"
        string_val: "10000"
        string_val: "vr_139"
        string_val: "fn_78"
        string_val: "0xff0000"
        string_val: "0xff00"
        string_val: "0xf0000000"
        string_val: "0xcccc0000"
        string_val: "stringBuilder"
        string_val: "vr_143"
        string_val: "vr_116"
        string_val: "continue"
        string_val: "lr_65"
        string_val: "vr_112"
        string_val: "vr_111"
        string_val: "tp_18"
        string_val: "fn_55"
        string_val: "vr_151"
        string_val: "SIZE"
        string_val: "vr_124"
        string_val: "vr_152"
        string_val: "65535"
        string_val: "60000"
        string_val: "vr_113"
        string_val: "0xf0f0f0f"
        string_val: "(short)"
        string_val: "vr_123"
        string_val: "fn_68"
        string_val: "fn_67"
        string_val: "\'B\'"
        string_val: "fn_79"
        string_val: "0x10000"
        string_val: "vt_6"
        string_val: "vr_147"
        string_val: "vl_24"
        string_val: "lr_67"
        string_val: "\'}\'"
        string_val: "\'\\0\'"
        string_val: "\'[\'"
        string_val: "lr_68"
        string_val: "vr_104"
        string_val: "1000D"
        string_val: "NULL"
        string_val: "lr_129"
        string_val: "lr_128"
        string_val: "fn_72"
        string_val: "fn_65"
        string_val: "MST[experimental.RemoveIncrementsMutator]MSP[]"
        string_val: "lr_133"
        string_val: "\'b\'"
        string_val: "tp_17"
        string_val: "lr_69"
        string_val: "fn_66"
        string_val: "<tp_1"
        string_val: "23"
        string_val: "0xF8"
        string_val: "lr_90"
        string_val: "fn_59"
        string_val: "<vt_2"
        string_val: "propertyNames"
        string_val: "0x33333333"
        string_val: "\'o\'"
        string_val: "\'i\'"
        string_val: "ceil"
        string_val: "vr_125"
        string_val: "vr_122"
        string_val: "vr_117"
        string_val: "vr_115"
        string_val: "fn_75"
        string_val: "lr_80"
        string_val: "assert"
        string_val: "vr_118"
        string_val: "tp_19"
        string_val: "\'\\\\\'"
        string_val: "fn_74"
        string_val: "default"
        string_val: "TYPE"
        string_val: "lb_2;"
        string_val: "lb_2:"
        string_val: "vr_121"
        string_val: "tp_16"
        string_val: "lr_70"
        string_val: "vr_154"
        string_val: "65536L"
        string_val: "\'c\'"
        string_val: "0xC7"
        string_val: "log"
        string_val: "fn_69"
        string_val: "1000L"
        string_val: "fn_87"
        string_val: "tp_12"
        string_val: "vr_134"
        string_val: "vr_133"
        string_val: "vr_120"
        string_val: "lr_89"
        string_val: "vr_130"
        string_val: "vt_8"
        string_val: "vt_7"
        string_val: "fn_86"
        string_val: "vr_142"
        string_val: "sqrt"
        string_val: "TRUE"
        string_val: "0.0F"
        string_val: "vr_141"
        string_val: "vr_135"
        string_val: "0.0"
        string_val: "fn_89"
        string_val: "PROPERTIES"
        string_val: "\']\'"
        string_val: "vr_150"
        string_val: "tp_11"
        string_val: "fn_60"
        string_val: "synchronized("
        string_val: "<tp_2"
        string_val: "lr_85"
        string_val: "LIST"
        string_val: "fn_58"
        string_val: "0x700"
        string_val: "0x600"
        string_val: "vr_155"
        string_val: "fn_77"
        string_val: "lr_130"
        string_val: "lr_127"
        string_val: "lr_126"
        string_val: "lr_125"
        string_val: "fn_88"
        string_val: "lr_98"
        string_val: "floor"
        string_val: "19"
        string_val: "vr_136"
        string_val: "lr_104"
        string_val: "512"
        string_val: "vr_131"
        string_val: "vr_106"
        string_val: "SIGNED"
        string_val: "(char)"
        string_val: "tp_14"
        string_val: "lr_135"
        string_val: "lr_134"
        string_val: "lr_132"
        string_val: "lr_131"
        string_val: "\'s\'"
        string_val: "\'\\f\'"
        string_val: "<vt_3"
        string_val: "255"
        string_val: "vr_145"
        string_val: "vr_129"
        string_val: "fn_84"
        string_val: "0xffffffff"
        string_val: "vr_144"
        string_val: "EXCEPTION"
        string_val: "vr_146"
        string_val: "11"
        string_val: "lr_136"
        string_val: "vr_153"
        string_val: "lr_105"
        string_val: "vr_127"
        string_val: "lr_117"
        string_val: "lr_116"
        string_val: "lr_115"
        string_val: "vr_126"
        string_val: "compareToIgnoreCase"
        string_val: "FALSE"
        string_val: "vr_128"
        string_val: "lr_71"
        string_val: "80"
        string_val: "SHORT"
        string_val: "0x3F"
        string_val: "APPEND"
        string_val: "lr_74"
        string_val: "lr_73"
        string_val: "lr_72"
        string_val: "fn_71"
        string_val: "<vl_3"
        string_val: "fn_80"
        string_val: "vl_25"
        string_val: "vr_119"
        string_val: "vr_157"
        string_val: "lr_110"
        string_val: "lr_109"
        string_val: "lr_108"
        string_val: "lr_107"
        string_val: "\'w\'"
        string_val: "\'x\'"
        string_val: "include"
        string_val: "\'|\'"
        string_val: "lr_114"
        string_val: "lr_124"
        string_val: "lr_123"
        string_val: "lr_122"
        string_val: "lr_121"
        string_val: "lr_120"
        string_val: "lr_119"
        string_val: "lr_118"
        string_val: "getWidth"
        string_val: "vr_140"
        string_val: "lr_113"
        string_val: "lr_112"
        string_val: "lr_111"
        string_val: "700"
        string_val: "fn_73"
        string_val: "MST[experimental.SwitchMutator]MSP[]"
        string_val: "lr_88"
        string_val: "lr_87"
        string_val: "lr_86"
        string_val: "lr_84"
        string_val: "MST[experimental.RemoveSwitchMutator_1]MSP[]"
        string_val: "\'t\'"
        string_val: "\'\\u00C7\'"
        string_val: "tp_13"
        string_val: "Main"
        string_val: "tp_23"
        string_val: "lr_95"
        string_val: "lr_94"
        string_val: "lr_93"
        string_val: "lr_92"
        string_val: "lr_91"
        string_val: "lr_83"
        string_val: "lr_82"
        string_val: "fn_90"
        string_val: "MST[experimental.RemoveSwitchMutator_0]MSP[]"
        string_val: "0.0f"
        string_val: "tp_20"
        string_val: "\'\\u00D1\'"
        string_val: "lr_81"
        string_val: "lr_79"
        string_val: "lr_78"
        string_val: "1024"
        string_val: "vl_26"
        string_val: "0xF0"
        string_val: "\';\'"
        string_val: "lr_97"
        string_val: "lr_96"
        string_val: "0x0F"
        string_val: "0.0D"
        string_val: "fn_64"
        string_val: "lr_77"
        string_val: "lr_76"
        string_val: "lr_75"
        string_val: "fn_76"
        string_val: "\'\\\'\'"
        string_val: "setWidth"
        string_val: "0d"
        string_val: "MST[experimental.RemoveSwitchMutator_2]MSP[]"
        string_val: "0.0d"
        string_val: "0f"
        string_val: "fn_83"
        string_val: "fn_82"
        string_val: "ERROR"
        string_val: "8203"
        string_val: "173"
        string_val: "160"
        string_val: "union"
        string_val: "TypeHandler"
        string_val: "62"
        string_val: "16.51"
        string_val: "0x4C434C00"
        string_val: "0x01"
        string_val: "register"
        string_val: "lr_99"
        string_val: "lr_103"
        string_val: "lr_102"
        string_val: "lr_101"
        string_val: "lr_100"
        string_val: "vl_32"
        string_val: "tp_15"
        string_val: "lr_106"
        string_val: "60"
        string_val: "64"
        string_val: "vr_137"
        string_val: "sizeOf"
        string_val: "tp_21"
        string_val: "MST[experimental.BigIntegerMutator]MSP[]"
        string_val: "vr_159"
        string_val: "MST[InvertNegsMutator]MSP[]"
        string_val: "5000"
        string_val: "fn_100"
        string_val: "<Object"
        string_val: "vr_160"
        string_val: "MST[experimental.RemoveSwitchMutator_3]MSP[]"
        string_val: ";)"
        string_val: "vl_39"
        string_val: "1.2"
        string_val: "0.9"
        string_val: "vl_42"
        string_val: "vl_36"
        string_val: "vr_161"
        string_val: "RENAME"
        string_val: "\'&\'"
        string_val: "vl_33"
        string_val: "tp_22"
        string_val: "getArgList"
        string_val: "MST[experimental.RemoveSwitchMutator_4]MSP[]"
        string_val: "50"
        string_val: "vr_158"
        string_val: "vl_56"
        string_val: "3000"
        string_val: "0x0FF"
        string_val: "vl_46"
        string_val: "vl_28"
        string_val: "vl_27"
        string_val: "tp_24"
        string_val: "fn_132"
        string_val: "30"
        string_val: "%="
        string_val: "vr_167"
        string_val: "vl_44"
        string_val: "vl_35"
        string_val: "fn_141"
        string_val: "MST[experimental.RemoveSwitchMutator_5]MSP[]"
        string_val: "vr_163"
        string_val: "vl_65"
        string_val: "vl_49"
        string_val: "vl_41"
        string_val: "vl_40"
        string_val: "vl_31"
        string_val: "vl_29"
        string_val: "fn_142"
        string_val: "fn_140"
        string_val: "fn_139"
        string_val: "4294967295L"
        string_val: "vr_176"
        string_val: "vr_175"
        string_val: "vr_174"
        string_val: "vr_173"
        string_val: "fn_94"
        string_val: "fn_93"
        string_val: "vr_169"
        string_val: "try{"
        string_val: "fn_131"
        string_val: "fn_124"
        string_val: "fn_105"
        string_val: "MST[experimental.RemoveSwitchMutator_6]MSP[]"
        string_val: "Get"
        string_val: "(char)("
        string_val: "vr_191"
        string_val: "vr_181"
        string_val: "vr_168"
        string_val: "vl_72"
        string_val: "vl_71"
        string_val: "vl_38"
        string_val: "ioException"
        string_val: "fn_98"
        string_val: "fn_165"
        string_val: "fn_104"
        string_val: "MST[experimental.RemoveSwitchMutator_7]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_10]MSP[]"
        string_val: "{}"
        string_val: "vr_187"
        string_val: "vr_180"
        string_val: "vr_179"
        string_val: "vr_170"
        string_val: "vr_166"
        string_val: "vr_162"
        string_val: "vl_61"
        string_val: "vl_50"
        string_val: "vl_48"
        string_val: "vl_45"
        string_val: "vl_43"
        string_val: "vl_34"
        string_val: "override"
        string_val: "fn_162"
        string_val: "fn_161"
        string_val: "fn_160"
        string_val: "fn_159"
        string_val: "fn_158"
        string_val: "fn_133"
        string_val: "fn_130"
        string_val: "fn_129"
        string_val: "MST[experimental.RemoveSwitchMutator_9]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_8]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_25]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_24]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_23]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_22]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_21]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_20]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_19]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_18]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_17]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_15]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_14]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_13]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_12]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_11]MSP[]"
        string_val: "33"
        string_val: "2048"
        string_val: "\'y\'"
        string_val: "vr_193"
        string_val: "vr_192"
        string_val: "vr_190"
        string_val: "vr_177"
        string_val: "vr_172"
        string_val: "vr_171"
        string_val: "vr_165"
        string_val: "vr_164"
        string_val: "vl_74"
        string_val: "vl_69"
        string_val: "vl_68"
        string_val: "vl_67"
        string_val: "vl_60"
        string_val: "vl_57"
        string_val: "vl_55"
        string_val: "vl_51"
        string_val: "vl_47"
        string_val: "vl_37"
        string_val: "vl_30"
        string_val: "fn_97"
        string_val: "fn_96"
        string_val: "fn_92"
        string_val: "fn_91"
        string_val: "fn_164"
        string_val: "fn_163"
        string_val: "fn_138"
        string_val: "fn_137"
        string_val: "fn_136"
        string_val: "fn_135"
        string_val: "fn_134"
        string_val: "fn_126"
        string_val: "fn_125"
        string_val: "fn_123"
        string_val: "fn_122"
        string_val: "fn_101"
        string_val: "MST[experimental.RemoveSwitchMutator_27]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_26]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_16]MSP[]"
        string_val: "GET"
        string_val: "6000"
        string_val: "0xE0"
        string_val: "0xC0"
        string_val: "0x80"
        string_val: "\'`\'"
        string_val: "\')\'"
        string_val: "\'(\'"
        string_val: "vr_189"
        string_val: "vr_188"
        string_val: "vr_186"
        string_val: "vr_185"
        string_val: "vr_184"
        string_val: "vr_183"
        string_val: "vr_182"
        string_val: "vr_178"
        string_val: "vl_73"
        string_val: "vl_70"
        string_val: "vl_66"
        string_val: "vl_64"
        string_val: "vl_63"
        string_val: "vl_62"
        string_val: "vl_59"
        string_val: "vl_58"
        string_val: "vl_54"
        string_val: "vl_53"
        string_val: "vl_52"
        string_val: "fn_99"
        string_val: "fn_95"
        string_val: "fn_169"
        string_val: "fn_168"
        string_val: "fn_167"
        string_val: "fn_166"
        string_val: "fn_157"
        string_val: "fn_156"
        string_val: "fn_155"
        string_val: "fn_154"
        string_val: "fn_153"
        string_val: "fn_152"
        string_val: "fn_151"
        string_val: "fn_150"
        string_val: "fn_149"
        string_val: "fn_148"
        string_val: "fn_147"
        string_val: "fn_146"
        string_val: "fn_145"
        string_val: "fn_144"
        string_val: "fn_143"
        string_val: "fn_128"
        string_val: "fn_127"
        string_val: "fn_121"
        string_val: "fn_120"
        string_val: "fn_119"
        string_val: "fn_118"
        string_val: "fn_117"
        string_val: "fn_116"
        string_val: "fn_115"
        string_val: "fn_114"
        string_val: "fn_113"
        string_val: "fn_112"
        string_val: "fn_111"
        string_val: "fn_110"
        string_val: "fn_109"
        string_val: "fn_108"
        string_val: "fn_107"
        string_val: "fn_106"
        string_val: "fn_103"
        string_val: "fn_102"
        string_val: "catch("
        string_val: "abort"
        string_val: "MST[experimental.RemoveSwitchMutator_29]MSP[]"
        string_val: "MST[experimental.RemoveSwitchMutator_28]MSP[]"
        string_val: "LONG"
        string_val: "Error"
        string_val: "73"
        string_val: "71"
        string_val: "67"
        string_val: "29"
        string_val: "127"
        string_val: "1000000"
        string_val: "1.5"
        string_val: "0xff51afd7ed558ccdL"
        string_val: "0xc4ceb9fe1a85ec53L"
        string_val: "0xc2b2ae35"
        string_val: "0xFF00"
        string_val: "0xEF"
        string_val: "0xBF"
        string_val: "0xBB"
        string_val: "0x85ebca6b"
        string_val: "0x500"
        string_val: "0x400"
        string_val: "0x300"
        string_val: "0x200"
        string_val: "0x0F0F0F0F"
        string_val: "0x0000003F"
        string_val: "(vt_2)"
        string_val: "(vt_1)"
        string_val: "(tp_14)"
        string_val: "(long)"
        string_val: "\'p\'"
        string_val: "\'k\'"
        string_val: "\'h\'"
        string_val: "\'^\'"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1176
          }
        }
        tensor_content: "\320\317pI`\322nIplNI\020\014\010I\000\376\003I`\001\000I\300\234\272H\000\263\245H@\236\243H\200[\232H\200E~H\200\307UH\200\362SH\2003(H\300\267!H\000\276\tH\200O\010H\000\334\371G\200?\366G\200\224\350G\200S\336G\200S\336G\000\362\324G\200(\316G\000$\316G\200\320\265G\200f\265G\200\033\264G\000\203\252G\000A\240G\000\020\240G\200\264\236G\000\207\221G\200J\213G\200\376\212G\200\245\206G\200F\206G\200G\202G\000\267~G\000\337{G\000\000yG\000\373vG\000\362qG\000\201oG\000#oG\000\304lG\0005dG\000\273^G\000>ZG\000\213PG\000bOG\000$FG\000\351?G\000\2217G\000\3745G\00022G\000\2151G\000R/G\000v.G\000`.G\000_.G\000\330)G\000\332!G\000\331\033G\000\026\032G\000\370\025G\000\316\025G\000\026\024G\000X\023G\000g\021G\000\251\rG\000\276\nG\000\030\010G\000I\004G\000\376\003G\000\247\002G\000.\001G\000\036\001G\000\214\375F\000\354\372F\000\014\366F\000\264\357F\000f\356F\000L\355F\000\270\352F\000\372\340F\000t\334F\000\002\325F\000\240\324F\0008\322F\000Z\307F\000\224\304F\000V\301F\000\374\273F\000\364\273F\000\276\257F\000\226\254F\000\022\252F\000\322\251F\000R\243F\000`\237F\000\240\236F\000(\221F\000\016\217F\000\202\216F\000>\213F\000j\212F\000|\211F\000\336\210F\000n\210F\000\324\201F\000\270\177F\000\240xF\000$rF\000dmF\000\220lF\000\310jF\000\220hF\000\310gF\000\030`F\000\030`F\000|^F\000L[F\000 XF\000\210WF\000\244UF\000\260TF\000\324RF\000\224RF\000\\QF\000\324IF\000|IF\000\240HF\000\324CF\000\010CF\000\320BF\000\000AF\000\200@F\000\244?F\000\200?F\0000?F\000(:F\000`6F\000L6F\000\0005F\000\0044F\000\2643F\000\2643F\000|.F\000H.F\000D*F\000\204(F\000\334#F\000P\"F\000 \"F\0000\037F\000\030\036F\000p\033F\000T\030F\000\030\030F\000P\027F\0004\027F\000\244\026F\000\364\024F\000\350\022F\000<\020F\000\004\020F\000\354\016F\000<\016F\000X\014F\000\344\013F\000\030\007F\000\024\007F\000\020\007F\000\274\006F\000\020\005F\000\300\004F\000\254\001F\000\320\000F\000\030\373E\000\240\361E\000\030\355E\000\260\354E\000\030\343E\000\340\342E\000p\342E\000X\340E\000\340\337E\000\260\337E\000\340\335E\000\350\321E\000\030\321E\000\240\315E\000h\315E\0008\315E\000@\310E\000\330\307E\000\360\306E\000\360\306E\000\320\300E\000\220\300E\000 \276E\000H\273E\0000\267E\000\350\265E\000\270\265E\000\000\265E\000\250\264E\000\210\261E\000x\261E\0000\260E\000h\257E\000H\254E\000\000\252E\000\310\250E\0008\247E\000H\244E\000\250\243E\000\340\242E\000\320\241E\000X\241E\0008\240E\0000\240E\000\240\233E\000h\233E\000\030\233E\000@\231E\000X\230E\000 \227E\000H\225E\000\210\223E\000\030\223E\000\010\223E\000\240\221E\000p\217E\000\020\214E\000H\213E\000\260\210E\000`\210E\000\010\210E\000\350\206E\000\350\206E\000p\204E\000\270\202E\000\310\201E\000\320{E\000\020{E\000\220vE\000\300tE\000\020pE\000\220dE\000\340cE\000`cE\000 cE\000 cE\000\000cE\000\240bE\000\220bE\000@bE\000\240aE\000\300]E\000P[E\000@XE\000PWE\000\260VE\000PVE\000\340UE\000\220TE\000\220RE\000`RE\000\320QE\000\000IE\000\220GE\000\000GE\000\360EE\000\300DE\000\320AE\000\340@E\000\300;E\000P;E\000P9E\000P4E\000\3203E\000`2E\000p1E\000\340-E\000\360,E\000P*E\0000&E\000\220%E\000`#E\000 !E\000\360\037E\000\340\037E\000@\034E\000\360\023E\000\000\023E\000@\021E\000\220\020E\000P\017E\000P\017E\000\340\rE\000\220\014E\0000\013E\000\320\nE\000\200\tE\000@\tE\000 \010E\000`\006E\000@\006E\000\360\005E\000\320\004E\0000\004E\0000\002E\000\220\000E\000\200\377D\000\200\375D\000@\375D\000@\374D\000\200\371D\000@\366D\000`\360D\000`\360D\000\300\354D\000\200\346D\000`\343D\000 \342D\000@\340D\000\300\333D\000`\333D\000\240\332D\000 \331D\000\200\330D\000`\330D\000\200\323D\000@\323D\000 \323D\000\000\320D\000 \317D\000 \317D\000\000\317D\000\000\317D\000\000\317D\000\000\317D\000\340\314D\000 \314D\000\000\314D\000\240\313D\000`\313D\000\340\312D\000\300\310D\000\340\306D\000`\304D\000@\303D\000 \302D\000`\300D\000\000\277D\000\240\276D\000\300\275D\000\000\275D\000\200\274D\000\300\272D\000`\271D\000\340\270D\000\240\266D\000@\257D\000\340\255D\000`\255D\000@\255D\000`\253D\000\000\253D\000\200\252D\000@\250D\000\200\244D\000\000\244D\000\240\240D\000 \237D\000\200\232D\000@\231D\000\200\230D\000\340\227D\000\000\227D\000\340\225D\000\340\224D\000\000\224D\000`\222D\000\000\220D\000\340\217D\000\300\217D\000 \217D\000\240\215D\000`\214D\000 \214D\000 \213D\000`\212D\000`\211D\000 \211D\000 \211D\000 \211D\000\000\211D\000\300\210D\000\340\207D\000\240\207D\000\200\207D\000`\206D\000@\206D\000\000\206D\000`\205D\000@\204D\000\240\203D\000\240\203D\000\240\201D\000\300\200D\000`\200D\000`\200D\000\000\177D\000@~D\000\000}D\000@{D\000@vD\000\200tD\000\300rD\000@pD\000\200oD\000\200mD\000\000mD\000\300kD\000\300jD\000@hD\000\000hD\000\300gD\000\200gD\000\000fD\000\200eD\000@dD\000@dD\000\200cD\000@cD\000\000bD\000\300aD\000\200aD\000\200`D\000@`rD\000@\rD\000\000\rD\000\000\014D\000\300\nD\000\000\tD\000\300\010D\000\200\010D\000\000\010D\000@\007D\000@\006D\000@\003D\000@\002D\000@\001D\000@\001D\000@\000D\000\000\000D\000\000\377C\000\200\373C\000\000\372C\000\200\370C\000\000\370C\000\200\367C\000\200\365C\000\200\365C\000\000\365C\000\200\363C\000\200\362C\000\200\362C\000\200\361C\000\000\361C\000\000\360C\000\000\357C\000\200\356C\000\200\356C\000\000\356C\000\000\354C\000\200\353C\000\000\353C\000\200\351C\000\200\350C\000\000\350C\000\200\347C\000\200\345C\000\000\345C\000\200\344C\000\200\343C\000\200\342C\000\200\341C\000\200\337C\000\000\337C\000\200\336C\000\200\335C\000\000\335C\000\200\334C\000\000\332C\000\200\330C\000\000\330C\000\000\327C\000\000\325C\000\000\324C\000\200\323C\000\200\323C\000\000\321C\000\200\316C\000\200\314C\000\200\313C\000\200\311C\000\000\311C\000\000\307C\000\200\304C\000\200\274C\000\200\274C\000\000\274C\000\200\273C\000\200\273C\000\000\273C\000\000\270C\000\000\270C\000\000\270C\000\200\267C\000\200\265C\000\000\264C\000\200\263C\000\200\261C\000\200\260C\000\200\257C\000\000\257C\000\200\256C\000\200\255C\000\200\253C\000\000\253C\000\200\252C\000\000\251C\000\200\246C\000\000\246C\000\200\245C\000\200\244C\000\000\243C\000\200\242C\000\200\240C\000\000\237C\000\000\237C\000\000\237C\000\000\237C\000\000\237C\000\200\234C\000\000\232C\000\000\232C\000\000\232C\000\200\230C\000\000\230C\000\200\227C\000\000\226C\000\200\224C\000\200\223C\000\200\222C\000\200\221C\000\200\215C\000\200\214C\000\200\214C\000\200\212C\000\200\211C\000\200\207C\000\000\207C\000\200\206C\000\200\205C\000\200\205C\000\000\205C\000\000\204C\000\000\203C\000\000\202C\000\200\201C\000\200\201C\000\000\200C\000\000\200C\000\000\200C\000\000\200C\000\000~C\000\000}C\000\000|C\000\000|C\000\000wC\000\000uC\000\000uC\000\000oC\000\000mC\000\000kC\000\000iC\000\000dC\000\000bC\000\000aC\000\000aC\000\000`C\000\000\\C\000\000YC\000\000VC\000\000UC\000\000UC\000\000TC\000\000LC\000\000IC\000\000HC\000\000GC\000\000DC\000\000CC\000\000CC\000\000CC\000\000CC\000\000BC\000\000AC\000\000@C\000\000>C\000\000;C\000\000;C\000\0008C\000\0003C\000\0003C\000\0002C\000\0001C\000\000/C\000\000-C\000\000,C\000\000,C\000\000*C\000\000(C\000\000\'C\000\000\'C\000\000&C\000\000#C\000\000\"C\000\000\"C\000\000\"C\000\000 C\000\000\036C\000\000\034C\000\000\034C\000\000\033C\000\000\032C\000\000\026C\000\000\024C\000\000\023C\000\000\020C\000\000\020C\000\000\017C\000\000\013C\000\000\013C\000\000\007C\000\000\007C\000\000\006C\000\000\006C\000\000\006C\000\000\004C\000\000\376B\000\000\370B\000\000\366B\000\000\364B\000\000\364B\000\000\364B\000\000\362B\000\000\360B\000\000\356B\000\000\356B\000\000\356B\000\000\356B\000\000\354B\000\000\352B\000\000\352B\000\000\352B\000\000\350B\000\000\350B\000\000\346B\000\000\346B\000\000\344B\000\000\344B\000\000\344B\000\000\342B\000\000\342B\000\000\342B\000\000\334B\000\000\334B\000\000\334B\000\000\332B\000\000\332B\000\000\330B\000\000\326B\000\000\324B\000\000\324B\000\000\324B\000\000\322B\000\000\320B\000\000\316B\000\000\316B\000\000\316B\000\000\316B\000\000\316B\000\000\314B\000\000\314B\000\000\314B\000\000\312B\000\000\310B\000\000\310B\000\000\306B\000\000\306B\000\000\300B\000\000\300B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\272B\000\000\272B\000\000\270B\000\000\266B\000\000\260B\000\000\260B\000\000\256B\000\000\254B\000\000\252B\000\000\252B\000\000\250B\000\000\246B\000\000\246B\000\000\236B\000\000\236B\000\000\236B\000\000\236B\000\000\234B\000\000\234B\000\000\232B\000\000\230B\000\000\230B\000\000\230B\000\000\226B\000\000\226B\000\000\224B\000\000\220B\000\000\220B\000\000\220B\000\000\216B\000\000\216B\000\000\214B\000\000\212B\000\000\210B\000\000\204B\000\000\202B\000\000\202B\000\000\202B\000\000\202B\000\000\202B\000\000\200B\000\000|B\000\000|B\000\000xB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000hB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1176
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range"
  op: "Range"
  input: "model/att_seq2seq/range/start"
  input: "model/att_seq2seq/range/limit"
  input: "model/att_seq2seq/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table"
  input: "model/att_seq2seq/range"
  input: "model/att_seq2seq/Const"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1173
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_1"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/range"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_2"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_2"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/Const_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1241
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: "."
        string_val: "{"
        string_val: "}"
        string_val: ","
        string_val: "final"
        string_val: "="
        string_val: "()"
        string_val: "return"
        string_val: "vr_1"
        string_val: "if"
        string_val: "public"
        string_val: "int"
        string_val: "<"
        string_val: "vr_2"
        string_val: "=="
        string_val: ">"
        string_val: "0"
        string_val: "]"
        string_val: "["
        string_val: "vr_3"
        string_val: "vr_4"
        string_val: "+"
        string_val: "null"
        string_val: "String"
        string_val: "1"
        string_val: "new"
        string_val: "tp_1"
        string_val: "vr_5"
        string_val: "@Override"
        string_val: "vr_6"
        string_val: "vt_1"
        string_val: "vr_7"
        string_val: "vr_13"
        string_val: "boolean"
        string_val: "length"
        string_val: "vl_1"
        string_val: "vr_8"
        string_val: "?"
        string_val: "vr_9"
        string_val: "-"
        string_val: "static"
        string_val: "&&"
        string_val: "vr_11"
        string_val: "vr_10"
        string_val: "vl_2"
        string_val: ":"
        string_val: "vr_12"
        string_val: "fn_1"
        string_val: "vr_17"
        string_val: "fn_2"
        string_val: "false"
        string_val: "!="
        string_val: "fn_3"
        string_val: "vr_14"
        string_val: "vr_18"
        string_val: "vr_22"
        string_val: "void"
        string_val: "else"
        string_val: "[]"
        string_val: "vr_15"
        string_val: "vr_16"
        string_val: "++"
        string_val: "throw"
        string_val: "vr_19"
        string_val: "this"
        string_val: "||"
        string_val: "vr_21"
        string_val: "vr_23"
        string_val: "append"
        string_val: "vr_20"
        string_val: "size"
        string_val: "vr_26"
        string_val: "&"
        string_val: "throws"
        string_val: "fn_4"
        string_val: "vl_3"
        string_val: "vr_24"
        string_val: "IOException"
        string_val: "true"
        string_val: "for"
        string_val: "2"
        string_val: "tp_2"
        string_val: "fn_5"
        string_val: "vr_25"
        string_val: "private"
        string_val: "!"
        string_val: "byte"
        string_val: "long"
        string_val: "Object"
        string_val: "vl_4"
        string_val: "vl_6"
        string_val: "fn_6"
        string_val: "vt_2"
        string_val: "array"
        string_val: "lr_1"
        string_val: ">="
        string_val: "equals"
        string_val: "fn_7"
        string_val: "object"
        string_val: "vl_5"
        string_val: "case"
        string_val: "iterator"
        string_val: "<<"
        string_val: "char"
        string_val: "vr_27"
        string_val: "vr_28"
        string_val: "vr_33"
        string_val: "break;"
        string_val: "vr_35"
        string_val: "vr_29"
        string_val: "super"
        string_val: "vr_31"
        string_val: "vr_30"
        string_val: "while"
        string_val: "charAt"
        string_val: "vr_44"
        string_val: "vr_34"
        string_val: "0xff"
        string_val: "add"
        string_val: "fn_8"
        string_val: "lr_2"
        string_val: "get"
        string_val: "vr_32"
        string_val: "+="
        string_val: "vr_46"
        string_val: "out"
        string_val: "vr_38"
        string_val: ">>>"
        string_val: "toString"
        string_val: "fn_10"
        string_val: "System"
        string_val: "fn_12"
        string_val: "type"
        string_val: "<="
        string_val: "vl_7"
        string_val: "args"
        string_val: "vr_36"
        string_val: "fn_9"
        string_val: "|"
        string_val: "3"
        string_val: ">>"
        string_val: "remove"
        string_val: "hasNext"
        string_val: "vr_43"
        string_val: "4"
        string_val: "instanceof"
        string_val: "extends"
        string_val: "contains"
        string_val: "<>"
        string_val: "protected"
        string_val: "8"
        string_val: "vr_42"
        string_val: "vr_45"
        string_val: "Collection"
        string_val: "vl_9"
        string_val: "fn_11"
        string_val: "tp_3"
        string_val: "fn_13"
        string_val: "lr_3"
        string_val: "--"
        string_val: "StringBuilder"
        string_val: "indexOf"
        string_val: "IllegalArgumentException"
        string_val: "fn_15"
        string_val: "fn_17"
        string_val: "vr_57"
        string_val: "Integer"
        string_val: "try"
        string_val: "vl_8"
        string_val: "vr_39"
        string_val: "vr_37"
        string_val: "*"
        string_val: "vr_47"
        string_val: "16"
        string_val: "lr_4"
        string_val: "/"
        string_val: "Iterator"
        string_val: "List"
        string_val: "isEmpty"
        string_val: "fn_18"
        string_val: "catch"
        string_val: "vl_10"
        string_val: "fn_16"
        string_val: "vr_41"
        string_val: "vr_40"
        string_val: "vr_56"
        string_val: "vr_71"
        string_val: "vr_48"
        string_val: "lr_6"
        string_val: "vr_49"
        string_val: "lr_5"
        string_val: "MST[NonVoidMethodCallMutator]MSP[N]"
        string_val: "fn_14"
        string_val: "\'"
        string_val: "lr_9"
        string_val: "fn_19"
        string_val: "vr_50"
        string_val: "lr_7"
        string_val: "line"
        string_val: "vl_12"
        string_val: "tp_4"
        string_val: "vr_52"
        string_val: "24"
        string_val: "tp_5"
        string_val: "Type"
        string_val: "vr_51"
        string_val: "vr_59"
        string_val: "vr_55"
        string_val: "vt_3"
        string_val: "MST[rv.UOI1Mutator]MSP[N]"
        string_val: "vr_60"
        string_val: "(byte)("
        string_val: "MST[rv.UOI3Mutator]MSP[N]"
        string_val: "valueOf"
        string_val: "MST[rv.ABSMutator]MSP[N]"
        string_val: "@SuppressWarnings"
        string_val: "Class"
        string_val: "println"
        string_val: "MST[rv.UOI4Mutator]MSP[N]"
        string_val: "MST[rv.UOI2Mutator]MSP[N]"
        string_val: "double"
        string_val: "list"
        string_val: "synchronized"
        string_val: "%"
        string_val: "vr_70"
        string_val: "vr_53"
        string_val: "vr_68"
        string_val: "fn_21"
        string_val: "vr_73"
        string_val: "fn_20"
        string_val: "clear"
        string_val: "^="
        string_val: "switch"
        string_val: "lr_8"
        string_val: "MST[rv.CRCR5Mutator]MSP[N]"
        string_val: "MST[rv.CRCR3Mutator]MSP[N]"
        string_val: "MST[InlineConstantMutator]MSP[N]"
        string_val: "MST[rv.CRCR6Mutator]MSP[N]"
        string_val: "vr_69"
        string_val: "MST[NegateConditionalsMutator]MSP[N]"
        string_val: "MST[rv.ROR5Mutator]MSP[N]"
        string_val: "MST[NonVoidMethodCallMutator]MSP[S]"
        string_val: "vr_62"
        string_val: "^"
        string_val: "vl_11"
        string_val: "vr_54"
        string_val: "vr_61"
        string_val: "..."
        string_val: "return;"
        string_val: "vl_14"
        string_val: "fn_27"
        string_val: "vl_19"
        string_val: "fn_25"
        string_val: "fn_24"
        string_val: "0x3f"
        string_val: "vr_66"
        string_val: "vr_58"
        string_val: "(byte)"
        string_val: "fn_23"
        string_val: "vr_92"
        string_val: "default:"
        string_val: "lr_10"
        string_val: "vr_63"
        string_val: "toArray"
        string_val: "Long"
        string_val: "getClass"
        string_val: "float"
        string_val: "fn_26"
        string_val: "MST[rv.CRCR4Mutator]MSP[N]"
        string_val: "MST[rv.CRCR1Mutator]MSP[N]"
        string_val: "MST[ReturnValsMutator]MSP[N]"
        string_val: "string"
        string_val: "MST[rv.ROR2Mutator]MSP[N]"
        string_val: "fn_22"
        string_val: "ArrayList"
        string_val: "collection"
        string_val: "lr_11"
        string_val: "MST[rv.ROR3Mutator]MSP[N]"
        string_val: "5"
        string_val: "lr_12"
        string_val: "MST[rv.CRCR2Mutator]MSP[N]"
        string_val: "fn_29"
        string_val: "MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]"
        string_val: "\'K\'"
        string_val: "lr_27"
        string_val: "6"
        string_val: "MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N]"
        string_val: "MST[rv.ROR1Mutator]MSP[N]"
        string_val: "fn_28"
        string_val: "|="
        string_val: "LENGTH"
        string_val: "MST[rv.ROR4Mutator]MSP[N]"
        string_val: "short"
        string_val: "lr_28"
        string_val: "-="
        string_val: "vl_15"
        string_val: "\'H\'"
        string_val: "lr_13"
        string_val: "\'S\'"
        string_val: "ParseException"
        string_val: "vl_22"
        string_val: "32"
        string_val: "vr_67"
        string_val: "fn_41"
        string_val: "vr_76"
        string_val: "\'.\'"
        string_val: "0xFF"
        string_val: "vr_72"
        string_val: "lr_14"
        string_val: "vl_13"
        string_val: "vr_93"
        string_val: "vr_64"
        string_val: "@Deprecated"
        string_val: "vt_4"
        string_val: "vl_17"
        string_val: "7"
        string_val: "tp_6"
        string_val: "fn_37"
        string_val: "vr_75"
        string_val: "lr_15"
        string_val: "\'A\'"
        string_val: "fn_31"
        string_val: "if("
        string_val: "fn_30"
        string_val: "lr_32"
        string_val: "fn_33"
        string_val: "lr_17"
        string_val: "lr_18"
        string_val: "MST[rv.CRCR6Mutator]MSP[S]"
        string_val: "vr_74"
        string_val: "<vt_1"
        string_val: "readLine"
        string_val: "MST[InlineConstantMutator]MSP[S]"
        string_val: "MST[rv.CRCR5Mutator]MSP[S]"
        string_val: "vr_65"
        string_val: "400"
        string_val: "200"
        string_val: "vr_94"
        string_val: "builder"
        string_val: "500"
        string_val: "300"
        string_val: "continue;"
        string_val: "\'0\'"
        string_val: "vr_88"
        string_val: "vr_96"
        string_val: "\'X\'"
        string_val: "MST[ReturnValsMutator]MSP[S]"
        string_val: "lr_20"
        string_val: "lr_38"
        string_val: "exit"
        string_val: "lr_16"
        string_val: "vl_16"
        string_val: "error"
        string_val: "\'E\'"
        string_val: "fn_32"
        string_val: "Double"
        string_val: "MST[rv.CRCR3Mutator]MSP[S]"
        string_val: "\'\\r\'"
        string_val: "vr_87"
        string_val: "fn_36"
        string_val: "vr_84"
        string_val: "Float"
        string_val: "MST[rv.ABSMutator]MSP[S]"
        string_val: "vr_85"
        string_val: "MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]"
        string_val: "MST[MathMutator]MSP[N]"
        string_val: "main"
        string_val: "vr_86"
        string_val: "\'\\n\'"
        string_val: "fn_42"
        string_val: "vr_78"
        string_val: "MST[rv.UOI4Mutator]MSP[S]"
        string_val: "for("
        string_val: "MST[rv.UOI3Mutator]MSP[S]"
        string_val: "0xffffffffL"
        string_val: "vl_20"
        string_val: "vr_95"
        string_val: "MST[RemoveConditionalMutator_EQUAL_IF]MSP[S]"
        string_val: "trim"
        string_val: "10"
        string_val: "&="
        string_val: "MST[rv.UOI1Mutator]MSP[S]"
        string_val: "lr_22"
        string_val: "lr_19"
        string_val: "fn_43"
        string_val: "fn_40"
        string_val: "MST[rv.UOI2Mutator]MSP[S]"
        string_val: "31"
        string_val: "fn_35"
        string_val: "MST[rv.ROR5Mutator]MSP[S]"
        string_val: "\'Z\'"
        string_val: "MST[NegateConditionalsMutator]MSP[S]"
        string_val: "MST[rv.CRCR1Mutator]MSP[S]"
        string_val: "lr_36"
        string_val: "BufferedReader"
        string_val: "\'J\'"
        string_val: "Boolean"
        string_val: "\'=\'"
        string_val: "1000"
        string_val: "fn_39"
        string_val: "MST[experimental.NakedReceiverMutator]MSP[N]"
        string_val: "MST[NullReturnValsMutator]MSP[N]"
        string_val: "lr_23"
        string_val: "lr_24"
        string_val: "pow"
        string_val: "vr_82"
        string_val: "MST[rv.ROR4Mutator]MSP[S]"
        string_val: "MST[rv.CRCR2Mutator]MSP[S]"
        string_val: "equalsIgnoreCase"
        string_val: "vr_77"
        string_val: "Builder"
        string_val: "Enumeration"
        string_val: "do"
        string_val: "vr_100"
        string_val: "vl_18"
        string_val: ");"
        string_val: "MST[rv.ROR1Mutator]MSP[S]"
        string_val: "MST[VoidMethodCallMutator]MSP[N]"
        string_val: "vr_89"
        string_val: "\':\'"
        string_val: "vr_97"
        string_val: "vr_80"
        string_val: "vr_109"
        string_val: "14"
        string_val: "lr_25"
        string_val: "vr_83"
        string_val: "\'>\'"
        string_val: "::"
        string_val: "MST[ConstructorCallMutator]MSP[N]"
        string_val: "100"
        string_val: "abs"
        string_val: "\'+\'"
        string_val: "MST[ConstructorCallMutator]MSP[S]"
        string_val: "vr_79"
        string_val: "\'-\'"
        string_val: "MST[rv.CRCR4Mutator]MSP[S]"
        string_val: "exp"
        string_val: "vr_107"
        string_val: "y1"
        string_val: "1.0"
        string_val: "lr_29"
        string_val: "Array"
        string_val: "0xffff"
        string_val: "9"
        string_val: "fn_34"
        string_val: "lr_21"
        string_val: "fn_38"
        string_val: "\'e\'"
        string_val: "\'9\'"
        string_val: "tp_8"
        string_val: "0xfffffff"
        string_val: "fn_44"
        string_val: "40"
        string_val: "600"
        string_val: "MST[ArgumentPropagationMutator]MSP[N]"
        string_val: "lr_37"
        string_val: "\'F\'"
        string_val: "48"
        string_val: "0x3"
        string_val: "37"
        string_val: "MST[rv.AOR3Mutator]MSP[N]"
        string_val: "21"
        string_val: "MST[rv.AOR1Mutator]MSP[N]"
        string_val: "~"
        string_val: "printf"
        string_val: "lr_41"
        string_val: "MST[rv.AOR4Mutator]MSP[N]"
        string_val: "MST[rv.AOR2Mutator]MSP[N]"
        string_val: "tp_7"
        string_val: "MST[rv.ROR3Mutator]MSP[S]"
        string_val: "vr_102"
        string_val: "lr_42"
        string_val: "\'R\'"
        string_val: "MST[rv.AOD2Mutator]MSP[N]"
        string_val: "\'/\'"
        string_val: "0x100"
        string_val: "MST[NullReturnValsMutator]MSP[S]"
        string_val: "/="
        string_val: "Properties"
        string_val: "MST[rv.AOD1Mutator]MSP[N]"
        string_val: "properties"
        string_val: "\'a\'"
        string_val: "vr_108"
        string_val: "vr_101"
        string_val: "time"
        string_val: "fn_46"
        string_val: "lr_26"
        string_val: "fn_45"
        string_val: "56"
        string_val: "22"
        string_val: "\'W\'"
        string_val: "\',\'"
        string_val: "15"
        string_val: "MST[experimental.MemberVariableMutator]MSP[N]"
        string_val: "lr_40"
        string_val: "\'T\'"
        string_val: "MST[rv.ROR2Mutator]MSP[S]"
        string_val: "\'G\'"
        string_val: "\'N\'"
        string_val: "MST[VoidMethodCallMutator]MSP[S]"
        string_val: "vr_91"
        string_val: "\'M\'"
        string_val: "vr_138"
        string_val: "lr_59"
        string_val: "nextElement"
        string_val: "MST[RemoveConditionalMutator_ORDER_IF]MSP[N]"
        string_val: "lr_62"
        string_val: "MST[ConditionalsBoundaryMutator]MSP[N]"
        string_val: "vr_132"
        string_val: "0x7"
        string_val: "MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N]"
        string_val: "256"
        string_val: "vr_90"
        string_val: "getType"
        string_val: "Util"
        string_val: "lr_51"
        string_val: "0xf"
        string_val: "0x3c"
        string_val: "0x30"
        string_val: "vr_114"
        string_val: "\'I\'"
        string_val: "\'z\'"
        string_val: "\'*\'"
        string_val: "vr_81"
        string_val: "\'%\'"
        string_val: "20"
        string_val: "lr_34"
        string_val: "\'P\'"
        string_val: "while("
        string_val: "lr_35"
        string_val: "lr_60"
        string_val: "lr_57"
        string_val: "27"
        string_val: "vr_156"
        string_val: "tp_9"
        string_val: "\'n\'"
        string_val: "\'C\'"
        string_val: "lr_33"
        string_val: "\'?\'"
        string_val: "\'@\'"
        string_val: "(;"
        string_val: "\'7\'"
        string_val: "lr_61"
        string_val: "lr_39"
        string_val: "vr_105"
        string_val: "Short"
        string_val: "\'Y\'"
        string_val: "MST[BooleanTrueReturnValsMutator]MSP[N]"
        string_val: "getProperty"
        string_val: "26"
        string_val: "vr_103"
        string_val: "MST[ArgumentPropagationMutator]MSP[S]"
        string_val: "fn_47"
        string_val: "enumeration"
        string_val: "(int)"
        string_val: "lr_52"
        string_val: "0x55555555"
        string_val: "vt_5"
        string_val: "25"
        string_val: "lr_53"
        string_val: "PrintWriter"
        string_val: "lr_55"
        string_val: "fn_52"
        string_val: "\'m\'"
        string_val: "18"
        string_val: "lb_1;"
        string_val: "\'L\'"
        string_val: "lr_56"
        string_val: "lr_45"
        string_val: "lr_31"
        string_val: "28"
        string_val: "lr_49"
        string_val: "MST[experimental.NakedReceiverMutator]MSP[S]"
        string_val: "vr_98"
        string_val: "fn_49"
        string_val: "lr_47"
        string_val: "vl_21"
        string_val: "lr_43"
        string_val: "lr_30"
        string_val: "12"
        string_val: "vr_148"
        string_val: "lr_44"
        string_val: "MST[PrimitiveReturnsMutator]MSP[N]"
        string_val: "0x1"
        string_val: "\'u\'"
        string_val: ">>>="
        string_val: "fn_57"
        string_val: "\'U\'"
        string_val: "13"
        string_val: "lr_50"
        string_val: "lr_58"
        string_val: "class"
        string_val: "MST[EmptyObjectReturnValsMutator]MSP[N]"
        string_val: "\'<\'"
        string_val: "lr_46"
        string_val: "128"
        string_val: "finally"
        string_val: "*="
        string_val: "switch("
        string_val: "Exception"
        string_val: "fn_53"
        string_val: "\'l\'"
        string_val: "lb_1:"
        string_val: "\'O\'"
        string_val: "lr_48"
        string_val: "17"
        string_val: "\'Q\'"
        string_val: "Enum"
        string_val: "MST[BooleanTrueReturnValsMutator]MSP[S]"
        string_val: "MST[experimental.MemberVariableMutator]MSP[S]"
        string_val: "vl_23"
        string_val: "\'d\'"
        string_val: "\'D\'"
        string_val: "0x80000000L"
        string_val: "0x100000000L"
        string_val: "Byte"
        string_val: "1237"
        string_val: "1231"
        string_val: "\'V\'"
        string_val: "lr_54"
        string_val: "break"
        string_val: "\'f\'"
        string_val: "isDigit"
        string_val: "\'\\t\'"
        string_val: "->"
        string_val: "fn_56"
        string_val: "tp_10"
        string_val: "util"
        string_val: "fn_62"
        string_val: "\'{\'"
        string_val: "fn_48"
        string_val: "fn_50"
        string_val: "\'r\'"
        string_val: "\'!\'"
        string_val: "getValues"
        string_val: "MST[MathMutator]MSP[S]"
        string_val: "<<="
        string_val: "\'\"\'"
        string_val: "0L"
        string_val: "fn_63"
        string_val: "fn_85"
        string_val: "lr_63"
        string_val: "MST[EmptyObjectReturnValsMutator]MSP[S]"
        string_val: "0xff00ff"
        string_val: "0x6"
        string_val: "0x38"
        string_val: "\'~\'"
        string_val: "fn_61"
        string_val: "MST[BooleanFalseReturnValsMutator]MSP[N]"
        string_val: "getArgs"
        string_val: "fn_70"
        string_val: "0xffff0000"
        string_val: "fn_54"
        string_val: "lr_64"
        string_val: "1L"
        string_val: "getDescription"
        string_val: "MST[RemoveConditionalMutator_ORDER_ELSE]MSP[S]"
        string_val: "\'#\'"
        string_val: "vr_149"
        string_val: "SYSTEM"
        string_val: "MST[ConditionalsBoundaryMutator]MSP[S]"
        string_val: "(short)("
        string_val: "fn_51"
        string_val: "fn_81"
        string_val: "vr_99"
        string_val: "MST[rv.AOR1Mutator]MSP[S]"
        string_val: "MST[rv.AOD1Mutator]MSP[S]"
        string_val: "rewind"
        string_val: "vr_110"
        string_val: "lr_66"
        string_val: "MST[rv.OBBN1Mutator]MSP[N]"
        string_val: "MST[rv.AOD2Mutator]MSP[S]"
        string_val: "65.536"
        string_val: "rename"
        string_val: "MST[rv.OBBN3Mutator]MSP[N]"
        string_val: "exception"
        string_val: "10000"
        string_val: "vr_139"
        string_val: "fn_78"
        string_val: "MST[rv.AOR2Mutator]MSP[S]"
        string_val: "0xff0000"
        string_val: "0xff00"
        string_val: "0xf0000000"
        string_val: "0xcccc0000"
        string_val: "stringBuilder"
        string_val: "vr_143"
        string_val: "MST[rv.AOR4Mutator]MSP[S]"
        string_val: "vr_116"
        string_val: "continue"
        string_val: "lr_65"
        string_val: "vr_112"
        string_val: "vr_111"
        string_val: "MST[RemoveConditionalMutator_ORDER_IF]MSP[S]"
        string_val: "MST[rv.AOR3Mutator]MSP[S]"
        string_val: "MST[rv.OBBN2Mutator]MSP[N]"
        string_val: "tp_18"
        string_val: "fn_55"
        string_val: "vr_151"
        string_val: "MST[BooleanFalseReturnValsMutator]MSP[S]"
        string_val: "SIZE"
        string_val: "MST[IncrementsMutator]MSP[N]"
        string_val: "vr_124"
        string_val: "vr_152"
        string_val: "65535"
        string_val: "60000"
        string_val: "vr_113"
        string_val: "0xf0f0f0f"
        string_val: "(short)"
        string_val: "vr_123"
        string_val: "fn_68"
        string_val: "fn_67"
        string_val: "\'B\'"
        string_val: "MST[PrimitiveReturnsMutator]MSP[S]"
        string_val: "fn_79"
        string_val: "0x10000"
        string_val: "vt_6"
        string_val: "vr_147"
        string_val: "vl_24"
        string_val: "lr_67"
        string_val: "\'}\'"
        string_val: "\'\\0\'"
        string_val: "\'[\'"
        string_val: "lr_68"
        string_val: "vr_104"
        string_val: "1000D"
        string_val: "NULL"
        string_val: "lr_129"
        string_val: "lr_128"
        string_val: "fn_72"
        string_val: "fn_65"
        string_val: "lr_133"
        string_val: "\'b\'"
        string_val: "tp_17"
        string_val: "lr_69"
        string_val: "fn_66"
        string_val: "<tp_1"
        string_val: "23"
        string_val: "0xF8"
        string_val: "lr_90"
        string_val: "fn_59"
        string_val: "<vt_2"
        string_val: "propertyNames"
        string_val: "0x33333333"
        string_val: "\'o\'"
        string_val: "\'i\'"
        string_val: "ceil"
        string_val: "vr_125"
        string_val: "vr_122"
        string_val: "vr_117"
        string_val: "vr_115"
        string_val: "fn_75"
        string_val: "lr_80"
        string_val: "assert"
        string_val: "vr_118"
        string_val: "tp_19"
        string_val: "\'\\\\\'"
        string_val: "fn_74"
        string_val: "default"
        string_val: "TYPE"
        string_val: "lb_2;"
        string_val: "lb_2:"
        string_val: "vr_121"
        string_val: "tp_16"
        string_val: "lr_70"
        string_val: "vr_154"
        string_val: "65536L"
        string_val: "\'c\'"
        string_val: "0xC7"
        string_val: "log"
        string_val: "fn_69"
        string_val: "1000L"
        string_val: "fn_87"
        string_val: "MST[experimental.RemoveIncrementsMutator]MSP[N]"
        string_val: "tp_12"
        string_val: "vr_134"
        string_val: "vr_133"
        string_val: "vr_120"
        string_val: "lr_89"
        string_val: "vr_130"
        string_val: "vt_8"
        string_val: "vt_7"
        string_val: "fn_86"
        string_val: "vr_142"
        string_val: "sqrt"
        string_val: "TRUE"
        string_val: "0.0F"
        string_val: "vr_141"
        string_val: "vr_135"
        string_val: "0.0"
        string_val: "fn_89"
        string_val: "PROPERTIES"
        string_val: "\']\'"
        string_val: "vr_150"
        string_val: "tp_11"
        string_val: "fn_60"
        string_val: "synchronized("
        string_val: "<tp_2"
        string_val: "lr_85"
        string_val: "LIST"
        string_val: "fn_58"
        string_val: "0x700"
        string_val: "0x600"
        string_val: "vr_155"
        string_val: "fn_77"
        string_val: "lr_130"
        string_val: "lr_127"
        string_val: "lr_126"
        string_val: "lr_125"
        string_val: "fn_88"
        string_val: "lr_98"
        string_val: "floor"
        string_val: "19"
        string_val: "vr_136"
        string_val: "lr_104"
        string_val: "512"
        string_val: "vr_131"
        string_val: "vr_106"
        string_val: "SIGNED"
        string_val: "(char)"
        string_val: "tp_14"
        string_val: "lr_135"
        string_val: "lr_134"
        string_val: "lr_132"
        string_val: "lr_131"
        string_val: "\'s\'"
        string_val: "\'\\f\'"
        string_val: "<vt_3"
        string_val: "255"
        string_val: "vr_145"
        string_val: "vr_129"
        string_val: "fn_84"
        string_val: "0xffffffff"
        string_val: "vr_144"
        string_val: "EXCEPTION"
        string_val: "vr_146"
        string_val: "11"
        string_val: "lr_136"
        string_val: "vr_153"
        string_val: "lr_105"
        string_val: "vr_127"
        string_val: "lr_117"
        string_val: "lr_116"
        string_val: "lr_115"
        string_val: "vr_126"
        string_val: "compareToIgnoreCase"
        string_val: "FALSE"
        string_val: "vr_128"
        string_val: "lr_71"
        string_val: "80"
        string_val: "SHORT"
        string_val: "0x3F"
        string_val: "APPEND"
        string_val: "lr_74"
        string_val: "lr_73"
        string_val: "lr_72"
        string_val: "fn_71"
        string_val: "<vl_3"
        string_val: "fn_80"
        string_val: "MST[IncrementsMutator]MSP[S]"
        string_val: "vl_25"
        string_val: "vr_119"
        string_val: "vr_157"
        string_val: "lr_110"
        string_val: "lr_109"
        string_val: "lr_108"
        string_val: "lr_107"
        string_val: "\'w\'"
        string_val: "\'x\'"
        string_val: "include"
        string_val: "\'|\'"
        string_val: "lr_114"
        string_val: "lr_124"
        string_val: "lr_123"
        string_val: "lr_122"
        string_val: "lr_121"
        string_val: "lr_120"
        string_val: "lr_119"
        string_val: "lr_118"
        string_val: "getWidth"
        string_val: "MST[experimental.RemoveIncrementsMutator]MSP[S]"
        string_val: "vr_140"
        string_val: "lr_113"
        string_val: "lr_112"
        string_val: "lr_111"
        string_val: "700"
        string_val: "fn_73"
        string_val: "lr_88"
        string_val: "lr_87"
        string_val: "lr_86"
        string_val: "lr_84"
        string_val: "MST[rv.OBBN2Mutator]MSP[S]"
        string_val: "\'t\'"
        string_val: "\'\\u00C7\'"
        string_val: "tp_13"
        string_val: "Main"
        string_val: "tp_23"
        string_val: "lr_95"
        string_val: "lr_94"
        string_val: "lr_93"
        string_val: "lr_92"
        string_val: "lr_91"
        string_val: "lr_83"
        string_val: "lr_82"
        string_val: "fn_90"
        string_val: "0.0f"
        string_val: "tp_20"
        string_val: "\'\\u00D1\'"
        string_val: "lr_81"
        string_val: "lr_79"
        string_val: "lr_78"
        string_val: "1024"
        string_val: "vl_26"
        string_val: "0xF0"
        string_val: "\';\'"
        string_val: "lr_97"
        string_val: "lr_96"
        string_val: "0x0F"
        string_val: "0.0D"
        string_val: "fn_64"
        string_val: "lr_77"
        string_val: "lr_76"
        string_val: "lr_75"
        string_val: "fn_76"
        string_val: "\'\\\'\'"
        string_val: "setWidth"
        string_val: "0d"
        string_val: "0.0d"
        string_val: "0f"
        string_val: "fn_83"
        string_val: "fn_82"
        string_val: "MST[experimental.SwitchMutator]MSP[N]"
        string_val: "ERROR"
        string_val: "8203"
        string_val: "173"
        string_val: "160"
        string_val: "union"
        string_val: "TypeHandler"
        string_val: "62"
        string_val: "16.51"
        string_val: "0x4C434C00"
        string_val: "0x01"
        string_val: "MST[rv.OBBN1Mutator]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_1]MSP[N]"
        string_val: "register"
        string_val: "lr_99"
        string_val: "lr_103"
        string_val: "lr_102"
        string_val: "lr_101"
        string_val: "lr_100"
        string_val: "MST[rv.OBBN3Mutator]MSP[S]"
        string_val: "vl_32"
        string_val: "tp_15"
        string_val: "lr_106"
        string_val: "MST[experimental.RemoveSwitchMutator_0]MSP[N]"
        string_val: "60"
        string_val: "64"
        string_val: "vr_137"
        string_val: "MST[experimental.RemoveSwitchMutator_0]MSP[S]"
        string_val: "sizeOf"
        string_val: "MST[experimental.RemoveSwitchMutator_1]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_2]MSP[N]"
        string_val: "tp_21"
        string_val: "vr_159"
        string_val: "MST[experimental.RemoveSwitchMutator_2]MSP[S]"
        string_val: "5000"
        string_val: "fn_100"
        string_val: "MST[experimental.SwitchMutator]MSP[S]"
        string_val: "MST[experimental.BigIntegerMutator]MSP[N]"
        string_val: "<Object"
        string_val: "vr_160"
        string_val: ";)"
        string_val: "vl_39"
        string_val: "1.2"
        string_val: "0.9"
        string_val: "vl_42"
        string_val: "vl_36"
        string_val: "MST[InvertNegsMutator]MSP[N]"
        string_val: "vr_161"
        string_val: "RENAME"
        string_val: "\'&\'"
        string_val: "vl_33"
        string_val: "tp_22"
        string_val: "getArgList"
        string_val: "MST[experimental.RemoveSwitchMutator_3]MSP[N]"
        string_val: "50"
        string_val: "vr_158"
        string_val: "vl_56"
        string_val: "3000"
        string_val: "0x0FF"
        string_val: "vl_46"
        string_val: "vl_28"
        string_val: "vl_27"
        string_val: "tp_24"
        string_val: "fn_132"
        string_val: "30"
        string_val: "%="
        string_val: "vr_167"
        string_val: "vl_44"
        string_val: "vl_35"
        string_val: "fn_141"
        string_val: "MST[experimental.RemoveSwitchMutator_5]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_4]MSP[N]"
        string_val: "vr_163"
        string_val: "vl_65"
        string_val: "vl_49"
        string_val: "vl_41"
        string_val: "vl_40"
        string_val: "vl_31"
        string_val: "vl_29"
        string_val: "fn_142"
        string_val: "fn_140"
        string_val: "fn_139"
        string_val: "4294967295L"
        string_val: "vr_176"
        string_val: "vr_175"
        string_val: "vr_174"
        string_val: "vr_173"
        string_val: "fn_94"
        string_val: "fn_93"
        string_val: "vr_169"
        string_val: "try{"
        string_val: "fn_131"
        string_val: "fn_124"
        string_val: "fn_105"
        string_val: "MST[experimental.RemoveSwitchMutator_6]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_3]MSP[S]"
        string_val: "MST[InvertNegsMutator]MSP[S]"
        string_val: "Get"
        string_val: "(char)("
        string_val: "vr_191"
        string_val: "vr_181"
        string_val: "vr_168"
        string_val: "vl_72"
        string_val: "vl_71"
        string_val: "vl_38"
        string_val: "ioException"
        string_val: "fn_98"
        string_val: "fn_165"
        string_val: "fn_104"
        string_val: "MST[experimental.RemoveSwitchMutator_10]MSP[N]"
        string_val: "{}"
        string_val: "vr_187"
        string_val: "vr_180"
        string_val: "vr_179"
        string_val: "vr_170"
        string_val: "vr_166"
        string_val: "vr_162"
        string_val: "vl_61"
        string_val: "vl_50"
        string_val: "vl_48"
        string_val: "vl_45"
        string_val: "vl_43"
        string_val: "vl_34"
        string_val: "override"
        string_val: "fn_162"
        string_val: "fn_161"
        string_val: "fn_160"
        string_val: "fn_159"
        string_val: "fn_158"
        string_val: "fn_133"
        string_val: "fn_130"
        string_val: "fn_129"
        string_val: "MST[experimental.RemoveSwitchMutator_7]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_4]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_21]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_19]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_18]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_17]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_15]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_14]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_13]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_11]MSP[N]"
        string_val: "33"
        string_val: "2048"
        string_val: "\'y\'"
        string_val: "vr_193"
        string_val: "vr_192"
        string_val: "vr_190"
        string_val: "vr_177"
        string_val: "vr_172"
        string_val: "vr_171"
        string_val: "vr_165"
        string_val: "vr_164"
        string_val: "vl_74"
        string_val: "vl_69"
        string_val: "vl_68"
        string_val: "vl_67"
        string_val: "vl_60"
        string_val: "vl_57"
        string_val: "vl_55"
        string_val: "vl_51"
        string_val: "vl_47"
        string_val: "vl_37"
        string_val: "vl_30"
        string_val: "fn_97"
        string_val: "fn_96"
        string_val: "fn_92"
        string_val: "fn_91"
        string_val: "fn_164"
        string_val: "fn_163"
        string_val: "fn_138"
        string_val: "fn_137"
        string_val: "fn_136"
        string_val: "fn_135"
        string_val: "fn_134"
        string_val: "fn_126"
        string_val: "fn_125"
        string_val: "fn_123"
        string_val: "fn_122"
        string_val: "fn_101"
        string_val: "MST[experimental.RemoveSwitchMutator_9]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_8]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_27]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_25]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_24]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_23]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_22]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_20]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_16]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_12]MSP[N]"
        string_val: "MST[experimental.BigIntegerMutator]MSP[S]"
        string_val: "GET"
        string_val: "6000"
        string_val: "0xE0"
        string_val: "0xC0"
        string_val: "0x80"
        string_val: "\'`\'"
        string_val: "\')\'"
        string_val: "\'(\'"
        string_val: "vr_189"
        string_val: "vr_188"
        string_val: "vr_186"
        string_val: "vr_185"
        string_val: "vr_184"
        string_val: "vr_183"
        string_val: "vr_182"
        string_val: "vr_178"
        string_val: "vl_73"
        string_val: "vl_70"
        string_val: "vl_66"
        string_val: "vl_64"
        string_val: "vl_63"
        string_val: "vl_62"
        string_val: "vl_59"
        string_val: "vl_58"
        string_val: "vl_54"
        string_val: "vl_53"
        string_val: "vl_52"
        string_val: "fn_99"
        string_val: "fn_95"
        string_val: "fn_169"
        string_val: "fn_168"
        string_val: "fn_167"
        string_val: "fn_166"
        string_val: "fn_157"
        string_val: "fn_156"
        string_val: "fn_155"
        string_val: "fn_154"
        string_val: "fn_153"
        string_val: "fn_152"
        string_val: "fn_151"
        string_val: "fn_150"
        string_val: "fn_149"
        string_val: "fn_148"
        string_val: "fn_147"
        string_val: "fn_146"
        string_val: "fn_145"
        string_val: "fn_144"
        string_val: "fn_143"
        string_val: "fn_128"
        string_val: "fn_127"
        string_val: "fn_121"
        string_val: "fn_120"
        string_val: "fn_119"
        string_val: "fn_118"
        string_val: "fn_117"
        string_val: "fn_116"
        string_val: "fn_115"
        string_val: "fn_114"
        string_val: "fn_113"
        string_val: "fn_112"
        string_val: "fn_111"
        string_val: "fn_110"
        string_val: "fn_109"
        string_val: "fn_108"
        string_val: "fn_107"
        string_val: "fn_106"
        string_val: "fn_103"
        string_val: "fn_102"
        string_val: "catch("
        string_val: "abort"
        string_val: "MST[experimental.RemoveSwitchMutator_9]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_8]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_7]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_29]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_28]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_26]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_26]MSP[N]"
        string_val: "MST[experimental.RemoveSwitchMutator_25]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_24]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_23]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_22]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_20]MSP[S]"
        string_val: "MST[experimental.RemoveSwitchMutator_12]MSP[S]"
        string_val: "LONG"
        string_val: "Error"
        string_val: "73"
        string_val: "71"
        string_val: "67"
        string_val: "29"
        string_val: "127"
        string_val: "1000000"
        string_val: "1.5"
        string_val: "0xff51afd7ed558ccdL"
        string_val: "0xc4ceb9fe1a85ec53L"
        string_val: "0xc2b2ae35"
        string_val: "0xFF00"
        string_val: "0xEF"
        string_val: "0xBF"
        string_val: "0xBB"
        string_val: "0x85ebca6b"
        string_val: "0x500"
        string_val: "0x400"
        string_val: "0x300"
        string_val: "0x200"
        string_val: "0x0F0F0F0F"
        string_val: "0x0000003F"
        string_val: "(vt_2)"
        string_val: "(vt_1)"
        string_val: "(tp_14)"
        string_val: "(long)"
        string_val: "\'p\'"
        string_val: "\'k\'"
        string_val: "\'h\'"
        string_val: "\'^\'"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1241
          }
        }
        tensor_content: "\320\317pI`\322nIplNI\020\014\010I\000\376\003I`\001\000I\300\234\272H\000\263\245H@\236\243H\200[\232H\200E~H\200\307UH\200\362SH\2003(H\300\267!H\000\276\tH\200O\010H\000\334\371G\200?\366G\200\224\350G\200S\336G\200S\336G\000\362\324G\200(\316G\000$\316G\200\320\265G\200f\265G\200\033\264G\000\203\252G\000A\240G\000\020\240G\200\264\236G\000\207\221G\200J\213G\200\376\212G\200\245\206G\200F\206G\200G\202G\000\267~G\000\337{G\000\000yG\000\373vG\000\362qG\000\201oG\000#oG\000\304lG\0005dG\000\273^G\000>ZG\000\213PG\000bOG\000$FG\000\351?G\000\2217G\000\3745G\00022G\000\2151G\000R/G\000v.G\000`.G\000_.G\000\330)G\000\332!G\000\331\033G\000\026\032G\000\370\025G\000\316\025G\000\026\024G\000X\023G\000g\021G\000\251\rG\000\276\nG\000\030\010G\000I\004G\000\376\003G\000\247\002G\000.\001G\000\036\001G\000\214\375F\000\354\372F\000\014\366F\000\264\357F\000f\356F\000L\355F\000\270\352F\000\372\340F\000t\334F\000\002\325F\000\240\324F\0008\322F\000Z\307F\000\224\304F\000V\301F\000\374\273F\000\364\273F\000\276\257F\000\226\254F\000\022\252F\000\322\251F\000R\243F\000`\237F\000\240\236F\000(\221F\000\016\217F\000\202\216F\000>\213F\000j\212F\000|\211F\000\336\210F\000n\210F\000\324\201F\000\270\177F\000\240xF\000$rF\000dmF\000\220lF\000\310jF\000\220hF\000\310gF\000\030`F\000\030`F\000|^F\000L[F\000 XF\000\210WF\000\244UF\000\260TF\000\324RF\000\224RF\000\\QF\000\324IF\000|IF\000\240HF\000\324CF\000\010CF\000\320BF\000\000AF\000\200@F\000\244?F\000\200?F\0000?F\000(:F\000`6F\000L6F\000\0005F\000\0044F\000\2643F\000\2643F\000|.F\000H.F\000D*F\000\204(F\000\334#F\000P\"F\000 \"F\0000\037F\000p\033F\000T\030F\000\030\030F\000P\027F\0004\027F\000\244\026F\000\364\024F\000\350\022F\000<\020F\000\004\020F\000\354\016F\000<\016F\000X\014F\000\344\013F\000\030\007F\000\024\007F\000\020\007F\000\274\006F\000\020\005F\000\300\004F\000\254\001F\000\320\000F\000\030\373E\000\240\361E\000\030\355E\000\260\354E\000\030\343E\000\340\342E\000p\342E\000X\340E\000\340\337E\000\260\337E\000\340\335E\000\350\321E\000\030\321E\000\240\315E\000h\315E\0008\315E\000 \311E\000@\310E\000\220\300E\000 \276E\0000\267E\000\270\265E\000\210\261E\000x\261E\000h\257E\000H\254E\000\000\252E\000\310\250E\0008\247E\000H\244E\000\250\243E\000\340\242E\000\320\241E\000X\241E\000X\240E\0008\240E\0000\240E\000\240\234E\000h\233E\000\360\231E\000@\231E\000X\230E\000 \227E\000 \226E\000\320\225E\000H\225E\000\210\223E\000\030\223E\000\010\223E\000\240\221E\000\020\214E\000H\213E\000\260\210E\000`\210E\000\010\210E\000\350\206E\000\350\206E\000p\204E\000\270\202E\000h\201E\000\330\200E\000\010\200E\000\340\177E\000\220vE\000pmE\000\360kE\000 fE\000\220dE\000\340cE\000 cE\000\000cE\000\220bE\000\240aE\000\300]E\000P[E\000@XE\000PWE\000\260VE\000PVE\000\340UE\000\220TE\000\220RE\000`RE\000\320QE\000\000IE\000\220GE\000\000GE\000\360EE\000\300DE\000\320AE\000\340@E\000\300;E\000P;E\000P:E\000\3209E\000`9E\000P9E\000 5E\000P4E\000\3203E\000`2E\000p1E\000@.E\000\340-E\000\360,E\000\000,E\000P*E\000\000*E\0000&E\000\220%E\000`#E\000\020#E\000\260!E\000 !E\000\360\037E\000\340\037E\000\360\036E\000@\034E\000\360\023E\000\000\023E\000@\021E\000\220\020E\000P\017E\000P\017E\000\340\rE\000\220\014E\0000\013E\000\320\nE\000\200\tE\000@\tE\000 \010E\000`\006E\000@\006E\000\360\005E\000\320\004E\0000\004E\0000\002E\000\220\000E\000\200\377D\000\200\375D\000@\375D\000@\374D\000\200\371D\000@\366D\000\300\354D\000\200\346D\000`\343D\000 \342D\000@\340D\000`\333D\000\240\332D\000\200\330D\000`\330D\000@\324D\000\200\323D\000@\323D\000 \323D\000\200\322D\000\000\322D\000\000\320D\000 \317D\000 \317D\000\000\317D\000\000\317D\000\000\317D\000\000\317D\000\340\314D\000 \314D\000\000\314D\000\240\313D\000`\313D\000\000\313D\000\340\312D\000\300\310D\000`\304D\000@\303D\000 \302D\000`\300D\000\000\277D\000\240\276D\000\300\275D\000`\275D\000\000\275D\000\200\274D\000\300\272D\000`\271D\000\340\270D\000\240\267D\000\240\266D\000\000\260D\000\300\257D\000@\257D\000\340\255D\000`\255D\000`\253D\000\000\253D\000\300\252D\000\200\252D\000@\251D\000@\250D\000\200\244D\000\000\244D\000\240\243D\000\240\240D\000 \237D\000\200\232D\000`\232D\000@\231D\000\200\230D\000\340\227D\000\000\227D\000\340\225D\000\340\225D\000\340\224D\000\200\224D\000\000\224D\000\240\223D\000\200\223D\000`\222D\000\000\220D\000\340\217D\000\300\217D\000 \217D\000\240\215D\000 \214D\000\000\214D\000\240\212D\000`\212D\000`\211D\000 \211D\000\300\210D\000`\210D\000 \210D\000\340\207D\000\240\207D\000@\206D\000\000\206D\000`\205D\000@\204D\000\240\203D\000\240\203D\000`\203D\000 \202D\000\240\201D\000\300\200D\000`\200D\000`\200D\000\000\177D\000@~D\000\000}D\000@{D\000@vD\000\200tD\000@tD\000\300rD\000@pD\000\200mD\000\200lD\000\300kD\000\300jD\000\300iD\000\000hD\000\300gD\000\200gD\000\000fD\000\200eD\000@dD\000@dD\000\200cD\000@cD\000\000bD\000\300aD\000\200`D\000@`D\000\200_D\000\000_D\000\300]D\000\200]D\000\000]D\000\000\\D\000@ZD\000\300YD\000\000YD\000\000YD\000\200VD\000\300UD\000\300UD\000@UD\000\300TD\000\300TD\000@SD\000\300RD\000\000RD\000\200PD\000\000PD\000\300MD\000\200MD\000@MD\000\200LD\000\200LD\000\300KD\000\200KD\000\200JD\000\300ID\000@ID\000\300HD\000@HD\000\300DD\000@DD\000\300@D\000\300@D\000@>D\000\000>D\000\300<D\000\200;D\000\200;D\000@8D\000\0008D\000\3007D\000\2007D\000\3006D\000\0006D\000\0005D\000\2004D\000@3D\000\0003D\000\2002D\000@2D\000@,D\000\000,D\000\000+D\000\300)D\000\200)D\000@\'D\000\000\'D\000\200%D\000@%D\000\300!D\000\200\035D\000\000\035D\000\200\034D\000\200\034D\000\200\034D\000\200\034D\000\000\034D\000\200\032D\000\000\032D\000\000\032D\000\300\030D\000@\030D\000\000\030D\000@\022D\000@\022D\000\000\021D\000\000\021D\000\300\020D\000\300\020D\000\200\017D\000\300\rD\000@\rD\000\000\rD\000\000\014D\000\300\nD\000\000\t~C\000\000}C\000\000}C\000\000|C\000\000|C\000\000wC\000\000uC\000\000uC\000\000uC\000\000rC\000\000qC\000\000oC\000\000mC\000\000kC\000\000jC\000\000iC\000\000fC\000\000dC\000\000bC\000\000aC\000\000aC\000\000`C\000\000\\C\000\000YC\000\000VC\000\000UC\000\000UC\000\000TC\000\000MC\000\000LC\000\000IC\000\000HC\000\000GC\000\000DC\000\000CC\000\000CC\000\000CC\000\000CC\000\000BC\000\000AC\000\000@C\000\000>C\000\000;C\000\000;C\000\0008C\000\0003C\000\0002C\000\0001C\000\000/C\000\000-C\000\000,C\000\000,C\000\000*C\000\000(C\000\000\'C\000\000\'C\000\000&C\000\000#C\000\000\"C\000\000\"C\000\000\"C\000\000 C\000\000\036C\000\000\034C\000\000\034C\000\000\033C\000\000\032C\000\000\026C\000\000\024C\000\000\023C\000\000\020C\000\000\020C\000\000\017C\000\000\013C\000\000\013C\000\000\007C\000\000\007C\000\000\006C\000\000\006C\000\000\006C\000\000\004C\000\000\376B\000\000\370B\000\000\366B\000\000\364B\000\000\364B\000\000\364B\000\000\362B\000\000\362B\000\000\360B\000\000\356B\000\000\356B\000\000\356B\000\000\356B\000\000\354B\000\000\352B\000\000\352B\000\000\352B\000\000\350B\000\000\350B\000\000\346B\000\000\346B\000\000\344B\000\000\344B\000\000\344B\000\000\342B\000\000\342B\000\000\342B\000\000\334B\000\000\334B\000\000\334B\000\000\332B\000\000\332B\000\000\330B\000\000\326B\000\000\324B\000\000\324B\000\000\324B\000\000\322B\000\000\320B\000\000\316B\000\000\316B\000\000\316B\000\000\316B\000\000\316B\000\000\314B\000\000\314B\000\000\314B\000\000\312B\000\000\310B\000\000\310B\000\000\306B\000\000\306B\000\000\300B\000\000\300B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\274B\000\000\272B\000\000\272B\000\000\270B\000\000\266B\000\000\260B\000\000\260B\000\000\256B\000\000\254B\000\000\252B\000\000\252B\000\000\250B\000\000\246B\000\000\246B\000\000\236B\000\000\236B\000\000\236B\000\000\236B\000\000\234B\000\000\234B\000\000\232B\000\000\230B\000\000\230B\000\000\230B\000\000\226B\000\000\226B\000\000\224B\000\000\220B\000\000\220B\000\000\220B\000\000\216B\000\000\216B\000\000\214B\000\000\214B\000\000\212B\000\000\210B\000\000\204B\000\000\202B\000\000\202B\000\000\202B\000\000\202B\000\000\202B\000\000\200B\000\000|B\000\000|B\000\000xB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000lB\000\000hB\000\000hB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1241
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1"
  op: "Range"
  input: "model/att_seq2seq/range_1/start"
  input: "model/att_seq2seq/range_1/limit"
  input: "model/att_seq2seq/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_3"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/range_1"
  input: "model/att_seq2seq/Const_2"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1238
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_4"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/range_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_5"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_5"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/Const_3"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000e\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:3"
  input: "model/att_seq2seq/strided_slice/stack"
  input: "model/att_seq2seq/strided_slice/stack_1"
  input: "model/att_seq2seq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 101
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:2"
  input: "model/att_seq2seq/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/strided_slice"
  input: "model/att_seq2seq/hash_table_1/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/source_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/source_len/tag"
  input: "model/att_seq2seq/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000e\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:5"
  input: "model/att_seq2seq/strided_slice_1/stack"
  input: "model/att_seq2seq/strided_slice_1/stack_1"
  input: "model/att_seq2seq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 101
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:4"
  input: "model/att_seq2seq/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/strided_slice_1"
  input: "model/att_seq2seq/hash_table_4/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_1"
  op: "Cast"
  input: "model/att_seq2seq/Minimum_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/target_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/target_len/tag"
  input: "model/att_seq2seq/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum"
  op: "Sum"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/Minimum"
  input: "model/att_seq2seq/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/add"
  op: "Add"
  input: "model/att_seq2seq/Sum"
  input: "model/att_seq2seq/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/Assign"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/read"
  op: "Identity"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/AssignAdd"
  op: "AssignAdd"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/num_tokens"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens"
  op: "ScalarSummary"
  input: "model/att_seq2seq/num_tokens/tags"
  input: "model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Identity"
  op: "Identity"
  input: "model/att_seq2seq/strided_slice"
  input: "^model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\230\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1176
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup"
  op: "GatherV2"
  input: "model/att_seq2seq/encode/source_embedding/W/read"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/encode/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LogicalAnd"
  op: "LogicalAnd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/Shape"
  input: "model/att_seq2seq/decode/strided_slice/stack"
  input: "model/att_seq2seq/decode/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\331\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/target_embedding/W/read"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/decode/embedding_lookup/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/embedding_lookup"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/decode/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/Rank"
  input: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  input: "model/att_seq2seq/decode/TrainingHelper/range"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/strided_slice_1"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  op: "Fill"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like/shape_as_tensor"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/zeros/mul"
  input: "model/att_seq2seq/decode/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros/packed"
  input: "model/att_seq2seq/decode/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/zeros_1/mul"
  input: "model/att_seq2seq/decode/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros_1/packed"
  input: "model/att_seq2seq/decode/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/packed"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1241
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  op: "LogicalNot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  op: "ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  op: "GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GatherV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  op: "att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  op: "Enter"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  op: "Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  op: "Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  op: "Sum"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\331\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06330889463424683
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06330889463424683
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1241
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  op: "ArgMax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  op: "LogicalOr"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_9"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 1241
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/strided_slice_3/stack"
  input: "model/att_seq2seq/strided_slice_3/stack_1"
  input: "model/att_seq2seq/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/strided_slice_3"
  input: "model/att_seq2seq/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  op: "Equal"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  op: "All"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Equal"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice:0) = "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/All"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert/data_4"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_3"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  input: "^model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/assert_equal/Assert/Assert"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_2"
  op: "Sum"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_3"
  op: "Sum"
  input: "model/att_seq2seq/sub_1"
  input: "model/att_seq2seq/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_2"
  op: "Cast"
  input: "model/att_seq2seq/Sum_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/Sum_2"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_7"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_11"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Const"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1241
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPopV2_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  op: "Range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  op: "FloorDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\331\004\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  op: "SymbolicGradient"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "att_sum_bahdanau"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPushV2_1"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPopV2_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_1_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_1_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_3_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_3_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/Mul/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1280
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Const_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Const"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_1_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "StackV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\230\004\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/loss/tags"
  input: "model/att_seq2seq/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/MatMul_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\230\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1176
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\230\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1176
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\331\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\331\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\005\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\331\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\331\004\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1241
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1241
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1241
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.000000093488779e-07
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/truediv"
  input: "^model/att_seq2seq/OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2"
  op: "Range"
  input: "model/att_seq2seq/range_2/start"
  input: "model/att_seq2seq/Rank"
  input: "model/att_seq2seq/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat/values_0"
  input: "model/att_seq2seq/range_2"
  input: "model/att_seq2seq/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3"
  op: "Range"
  input: "model/att_seq2seq/range_3/start"
  input: "model/att_seq2seq/Rank_1"
  input: "model/att_seq2seq/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_1/values_0"
  input: "model/att_seq2seq/range_3"
  input: "model/att_seq2seq/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_2"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4"
  op: "Range"
  input: "model/att_seq2seq/range_4/start"
  input: "model/att_seq2seq/Rank_2"
  input: "model/att_seq2seq/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_2/values_0"
  input: "model/att_seq2seq/range_4"
  input: "model/att_seq2seq/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_3"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5"
  op: "Range"
  input: "model/att_seq2seq/range_5/start"
  input: "model/att_seq2seq/Rank_3"
  input: "model/att_seq2seq/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_3/values_0"
  input: "model/att_seq2seq/range_5"
  input: "model/att_seq2seq/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_4"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_4"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6"
  op: "Range"
  input: "model/att_seq2seq/range_6/start"
  input: "model/att_seq2seq/Rank_4"
  input: "model/att_seq2seq/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_4/values_0"
  input: "model/att_seq2seq/range_6"
  input: "model/att_seq2seq/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_5"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7"
  op: "Range"
  input: "model/att_seq2seq/range_7/start"
  input: "model/att_seq2seq/Rank_5"
  input: "model/att_seq2seq/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_5/values_0"
  input: "model/att_seq2seq/range_7"
  input: "model/att_seq2seq/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_6"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToInt64"
  op: "Cast"
  input: "model/att_seq2seq/transpose_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/ToInt64"
  input: "model/att_seq2seq/hash_table_3/Const"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/Variable/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/v_att/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  input: "^model/att_seq2seq/decode/target_embedding/W/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/source_embedding/W/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^model/att_seq2seq/key_value_init"
  input: "^model/att_seq2seq/key_value_init_1"
  input: "^model/att_seq2seq/key_value_init_2"
  input: "^model/att_seq2seq/key_value_init_3"
  input: "^model/att_seq2seq/key_value_init_4"
  input: "^model/att_seq2seq/key_value_init_5"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read/fraction_of_4096_full"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5208_full"
  input: "model/att_seq2seq/source_len"
  input: "model/att_seq2seq/target_len"
  input: "model/att_seq2seq/num_tokens"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  input: "model/att_seq2seq/OptimizeLoss/loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  attr {
    key: "N"
    value {
      i: 70
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_bb58755bf48c462aa85942fc9246ce90/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/source_embedding/W"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1280
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1241
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1241
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1176
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "att_sum_bahdanau"
      input_arg {
        name: "v_att"
        type: DT_FLOAT
      }
      input_arg {
        name: "keys"
        type: DT_FLOAT
      }
      input_arg {
        name: "query"
        type: DT_FLOAT
      }
      output_arg {
        name: "sum"
        type: DT_FLOAT
      }
      description: "Calculates a batch- and timweise dot product with a variable"
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "query"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add"
      op: "Add"
      input: "keys"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Tanh"
      op: "Tanh"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "v_att"
      input: "Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "mul:z:0"
      input: "Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "sum"
      value: "Sum:output:0"
    }
    attr {
      key: "_noinline"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
