public static byte [] fn_1 ( final byte [] vr_1 ) { if ( isEmpty ( vr_1 ) ) { return vl_1 ; } final byte [] vr_2 = new byte [ vr_1 . length >> 3 ] ; for ( int vr_3 = 0 , vr_4 = vr_1 . length - 1 ; vr_3 < vr_2 . length ; vr_3 ++ , vr_4 -= 8 ) { for ( int vr_5 = 0 ; vr_5 < vr_6 . length ; ++ vr_5 ) { if ( vr_1 [ vr_4 - vr_5 ] == '1' ) {
vr_2 [ vr_3 ] |= vr_6 [ vr_5 ] ; } } } return vr_2 ; } public static byte [] fn_1 ( final char [] vr_1 ) { if ( vr_1 == null || vr_1 . length == 0 ) { return vl_1 ; } final byte [] vr_2 = new byte [ vr_1 . length >> 3 ] ; for ( int vr_3 = 0 , vr_4 = vr_1 . length - 1 ; vr_3 < vr_2 . length ; vr_3 ++ , vr_4 -= 8 ) {
for ( int vr_5 = 0 ; vr_5 < vr_6 . length ; ++ vr_5 ) { if ( vr_1 [ vr_4 - vr_5 ] == '1' ) { vr_2 [ vr_3 ] |= vr_6 [ vr_5 ] ; } } } return vr_2 ; } private static boolean isEmpty ( final byte [] array ) { return array == null || array . length == 0 ; } public static byte [] fn_2 ( final byte [] vr_7 ) { if ( isEmpty ( vr_7 ) ) { return vl_1 ; }
final byte [] vr_8 = new byte [ vr_7 . length << 3 ] ; for ( int vr_3 = 0 , vr_4 = vr_8 . length - 1 ; vr_3 < vr_7 . length ; vr_3 ++ , vr_4 -= 8 ) { for ( int vr_5 = 0 ; vr_5 < vr_6 . length ; ++ vr_5 ) { if ( ( vr_7 [ vr_3 ] & vr_6 [ vr_5 ] ) == 0 ) { vr_8 [ vr_4 - vr_5 ] = '0' ; } else { vr_8 [ vr_4 - vr_5 ] = '1' ; }
} } return vr_8 ; } public static char [] fn_3 ( final byte [] vr_7 ) { if ( isEmpty ( vr_7 ) ) { return vl_2 ; } final char [] vr_8 = new char [ vr_7 . length << 3 ] ; for ( int vr_3 = 0 , vr_4 = vr_8 . length - 1 ; vr_3 < vr_7 . length ; vr_3 ++ , vr_4 -= 8 ) { for ( int vr_5 = 0 ; vr_5 < vr_6 . length ; ++ vr_5 ) {
if ( ( vr_7 [ vr_3 ] & vr_6 [ vr_5 ] ) == 0 ) { vr_8 [ vr_4 - vr_5 ] = '0' ; } else { vr_8 [ vr_4 - vr_5 ] = '1' ; } } } return vr_8 ; } public static String fn_4 ( final byte [] vr_7 ) { return new String ( fn_3 ( vr_7 ) ) ; } @Override public byte [] fn_5 ( final byte [] vr_1 ) { return fn_1 ( vr_1 ) ; } @Override public Object fn_5 ( final Object vr_1 ) throws vl_3 {
if ( vr_1 == null ) { return vl_1 ; } if ( vr_1 instanceof byte [] ) { return fn_1 ( ( byte [] ) vr_1 ) ; } if ( vr_1 instanceof char [] ) { return fn_1 ( ( char [] ) vr_1 ) ; } if ( vr_1 instanceof String ) { return fn_1 ( ( ( String ) vr_1 ) . fn_6 () ) ; } throw new vl_3 ( lr_1 ) ; } @Override public byte [] fn_7 ( final byte [] vr_7 ) { return fn_2 ( vr_7 ) ; } @Override
public Object fn_7 ( final Object vr_7 ) throws vl_4 { if ( ! ( vr_7 instanceof byte [] ) ) { throw new vl_4 ( lr_1 ) ; } return fn_3 ( ( byte [] ) vr_7 ) ; } public byte [] fn_8 ( final String vr_1 ) { if ( vr_1 == null ) { return vl_1 ; } return fn_1 ( vr_1 . fn_6 () ) ; }
