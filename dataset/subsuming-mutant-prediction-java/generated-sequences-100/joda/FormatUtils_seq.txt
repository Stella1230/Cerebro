public static void fn_1 ( tp_1 vr_1 , int vr_2 , int size ) { try { fn_1 ( ( vl_1 ) vr_1 , vr_2 , size ) ; } catch ( IOException vr_3 ) { } } public static void fn_1 ( vl_1 vr_4 , int vr_2 , int size ) throws IOException { if ( vr_2 < 0 ) { vr_4 . append ( '-' ) ; if ( vr_2 != Integer . vr_5 ) { vr_2 = - vr_2 ; } else { for (; size > 10 ; size -- ) {
vr_4 . append ( '0' ) ; } vr_4 . append ( lr_1 + - ( long ) Integer . vr_5 ) ; return; } } if ( vr_2 < 10 ) { for (; size > 1 ; size -- ) { vr_4 . append ( '0' ) ; } vr_4 . append ( (char)( vr_2 + '0' ) ) ; } else if ( vr_2 < 100 ) { for (; size > 2 ; size -- ) { vr_4 . append ( '0' ) ; }
int vr_6 = ( ( vr_2 + 1 ) * 13421772 ) >> 27 ; vr_4 . append ( (char) ( vr_6 + '0' ) ) ; vr_4 . append ( (char) ( vr_2 - ( vr_6 << 3 ) - ( vr_6 << 1 ) + '0' ) ) ; } else { int vr_7 ; if ( vr_2 < 1000 ) { vr_7 = 3 ; } else if ( vr_2 < 10000 ) { vr_7 = 4 ; } else { vr_7 = (int)( vr_8 . log ( vr_2 ) / vl_2 ) + 1 ; }
for (; size > vr_7 ; size -- ) { vr_4 . append ( '0' ) ; } vr_4 . append ( Integer . toString ( vr_2 ) ) ; } } public static void fn_1 ( tp_1 vr_1 , long vr_2 , int size ) { try { fn_1 ( ( vl_1 ) vr_1 , vr_2 , size ) ; } catch ( IOException vr_3 ) { } } public static void fn_1 ( vl_1 vr_9 , long vr_2 , int size ) throws IOException { int vr_10 = ( int ) vr_2 ;
if ( vr_10 == vr_2 ) { fn_1 ( vr_9 , vr_10 , size ) ; } else if ( size <= 19 ) { vr_9 . append ( Long . toString ( vr_2 ) ) ; } else { if ( vr_2 < 0 ) { vr_9 . append ( '-' ) ; if ( vr_2 != Long . vr_5 ) { vr_2 = - vr_2 ; } else { for (; size > 19 ; size -- ) { vr_9 . append ( '0' ) ; } vr_9 . append ( lr_2 ) ; return; } }
int vr_7 = (int)( vr_8 . log ( vr_2 ) / vl_2 ) + 1 ; for (; size > vr_7 ; size -- ) { vr_9 . append ( '0' ) ; } vr_9 . append ( Long . toString ( vr_2 ) ) ; } } public static void fn_2 ( tp_2 out , int vr_2 , int size ) throws IOException { if ( vr_2 < 0 ) { out . vr_11 ( '-' ) ; if ( vr_2 != Integer . vr_5 ) { vr_2 = - vr_2 ; } else {
for (; size > 10 ; size -- ) { out . vr_11 ( '0' ) ; } out . vr_11 ( lr_1 + - ( long ) Integer . vr_5 ) ; return; } } if ( vr_2 < 10 ) { for (; size > 1 ; size -- ) { out . vr_11 ( '0' ) ; } out . vr_11 ( vr_2 + '0' ) ; } else if ( vr_2 < 100 ) { for (; size > 2 ; size -- ) { out . vr_11 ( '0' ) ; }
int vr_6 = ( ( vr_2 + 1 ) * 13421772 ) >> 27 ; out . vr_11 ( vr_6 + '0' ) ; out . vr_11 ( vr_2 - ( vr_6 << 3 ) - ( vr_6 << 1 ) + '0' ) ; } else { int vr_7 ; if ( vr_2 < 1000 ) { vr_7 = 3 ; } else if ( vr_2 < 10000 ) { vr_7 = 4 ; } else { vr_7 = (int)( vr_8 . log ( vr_2 ) / vl_2 ) + 1 ; }
for (; size > vr_7 ; size -- ) { out . vr_11 ( '0' ) ; } out . vr_11 ( Integer . toString ( vr_2 ) ) ; } } public static void fn_2 ( tp_2 out , long vr_2 , int size ) throws IOException { int vr_10 = ( int ) vr_2 ; if ( vr_10 == vr_2 ) { fn_2 ( out , vr_10 , size ) ; } else if ( size <= 19 ) { out . vr_11 ( Long . toString ( vr_2 ) ) ; } else {
if ( vr_2 < 0 ) { out . vr_11 ( '-' ) ; if ( vr_2 != Long . vr_5 ) { vr_2 = - vr_2 ; } else { for (; size > 19 ; size -- ) { out . vr_11 ( '0' ) ; } out . vr_11 ( lr_2 ) ; return; } } int vr_7 = (int)( vr_8 . log ( vr_2 ) / vl_2 ) + 1 ; for (; size > vr_7 ; size -- ) { out . vr_11 ( '0' ) ; }
out . vr_11 ( Long . toString ( vr_2 ) ) ; } } public static void fn_3 ( tp_1 vr_1 , int vr_2 ) { try { fn_3 ( ( vl_1 ) vr_1 , vr_2 ) ; } catch ( IOException vr_3 ) { } } public static void fn_3 ( vl_1 vr_9 , int vr_2 ) throws IOException { if ( vr_2 < 0 ) { vr_9 . append ( '-' ) ; if ( vr_2 != Integer . vr_5 ) { vr_2 = - vr_2 ; } else {
vr_9 . append ( lr_1 + - ( long ) Integer . vr_5 ) ; return; } } if ( vr_2 < 10 ) { vr_9 . append ( (char)( vr_2 + '0' ) ) ; } else if ( vr_2 < 100 ) { int vr_6 = ( ( vr_2 + 1 ) * 13421772 ) >> 27 ; vr_9 . append ( (char) ( vr_6 + '0' ) ) ; vr_9 . append ( (char) ( vr_2 - ( vr_6 << 3 ) - ( vr_6 << 1 ) + '0' ) ) ; } else {
vr_9 . append ( Integer . toString ( vr_2 ) ) ; } } public static void fn_3 ( tp_1 vr_1 , long vr_2 ) { try { fn_3 ( ( vl_1 ) vr_1 , vr_2 ) ; } catch ( IOException vr_3 ) { } } public static void fn_3 ( vl_1 vr_9 , long vr_2 ) throws IOException { int vr_10 = ( int ) vr_2 ; if ( vr_10 == vr_2 ) { fn_3 ( vr_9 , vr_10 ) ; } else { vr_9 . append ( Long . toString ( vr_2 ) ) ; } }
public static void fn_4 ( tp_2 out , int vr_2 ) throws IOException { if ( vr_2 < 0 ) { out . vr_11 ( '-' ) ; if ( vr_2 != Integer . vr_5 ) { vr_2 = - vr_2 ; } else { out . vr_11 ( lr_1 + - ( long ) Integer . vr_5 ) ; return; } } if ( vr_2 < 10 ) { out . vr_11 ( vr_2 + '0' ) ; } else if ( vr_2 < 100 ) {
int vr_6 = ( ( vr_2 + 1 ) * 13421772 ) >> 27 ; out . vr_11 ( vr_6 + '0' ) ; out . vr_11 ( vr_2 - ( vr_6 << 3 ) - ( vr_6 << 1 ) + '0' ) ; } else { out . vr_11 ( Integer . toString ( vr_2 ) ) ; } } public static void fn_4 ( tp_2 out , long vr_2 ) throws IOException { int vr_10 = ( int ) vr_2 ; if ( vr_10 == vr_2 ) { fn_4 ( out , vr_10 ) ;
} else { out . vr_11 ( Long . toString ( vr_2 ) ) ; } } public static int fn_5 ( long vr_2 ) { if ( vr_2 < 0 ) { if ( vr_2 != Long . vr_5 ) { return fn_5 ( - vr_2 ) + 1 ; } else { return 20 ; } } return ( vr_2 < 10 ? 1 : ( vr_2 < 100 ? 2 : ( vr_2 < 1000 ? 3 : ( vr_2 < 10000 ? 4 :
( (int)( vr_8 . log ( vr_2 ) / vl_2 ) + 1 ) ) ) ) ) ; } static int fn_6 ( tp_3 vr_12 , int vr_13 ) { int vr_2 = vr_12 . charAt ( vr_13 ) - '0' ; return ( ( vr_2 << 3 ) + ( vr_2 << 1 ) ) + vr_12 . charAt ( vr_13 + 1 ) - '0' ; } static String fn_7 ( final String vr_12 , final int vr_14 ) { int vr_15 = vr_14 + 32 ; String vr_16 ;
if ( vr_12 . length () <= vr_15 + 3 ) { vr_16 = vr_12 ; } else { vr_16 = vr_12 . vr_17 ( 0 , vr_15 ) . fn_8 ( lr_3 ) ; } if ( vr_14 <= 0 ) { return lr_4 + vr_16 + '"' ; } if ( vr_14 >= vr_12 . length () ) { return lr_4 + vr_16 + lr_5 ; } return lr_4 + vr_16 + lr_6 + vr_16 . vr_17 ( vr_14 ) + '"' ; }
