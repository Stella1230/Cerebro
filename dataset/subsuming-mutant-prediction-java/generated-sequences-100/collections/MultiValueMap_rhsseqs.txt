return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[NegateConditionalsMutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[rv.ROR2Mutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[ReturnValsMutator]MSP[S] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[rv.ROR4Mutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[rv.ROR5Mutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[rv.ROR3Mutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[rv.ROR1Mutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[NonVoidMethodCallMutator]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[NullReturnValsMutator]MSP[S] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[ConstructorCallMutator]MSP[S] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[experimental.MemberVariableMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[experimental.MemberVariableMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
} @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[N] } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; MST[ArgumentPropagationMutator]MSP[S] }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; MST[ReturnValsMutator]MSP[N] } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] vr_1 . this . remove ( vr_11 ) ; }
} @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[N] } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; MST[NullReturnValsMutator]MSP[N] } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[NonVoidMethodCallMutator]MSP[S] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[S] }
} @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[N] } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[NegateConditionalsMutator]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[rv.ROR3Mutator]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; MST[VoidMethodCallMutator]MSP[S] if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[rv.ROR5Mutator]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[rv.ROR4Mutator]MSP[S] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[rv.ROR1Mutator]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { MST[rv.ROR2Mutator]MSP[N] vr_1 . this . remove ( vr_11 ) ; }
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[experimental.MemberVariableMutator]MSP[S] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; MST[ReturnValsMutator]MSP[S] } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; MST[NullReturnValsMutator]MSP[S] } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[experimental.MemberVariableMutator]MSP[N] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override MST[experimental.MemberVariableMutator]MSP[S] public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override MST[experimental.MemberVariableMutator]MSP[N]
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; MST[ConstructorCallMutator]MSP[N] for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; MST[ReturnValsMutator]MSP[S] } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { MST[NonVoidMethodCallMutator]MSP[N] vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; MST[VoidMethodCallMutator]MSP[N] } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; MST[ConstructorCallMutator]MSP[N] } return vr_31 ; } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; MST[NullReturnValsMutator]MSP[N] } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; MST[PrimitiveReturnsMutator]MSP[S] } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; } @Override public int size () { return fn_19 () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
public Iterator < vt_2 > iterator () { final vr_30 < vt_2 > vr_31 = new vr_30 <> () ; for ( final vt_1 vr_32 : fn_20 () ) { vr_31 . vr_33 ( new fn_16 ( vr_32 ) ) ; } return vr_31 ; MST[ReturnValsMutator]MSP[N] } @Override public int size () { return fn_19 () ; } @Override public void clear () { vr_1 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_12 . isEmpty () ) { vr_1 . this . remove ( vr_11 ) ; }
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[ReturnValsMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[NegateConditionalsMutator]MSP[S]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR5Mutator]MSP[S]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[NegateConditionalsMutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR5Mutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR3Mutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR4Mutator]MSP[S]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[NonVoidMethodCallMutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR6Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR6Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[NonVoidMethodCallMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR2Mutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[rv.ROR1Mutator]MSP[N]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[EmptyObjectReturnValsMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[NonVoidMethodCallMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; MST[VoidMethodCallMutator]MSP[N] if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR3Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR1Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[InlineConstantMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR1Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR3Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR5Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[rv.CRCR5Mutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
throw new fn_18 () ; MST[ConstructorCallMutator]MSP[S] } }
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; MST[InlineConstantMutator]MSP[N] } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) {
} @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 fn_21 () { return iterator . fn_21 () ; } @Override public tp_3 vr_29 () { try { return vr_34 . vr_35 () . fn_22 () ; } catch ( final Exception vr_36 ) { throw new fn_23 ( lr_3 + vr_34 , vr_36 ) ; } } private void fn_3 ( final tp_2 vr_37 ) throws IOException , vl_1 { vr_37 . vr_10 () ; if ( vr_34 != null && ! Collection . class . vr_38 ( vr_34 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N]
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[NonVoidMethodCallMutator]MSP[S]
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[rv.UOI3Mutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[NegateConditionalsMutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[rv.ROR3Mutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[rv.ROR5Mutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[S] } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( vr_14 == false ) { return false ; MST[InlineConstantMutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[rv.ABSMutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[rv.CRCR6Mutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[BooleanFalseReturnValsMutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { MST[rv.ROR5Mutator]MSP[N] return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[ReturnValsMutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOD2Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[NonVoidMethodCallMutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( vr_14 == false ) { MST[NegateConditionalsMutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[S] } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[rv.UOI1Mutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ; MST[NonVoidMethodCallMutator]MSP[N]
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[ReturnValsMutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[rv.CRCR1Mutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR3Mutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ; MST[rv.CRCR1Mutator]MSP[N]
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; MST[NullReturnValsMutator]MSP[S] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[rv.CRCR5Mutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[ReturnValsMutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[rv.CRCR1Mutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; MST[rv.CRCR6Mutator]MSP[N] for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[rv.CRCR5Mutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; MST[rv.CRCR6Mutator]MSP[N] Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[rv.UOI4Mutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.UOI2Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[rv.CRCR5Mutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[rv.ROR1Mutator]MSP[S] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[rv.CRCR3Mutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[ReturnValsMutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[rv.ROR5Mutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; MST[NonVoidMethodCallMutator]MSP[N] } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR3Mutator]MSP[N] return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[rv.ROR5Mutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( vr_14 == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[rv.CRCR6Mutator]MSP[N] } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[rv.ROR5Mutator]MSP[N] vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ; MST[rv.CRCR5Mutator]MSP[N]
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[rv.ROR1Mutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOR2Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[NonVoidMethodCallMutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( vr_14 == false ) { MST[rv.ROR3Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[rv.ROR5Mutator]MSP[N] return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N]
if ( vr_14 == false ) { MST[rv.ROR1Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[rv.CRCR5Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.ABSMutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[rv.ROR3Mutator]MSP[N]
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[rv.ROR2Mutator]MSP[N]
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[NullReturnValsMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( vr_14 == false ) { MST[rv.ABSMutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[rv.ROR5Mutator]MSP[N]
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { MST[NonVoidMethodCallMutator]MSP[N] vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[NonVoidMethodCallMutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[N] } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[ReturnValsMutator]MSP[N] } boolean vr_20 = false ;
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; MST[ReturnValsMutator]MSP[N] } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[rv.ROR1Mutator]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[ArgumentPropagationMutator]MSP[S] vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; MST[ReturnValsMutator]MSP[N] } @Override
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[rv.ROR4Mutator]MSP[S] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( vr_14 == false ) { return false ; MST[rv.CRCR1Mutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[ReturnValsMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[NegateConditionalsMutator]MSP[N] vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( vr_14 == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; MST[rv.CRCR6Mutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ROR4Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ABSMutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[rv.CRCR6Mutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ROR3Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ROR1Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR3Mutator]MSP[N]
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR2Mutator]MSP[N] return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[rv.ROR4Mutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[ReturnValsMutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; MST[experimental.MemberVariableMutator]MSP[N] } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return vr_25 . <vt_2 > fn_15 () ; MST[ReturnValsMutator]MSP[S] } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; MST[NullReturnValsMutator]MSP[N] } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; MST[rv.CRCR1Mutator]MSP[N] Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[rv.CRCR5Mutator]MSP[N] } boolean vr_20 = false ;
if ( vr_14 == false ) { MST[rv.UOI1Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.UOI4Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; MST[NullReturnValsMutator]MSP[N] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[S] } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; MST[BooleanTrueReturnValsMutator]MSP[S] } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOR1Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( vr_14 == false ) { MST[rv.ROR4Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR1Mutator]MSP[N]
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[NegateConditionalsMutator]MSP[N] return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[rv.CRCR3Mutator]MSP[N] } boolean vr_20 = false ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[NegateConditionalsMutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR1Mutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; MST[rv.CRCR1Mutator]MSP[N] for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { MST[NonVoidMethodCallMutator]MSP[N] vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.UOI1Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[ReturnValsMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; MST[ReturnValsMutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[ReturnValsMutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[rv.CRCR2Mutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[NegateConditionalsMutator]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; MST[ArgumentPropagationMutator]MSP[N] } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; MST[NonVoidMethodCallMutator]MSP[N] } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.UOI1Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[rv.UOI2Mutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[ArgumentPropagationMutator]MSP[N] vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[rv.ROR2Mutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; MST[VoidMethodCallMutator]MSP[N] }
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[NonVoidMethodCallMutator]MSP[N] return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; MST[NonVoidMethodCallMutator]MSP[N] } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.UOI4Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[rv.CRCR3Mutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR4Mutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOR4Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; MST[ReturnValsMutator]MSP[N] } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR5Mutator]MSP[N] return false ; } boolean vr_20 = false ;
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { MST[NegateConditionalsMutator]MSP[N] return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[rv.CRCR4Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOD1Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[NegateConditionalsMutator]MSP[N] return false ; } boolean vr_20 = false ;
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[MathMutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR6Mutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( vr_14 == false ) { MST[rv.UOI4Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR4Mutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[InlineConstantMutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[rv.UOI4Mutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[rv.UOI2Mutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; MST[PrimitiveReturnsMutator]MSP[N] } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[InlineConstantMutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[rv.ROR4Mutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { MST[rv.ROR5Mutator]MSP[N] for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[InlineConstantMutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[rv.ROR5Mutator]MSP[N] return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[rv.ROR5Mutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[InlineConstantMutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; MST[EmptyObjectReturnValsMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
@SuppressWarnings ( { lr_1 , lr_2 } ) public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super Collection < vt_2 > > vr_3 ) { return vr_1 . <vt_1 , vt_2 , ArrayList > fn_1 ( ( vr_2 < vt_1 , ? super Collection > ) vr_3 , ArrayList . class ) ; MST[NonVoidMethodCallMutator]MSP[S] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 ,
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[ReturnValsMutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; MST[EmptyObjectReturnValsMutator]MSP[N] } @Override
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[InlineConstantMutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; MST[NonVoidMethodCallMutator]MSP[N] } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; MST[ReturnValsMutator]MSP[S] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ; MST[rv.CRCR6Mutator]MSP[N]
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[rv.ROR2Mutator]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[InlineConstantMutator]MSP[N] } boolean vr_20 = false ;
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; MST[ConstructorCallMutator]MSP[S] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return vr_25 . <vt_2 > fn_15 () ; MST[NonVoidMethodCallMutator]MSP[S] } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[rv.ABSMutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; MST[ReturnValsMutator]MSP[N] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; MST[rv.CRCR3Mutator]MSP[N] for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR4Mutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[rv.CRCR6Mutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; MST[InlineConstantMutator]MSP[N] Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[rv.CRCR4Mutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[S] } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[NegateConditionalsMutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[BooleanTrueReturnValsMutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; MST[VoidMethodCallMutator]MSP[N] out . fn_2 ( vr_3 ) ; }
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; MST[ArgumentPropagationMutator]MSP[S] } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[rv.UOI1Mutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; MST[NullReturnValsMutator]MSP[S] } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S]
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[NegateConditionalsMutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.UOI3Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[rv.CRCR4Mutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; MST[ConstructorCallMutator]MSP[N] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR4Mutator]MSP[N]
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; MST[EmptyObjectReturnValsMutator]MSP[N] } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[InlineConstantMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[rv.CRCR5Mutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[rv.CRCR1Mutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[rv.CRCR2Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[rv.CRCR6Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[NonVoidMethodCallMutator]MSP[S] vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[N]
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR2Mutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR6Mutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[S] } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[ConstructorCallMutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[BooleanFalseReturnValsMutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( vr_14 == false ) { MST[rv.UOI2Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[NonVoidMethodCallMutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.UOI3Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[NegateConditionalsMutator]MSP[N]
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR2Mutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[rv.ROR1Mutator]MSP[S]
if ( vr_14 == false ) { MST[rv.ROR2Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[rv.CRCR3Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return false ; } boolean vr_20 = false ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; MST[VoidMethodCallMutator]MSP[N] vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[rv.CRCR6Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; MST[ConstructorCallMutator]MSP[N] } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
@SuppressWarnings ( { lr_1 , lr_2 } ) public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super Collection < vt_2 > > vr_3 ) { return vr_1 . <vt_1 , vt_2 , ArrayList > fn_1 ( ( vr_2 < vt_1 , ? super Collection > ) vr_3 , ArrayList . class ) ; MST[ReturnValsMutator]MSP[S] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 ,
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[rv.ROR4Mutator]MSP[S]
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[NegateConditionalsMutator]MSP[N] vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[rv.ROR5Mutator]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( vr_14 == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; MST[rv.CRCR3Mutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[rv.ROR3Mutator]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[rv.ROR2Mutator]MSP[N] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; MST[rv.CRCR5Mutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; MST[rv.CRCR1Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) { MST[NonVoidMethodCallMutator]MSP[N]
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ROR2Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; MST[rv.ROR5Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S]
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR4Mutator]MSP[N] return false ; } boolean vr_20 = false ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR3Mutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; MST[InlineConstantMutator]MSP[N] for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[NegateConditionalsMutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.AOR3Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR5Mutator]MSP[N]
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR5Mutator]MSP[N] return false ; } boolean vr_20 = false ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[rv.CRCR3Mutator]MSP[N] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[rv.CRCR5Mutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { return false ; MST[ReturnValsMutator]MSP[N] } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[NegateConditionalsMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[N] } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[NegateConditionalsMutator]MSP[N] return false ; } boolean vr_20 = false ;
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { MST[ConstructorCallMutator]MSP[N] int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[rv.CRCR6Mutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR5Mutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; MST[rv.CRCR3Mutator]MSP[N] Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
final Class < vt_3 > vr_4 ) { return new vr_1 <> ( vr_3 , new vr_5 <> ( vr_4 ) ) ; MST[ConstructorCallMutator]MSP[N] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 , final vr_6 < vt_3 > vr_7 ) { return new vr_1 <> ( vr_3 , vr_7 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_8 () ; out . fn_2 ( vr_3 ) ; }
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; MST[rv.CRCR5Mutator]MSP[N] Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( vr_14 == false ) { MST[rv.UOI3Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return false ; } boolean vr_20 = false ;
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; MST[rv.UOI2Mutator]MSP[N] } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; MST[PrimitiveReturnsMutator]MSP[N] } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[experimental.MemberVariableMutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { MST[NonVoidMethodCallMutator]MSP[N] fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; MST[rv.CRCR1Mutator]MSP[N] } boolean vr_20 = false ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR3Mutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR5Mutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[rv.CRCR3Mutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[InlineConstantMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; MST[ReturnValsMutator]MSP[N] } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[InlineConstantMutator]MSP[N] } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[NegateConditionalsMutator]MSP[N] return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR2Mutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ; MST[rv.CRCR3Mutator]MSP[N]
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; MST[rv.CRCR5Mutator]MSP[N] } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[N] fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { MST[NegateConditionalsMutator]MSP[N] for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return vr_25 . <vt_2 > fn_15 () ; } return new fn_16 ( vr_11 ) ; } @Override public vt_2 vr_19 () { return vl_4 ; } @Override public vt_2 fn_17 ( final vt_2 vr_12 ) { throw new fn_18 () ; } public int fn_19 () { int vr_26 = 0 ; MST[rv.CRCR5Mutator]MSP[N] for ( final Object vr_27 : fn_4 () . fn_12 () ) { vr_26 += vr_28 . size ( vr_27 ) ; } return vr_26 ; } protected Collection < vt_2 > fn_10 ( final int size ) { return vr_7 . vr_29 () ; } @Override
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[rv.CRCR6Mutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; MST[rv.CRCR3Mutator]MSP[N] } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { MST[rv.ROR5Mutator]MSP[N] vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; MST[VoidMethodCallMutator]MSP[S] } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
fn_4 () . fn_9 ( vr_11 , vr_21 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_20 = true ; } } else { vr_20 = vr_21 . add ( ( vt_2 ) vr_12 ) ; } return vr_20 ? vr_12 : null ; } @Override @SuppressWarnings ( lr_1 ) public void fn_11 ( final vr_2 < ? extends vt_1 , ? > vr_3 ) { if ( vr_3 instanceof vl_2 ) { for ( final vr_2 . vr_16 < ? extends vt_1 , Object > vr_18 : ( ( vl_2 < ? extends vt_1 , vt_2 > ) vr_3 ) . fn_8 () ) {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) { MST[NegateConditionalsMutator]MSP[N]
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; MST[rv.CRCR3Mutator]MSP[S] } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
fn_11 ( vr_18 . vr_22 () , ( Collection < vt_2 > ) vr_18 . vr_19 () ) ; } } else { for ( final vr_2 . vr_16 < ? extends vt_1 , ? > vr_18 : vr_3 . fn_8 () ) { fn_9 ( vr_18 . vr_22 () , vr_18 . vr_19 () ) ; MST[NonVoidMethodCallMutator]MSP[S] } } } @Override public vr_15 < vr_16 < vt_1 , Object > > fn_8 () { return super . fn_8 () ; } @Override @SuppressWarnings ( lr_1 ) public Collection < Object > fn_12 () {
Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( fn_12 . size () ) ; vr_21 . vr_24 ( fn_12 ) ; if ( vr_21 . size () > 0 ) { fn_4 () . fn_9 ( vr_11 , vr_21 ) ; vr_20 = true ; } } else { vr_20 = vr_21 . vr_24 ( fn_12 ) ; } return vr_20 ; MST[rv.UOI3Mutator]MSP[N] } public Iterator < vt_2 > iterator ( final Object vr_11 ) { if ( ! fn_14 ( vr_11 ) ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[ReturnValsMutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[rv.CRCR2Mutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; MST[ReturnValsMutator]MSP[N] } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; MST[rv.CRCR5Mutator]MSP[N] vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N]
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[rv.ROR2Mutator]MSP[N]
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; MST[BooleanFalseReturnValsMutator]MSP[N] } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { MST[rv.ROR1Mutator]MSP[N] return false ; } boolean vr_20 = false ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[rv.ROR3Mutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) { MST[NonVoidMethodCallMutator]MSP[N]
final Collection < vt_2 > vr_23 = vl_3 ; return ( Collection < Object > ) ( vr_23 != null ? vr_23 : ( vl_3 = new fn_13 () ) ) ; MST[EmptyObjectReturnValsMutator]MSP[N] } public boolean fn_7 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return false ; } return vr_21 . contains ( vr_12 ) ; } @SuppressWarnings ( lr_1 ) public Collection < vt_2 > fn_6 ( final Object vr_11 ) {
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[NonVoidMethodCallMutator]MSP[N] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
@SuppressWarnings ( { lr_1 , lr_2 } ) public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super Collection < vt_2 > > vr_3 ) { return vr_1 . <vt_1 , vt_2 , ArrayList > fn_1 ( ( vr_2 < vt_1 , ? super Collection > ) vr_3 , ArrayList . class ) ; MST[NullReturnValsMutator]MSP[S] } public static < vt_1 , vt_2 , vt_3 extends Collection < vt_2 > > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_2 < vt_1 , ? super vt_3 > vr_3 ,
if ( ( ( Collection < vt_2 > ) vr_18 . vr_19 () ) . contains ( vr_12 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] return true ; } } } return false ; } @Override @SuppressWarnings ( lr_1 ) public Object fn_9 ( final vt_1 vr_11 , final Object vr_12 ) { boolean vr_20 = false ; Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { vr_21 = fn_10 ( 1 ) ; vr_21 . add ( ( vt_2 ) vr_12 ) ; if ( vr_21 . size () > 0 ) {
@SuppressWarnings ( lr_1 ) private void fn_3 ( final tp_2 vr_9 ) throws IOException , vl_1 { vr_9 . vr_10 () ; vr_3 = ( vr_2 < vt_1 , Object > ) vr_9 . fn_3 () ; } @Override public void clear () { fn_4 () . clear () ; } @Override public boolean fn_5 ( final Object vr_11 , final Object vr_12 ) { final Collection < vt_2 > vr_13 = fn_6 ( vr_11 ) ; if ( vr_13 == null ) { return false ; MST[InlineConstantMutator]MSP[N] } final boolean vr_14 = vr_13 . remove ( vr_12 ) ;
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; MST[ArgumentPropagationMutator]MSP[N] } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ;
if ( vr_14 == false ) { return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; MST[ReturnValsMutator]MSP[S] } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
if ( vr_14 == false ) { MST[rv.ROR5Mutator]MSP[N] return false ; } if ( vr_13 . isEmpty () ) { remove ( vr_11 ) ; } return true ; } @Override @SuppressWarnings ( lr_1 ) public boolean fn_7 ( final Object vr_12 ) { final vr_15 < vr_2 . vr_16 < vt_1 , Object > > vr_17 = fn_4 () . fn_8 () ; if ( vr_17 != null ) { for ( final vr_2 . vr_16 < vt_1 , Object > vr_18 : vr_17 ) {
return ( Collection < vt_2 > ) fn_4 () . get ( vr_11 ) ; } public int size ( final Object vr_11 ) { final Collection < vt_2 > vr_21 = fn_6 ( vr_11 ) ; if ( vr_21 == null ) { return 0 ; } return vr_21 . size () ; } public boolean fn_11 ( final vt_1 vr_11 , final Collection < vt_2 > fn_12 ) { if ( fn_12 == null || fn_12 . size () == 0 ) { return false ; } boolean vr_20 = false ; MST[InlineConstantMutator]MSP[N]
