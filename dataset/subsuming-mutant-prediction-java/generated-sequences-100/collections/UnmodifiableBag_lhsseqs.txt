private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[NullReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; MST[NullReturnValsMutator]MSP[] } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[ConstructorCallMutator]MSP[] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
private void fn_4 ( final tp_2 vr_6 ) throws IOException , vl_2 { vr_6 . vr_7 () ; fn_5 ( ( Collection < vt_1 > ) vr_6 . fn_4 () ) ; } @Override public Iterator < vt_1 > iterator () { return vr_8 . <vt_1 > fn_6 ( fn_3 () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw new fn_7 () ; } @Override public boolean fn_8 ( final Collection < ? extends vt_1 > vr_9 ) { throw new fn_7 () ; } @Override public void clear () {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; MST[ReturnValsMutator]MSP[] } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[NullReturnValsMutator]MSP[] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < ? extends vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 > vr_3 = ( vr_1 < vt_1 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[ReturnValsMutator]MSP[] } private void fn_2 ( final tp_1 out ) throws IOException { out . vr_5 () ; out . fn_2 ( fn_3 () ) ; } @SuppressWarnings ( lr_1 )
