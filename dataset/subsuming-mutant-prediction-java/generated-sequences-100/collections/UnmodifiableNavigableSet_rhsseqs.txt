public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { return vr_2 ; } return new vr_3 <> ( vr_2 ) ; MST[NullReturnValsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { return vr_2 ; } return new vr_3 <> ( vr_2 ) ; MST[ReturnValsMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { return vr_2 ; } return new vr_3 <> ( vr_2 ) ; MST[ConstructorCallMutator]MSP[S] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final vr_1 < vt_1 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[N] return vr_2 ; } return new vr_3 <> ( vr_2 ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_2 () . iterator () ) ; } @Override public boolean add ( final vt_1 object ) { throw new fn_3 () ; } @Override public boolean fn_4 ( final Collection < ? extends vt_1 > vr_6 ) { throw new fn_3 () ; } @Override
