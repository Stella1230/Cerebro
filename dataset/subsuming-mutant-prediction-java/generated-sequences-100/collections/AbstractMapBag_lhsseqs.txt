public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI3Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NegateConditionalsMutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.UOI3Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI2Mutator]MSP[] return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.CRCR3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
if ( vr_19 < vr_18 . vr_3 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ; MST[rv.UOI1Mutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI3Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ROR3Mutator]MSP[] array [ vr_22 ++ ] = null ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[experimental.MemberVariableMutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.CRCR2Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; MST[NonVoidMethodCallMutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[MathMutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[rv.CRCR4Mutator]MSP[] } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.UOI2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[IncrementsMutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.ABSMutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOR2Mutator]MSP[] } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.CRCR6Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI2Mutator]MSP[] } } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.CRCR2Mutator]MSP[]
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[rv.UOI1Mutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ABSMutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[InlineConstantMutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR4Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[InlineConstantMutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[ReturnValsMutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} return array ; MST[ReturnValsMutator]MSP[] } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[ReturnValsMutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR4Mutator]MSP[]
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[ConditionalsBoundaryMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI2Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[ConditionalsBoundaryMutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[rv.UOI4Mutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] return false ; } vr_15 ++ ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOR2Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOR1Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI1Mutator]MSP[] return false ; } return false ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI3Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.UOI2Mutator]MSP[] return false ; } vr_15 ++ ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[PrimitiveReturnsMutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; MST[experimental.MemberVariableMutator]MSP[] final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI4Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[rv.UOI1Mutator]MSP[]
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[rv.ROR3Mutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[IncrementsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.AOD1Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; MST[NonVoidMethodCallMutator]MSP[] size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[NonVoidMethodCallMutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.UOI3Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR2Mutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI3Mutator]MSP[] return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOR1Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOR4Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.UOI2Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] array [ vr_22 ++ ] = null ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI4Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[NegateConditionalsMutator]MSP[] return false ; } } return true ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[InlineConstantMutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[rv.CRCR3Mutator]MSP[] } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ABSMutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[MathMutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.UOI1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[ConditionalsBoundaryMutator]MSP[] array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOD1Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } } return true ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.AOR3Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[rv.CRCR6Mutator]MSP[] } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.CRCR2Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[rv.ROR5Mutator]MSP[] return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[rv.UOI3Mutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI4Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[rv.ABSMutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[InlineConstantMutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[rv.ABSMutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[NonVoidMethodCallMutator]MSP[]
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOR3Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[MathMutator]MSP[] } } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR2Mutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR5Mutator]MSP[] return vr_46 . toString () ; }
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ROR1Mutator]MSP[] return false ; } vr_15 ++ ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOD2Mutator]MSP[]
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; MST[rv.CRCR5Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; MST[NonVoidMethodCallMutator]MSP[] for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOR1Mutator]MSP[] } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOR4Mutator]MSP[] } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOD2Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[rv.UOI1Mutator]MSP[] size += vr_2 ; } } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[rv.CRCR3Mutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[rv.CRCR6Mutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ABSMutator]MSP[] array [ vr_22 ++ ] = null ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.CRCR6Mutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI4Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI3Mutator]MSP[] } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI4Mutator]MSP[] } } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOR4Mutator]MSP[]
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[NegateConditionalsMutator]MSP[] array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; MST[InlineConstantMutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[rv.UOI2Mutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR2Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.UOI3Mutator]MSP[] return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[rv.CRCR5Mutator]MSP[] } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[experimental.MemberVariableMutator]MSP[] } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; MST[InlineConstantMutator]MSP[] if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[experimental.NakedReceiverMutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[rv.ROR3Mutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { MST[NonVoidMethodCallMutator]MSP[] final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[NonVoidMethodCallMutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[MathMutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[InlineConstantMutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[rv.ABSMutator]MSP[]
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.CRCR3Mutator]MSP[]
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[rv.UOI2Mutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[ReturnValsMutator]MSP[] } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[rv.CRCR2Mutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.ABSMutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[rv.ABSMutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR5Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.UOI4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[rv.UOI4Mutator]MSP[]
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[rv.UOI1Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; MST[ReturnValsMutator]MSP[] } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.AOR3Mutator]MSP[] return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[NonVoidMethodCallMutator]MSP[] return vr_46 . toString () ; }
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; MST[ReturnValsMutator]MSP[] } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI4Mutator]MSP[] return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR2Mutator]MSP[] return vr_46 . toString () ; }
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[rv.ABSMutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[NonVoidMethodCallMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[experimental.RemoveIncrementsMutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[PrimitiveReturnsMutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; MST[NonVoidMethodCallMutator]MSP[] if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[rv.ROR3Mutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[rv.ROR5Mutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[rv.UOI2Mutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { MST[rv.ROR5Mutator]MSP[] vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[rv.ROR2Mutator]MSP[] return false ; } } return true ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.AOD1Mutator]MSP[] return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR5Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[rv.CRCR2Mutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[rv.ROR4Mutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
vr_46 . append ( '[' ) ; MST[rv.CRCR3Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[InlineConstantMutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR3Mutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI1Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; MST[ArgumentPropagationMutator]MSP[] size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[rv.UOI4Mutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ; MST[ConstructorCallMutator]MSP[]
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[NegateConditionalsMutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.UOI2Mutator]MSP[] array [ vr_22 ++ ] = null ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOD2Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[InlineConstantMutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[rv.ROR4Mutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; MST[rv.CRCR5Mutator]MSP[] final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { MST[NegateConditionalsMutator]MSP[] vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[rv.UOI1Mutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[rv.UOI2Mutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; MST[ReturnValsMutator]MSP[] }
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[rv.UOI2Mutator]MSP[]
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.CRCR5Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR5Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
vr_46 . append ( '[' ) ; MST[rv.CRCR4Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; MST[ReturnValsMutator]MSP[] } final StringBuilder vr_46 = new StringBuilder () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ROR3Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.UOI3Mutator]MSP[]
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; MST[NonVoidMethodCallMutator]MSP[] out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[rv.ROR3Mutator]MSP[] return false ; } } return true ; } @Override
public int fn_9 () { int vr_45 = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[rv.ROR5Mutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI2Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOD2Mutator]MSP[] } } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[rv.UOI1Mutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; MST[ReturnValsMutator]MSP[] } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; MST[VoidMethodCallMutator]MSP[] size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[rv.ROR4Mutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ROR5Mutator]MSP[] array [ vr_22 ++ ] = null ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[NegateConditionalsMutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { MST[NegateConditionalsMutator]MSP[] vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[rv.CRCR6Mutator]MSP[] } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[rv.CRCR3Mutator]MSP[] } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.CRCR3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI4Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[InlineConstantMutator]MSP[] return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOD1Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.UOI3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[experimental.MemberVariableMutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI2Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR4Mutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI4Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.ABSMutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.UOI1Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOR2Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.UOI4Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[InlineConstantMutator]MSP[] } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR4Mutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI1Mutator]MSP[] return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI2Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ROR2Mutator]MSP[] array [ vr_22 ++ ] = null ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[IncrementsMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[rv.CRCR5Mutator]MSP[] } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; MST[VoidMethodCallMutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.CRCR6Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
} return array ; MST[NullReturnValsMutator]MSP[] } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[rv.ROR5Mutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[NegateConditionalsMutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[ReturnValsMutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR4Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[rv.CRCR3Mutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[ReturnValsMutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[rv.CRCR1Mutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOR3Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOD1Mutator]MSP[] } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.CRCR5Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.ABSMutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[ReturnValsMutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR5Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI2Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR4Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOR3Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR3Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; MST[rv.CRCR1Mutator]MSP[] if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[rv.ROR2Mutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.UOI1Mutator]MSP[] return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.CRCR6Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.AOR3Mutator]MSP[] } } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; MST[ArgumentPropagationMutator]MSP[] if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; MST[rv.CRCR3Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[ConditionalsBoundaryMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[rv.UOI3Mutator]MSP[] size += vr_2 ; } } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[rv.ROR3Mutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[rv.ROR3Mutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOD1Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[rv.CRCR3Mutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; MST[ArgumentPropagationMutator]MSP[] size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI2Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.UOI1Mutator]MSP[] array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.ABSMutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOR2Mutator]MSP[]
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[NegateConditionalsMutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.CRCR2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ABSMutator]MSP[] return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { MST[rv.ROR5Mutator]MSP[] vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[rv.CRCR3Mutator]MSP[] } return false ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; MST[NonVoidMethodCallMutator]MSP[] int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ABSMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[rv.UOI1Mutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[ConditionalsBoundaryMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ROR4Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.UOI4Mutator]MSP[]
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[NonVoidMethodCallMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.AOR1Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR3Mutator]MSP[]
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[]
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[experimental.MemberVariableMutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI1Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI1Mutator]MSP[] } } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[MathMutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.ROR4Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOR4Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[IncrementsMutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[ReturnValsMutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOR1Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.ABSMutator]MSP[] } } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[rv.UOI1Mutator]MSP[]
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NegateConditionalsMutator]MSP[]
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[experimental.MemberVariableMutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[rv.ROR2Mutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[rv.UOI2Mutator]MSP[]
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ABSMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[BooleanFalseReturnValsMutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[InlineConstantMutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI1Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI3Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; MST[ArgumentPropagationMutator]MSP[] if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI2Mutator]MSP[] return false ; } return false ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; MST[NonVoidMethodCallMutator]MSP[] vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] return false ; } vr_15 ++ ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ABSMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[rv.UOI3Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[InlineConstantMutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { MST[NonVoidMethodCallMutator]MSP[] if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; MST[InlineConstantMutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[ReturnValsMutator]MSP[] } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[rv.UOI4Mutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[rv.ROR1Mutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ABSMutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ROR1Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR5Mutator]MSP[]
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[rv.UOI4Mutator]MSP[]
public int fn_9 () { int vr_45 = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI3Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[rv.CRCR6Mutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOR2Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI3Mutator]MSP[] } } @Override
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; MST[NullReturnValsMutator]MSP[] } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[rv.CRCR1Mutator]MSP[] } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.UOI1Mutator]MSP[]
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[rv.CRCR4Mutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.UOI3Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.UOI4Mutator]MSP[] array [ vr_22 ++ ] = null ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[rv.ROR1Mutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; MST[ReturnValsMutator]MSP[] } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[rv.CRCR1Mutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[rv.ROR1Mutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[ConstructorCallMutator]MSP[] size += vr_2 ; } } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[rv.CRCR1Mutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[ReturnValsMutator]MSP[] } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.CRCR3Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[NegateConditionalsMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; MST[experimental.NakedReceiverMutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
vr_46 . append ( '[' ) ; MST[rv.CRCR6Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[InlineConstantMutator]MSP[] } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ROR4Mutator]MSP[] return false ; } vr_15 ++ ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[rv.ROR2Mutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.CRCR4Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI3Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR2Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI3Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public int fn_9 () { int vr_45 = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[rv.UOI4Mutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[experimental.RemoveIncrementsMutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[rv.ABSMutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[VoidMethodCallMutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI2Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_46 . append ( '[' ) ; MST[rv.CRCR1Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR1Mutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI2Mutator]MSP[] } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR5Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[rv.CRCR5Mutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.AOD2Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; MST[experimental.MemberVariableMutator]MSP[] } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[rv.UOI2Mutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR2Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean equals ( final Object object ) { if ( object == this ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } } return true ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[rv.UOI3Mutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[rv.UOI4Mutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[] vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR1Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ; MST[NonVoidMethodCallMutator]MSP[]
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR2Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ; MST[experimental.MemberVariableMutator]MSP[]
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.CRCR5Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR2Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR5Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR3Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR1Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR4Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI4Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; MST[NonVoidMethodCallMutator]MSP[] } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI3Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR5Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR3Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ROR4Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.ROR3Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.ROR4Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI2Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[InlineConstantMutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.ABSMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[NegateConditionalsMutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ABSMutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[NegateConditionalsMutator]MSP[] vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR3Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.UOI4Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR1Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; MST[NonVoidMethodCallMutator]MSP[] vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR2Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR4Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR5Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ROR4Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR5Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ABSMutator]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[NonVoidMethodCallMutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[rv.ROR1Mutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[experimental.MemberVariableMutator]MSP[] }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR3Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR1Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ROR2Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR5Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR3Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[rv.ROR5Mutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[rv.ROR3Mutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.ABSMutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[NegateConditionalsMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; MST[rv.AOR4Mutator]MSP[] return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; MST[ReturnValsMutator]MSP[] } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.UOI3Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[experimental.MemberVariableMutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.UOI1Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.UOI2Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.AOR1Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[rv.CRCR5Mutator]MSP[] }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[NonVoidMethodCallMutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[rv.CRCR2Mutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[NegateConditionalsMutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.UOI4Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR4Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[rv.CRCR1Mutator]MSP[] }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[RemoveConditionalMutator_ORDER_IF]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR1Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI4Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR5Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR4Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.AOD2Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[NegateConditionalsMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ROR5Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[rv.CRCR6Mutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.UOI4Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ROR1Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[ConditionalsBoundaryMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[rv.ROR4Mutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[NegateConditionalsMutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI1Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.AOR2Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[rv.CRCR3Mutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.UOI3Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[rv.CRCR6Mutator]MSP[] }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI3Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { MST[rv.UOI1Mutator]MSP[] vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; MST[NullReturnValsMutator]MSP[] } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.AOD1Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[InlineConstantMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[rv.CRCR5Mutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[InlineConstantMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.UOI3Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.CRCR6Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.CRCR2Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.CRCR4Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; MST[rv.UOI2Mutator]MSP[] return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[experimental.MemberVariableMutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[InlineConstantMutator]MSP[] }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.UOI2Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.UOI3Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.UOI1Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; MST[rv.UOI1Mutator]MSP[] return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; MST[VoidMethodCallMutator]MSP[] } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; MST[rv.CRCR3Mutator]MSP[] }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; MST[ConstructorCallMutator]MSP[] } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.AOR3Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR2Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI2Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ABSMutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[MathMutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.ROR3Mutator]MSP[] throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR6Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { MST[rv.UOI1Mutator]MSP[] throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[InlineConstantMutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; MST[rv.CRCR4Mutator]MSP[] vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { MST[rv.ROR3Mutator]MSP[] vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR2Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; MST[rv.CRCR6Mutator]MSP[] } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { MST[rv.ROR2Mutator]MSP[] throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
vl_3 = vr_10 . vr_16 () . vr_3 ; } vl_5 = true ; vl_3 -- ; return vr_10 . vr_17 () ; } @Override public void remove () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_5 == false ) { throw new fn_5 () ; } final vt_2 vr_18 = vr_10 . vr_16 () ; if ( vr_18 . vr_3 > 1 ) { vr_18 . vr_3 -- ; MST[rv.CRCR3Mutator]MSP[] } else { vr_13 . remove () ; } vr_14 . size -- ; vl_5 = false ; }
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; MST[EmptyObjectReturnValsMutator]MSP[] } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[NegateConditionalsMutator]MSP[] return false ; } vr_15 ++ ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; MST[EmptyObjectReturnValsMutator]MSP[] }
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[rv.UOI2Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[InlineConstantMutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; MST[EmptyObjectReturnValsMutator]MSP[] } final StringBuilder vr_46 = new StringBuilder () ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI2Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; MST[NonVoidMethodCallMutator]MSP[] final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { MST[NegateConditionalsMutator]MSP[] final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI4Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.ABSMutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[NonVoidMethodCallMutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR2Mutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; MST[ConstructorCallMutator]MSP[] } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ROR4Mutator]MSP[] array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[rv.CRCR1Mutator]MSP[] } @Override public boolean remove ( final Object object ) {
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; MST[ArgumentPropagationMutator]MSP[] } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[rv.CRCR3Mutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; MST[NonVoidMethodCallMutator]MSP[] size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; MST[ReturnValsMutator]MSP[] } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[rv.ROR1Mutator]MSP[] return false ; } } return true ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.UOI2Mutator]MSP[]
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ROR2Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.CRCR6Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[rv.UOI3Mutator]MSP[]
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[rv.ROR3Mutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[rv.ROR2Mutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI4Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { MST[rv.ROR5Mutator]MSP[] final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ROR2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[experimental.NakedReceiverMutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI3Mutator]MSP[] return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR1Mutator]MSP[] return vr_46 . toString () ; }
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[rv.ROR2Mutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; MST[rv.ABSMutator]MSP[] } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.ABSMutator]MSP[]
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[experimental.RemoveIncrementsMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ; MST[IncrementsMutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[experimental.NakedReceiverMutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[rv.UOI1Mutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.UOI4Mutator]MSP[] return false ; } vr_15 ++ ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; MST[rv.UOI3Mutator]MSP[] } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ROR5Mutator]MSP[] return false ; } vr_15 ++ ;
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] array [ vr_22 ++ ] = null ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[rv.ROR5Mutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.UOI3Mutator]MSP[] array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; MST[rv.CRCR1Mutator]MSP[] final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.UOI4Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[rv.ROR2Mutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[rv.ABSMutator]MSP[] size += vr_2 ; } } @Override
vr_46 . append ( '[' ) ; MST[rv.CRCR2Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.CRCR4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[rv.CRCR5Mutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[rv.CRCR6Mutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR3Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[rv.UOI3Mutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[rv.ROR5Mutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOD1Mutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; MST[rv.CRCR6Mutator]MSP[] if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.AOD2Mutator]MSP[] return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[InlineConstantMutator]MSP[]
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[rv.ABSMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR3Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR6Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[ArgumentPropagationMutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[rv.ABSMutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI4Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[rv.ROR4Mutator]MSP[] return false ; } } return true ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[ReturnValsMutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOR1Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; MST[rv.CRCR3Mutator]MSP[] if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI1Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; MST[NonVoidMethodCallMutator]MSP[] }
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR5Mutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.UOI1Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { MST[rv.ROR1Mutator]MSP[] array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.CRCR4Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[rv.CRCR2Mutator]MSP[] } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOR1Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; MST[rv.CRCR5Mutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR6Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
array = vr_31 ; } int vr_22 = 0 ; MST[rv.CRCR6Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; MST[InlineConstantMutator]MSP[] } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[InlineConstantMutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOD2Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[ArgumentPropagationMutator]MSP[] size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.UOI4Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { MST[rv.ROR5Mutator]MSP[] return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR1Mutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR3Mutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[NegateConditionalsMutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOR4Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOR4Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI1Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; MST[rv.CRCR1Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR4Mutator]MSP[] return vr_46 . toString () ; }
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI3Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; MST[rv.CRCR3Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; MST[InlineConstantMutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI2Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[rv.ROR5Mutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[MathMutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.UOI3Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; MST[rv.UOI2Mutator]MSP[] } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.AOR4Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOR3Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[rv.UOI2Mutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[rv.UOI1Mutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[experimental.MemberVariableMutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI4Mutator]MSP[] } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[ConstructorCallMutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.ROR2Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { MST[rv.UOI1Mutator]MSP[] vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; MST[NullReturnValsMutator]MSP[] } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[rv.CRCR6Mutator]MSP[] } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.UOI1Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; MST[NonVoidMethodCallMutator]MSP[] while ( vr_8 . hasNext () ) {
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; MST[rv.CRCR6Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[rv.UOI2Mutator]MSP[] size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.AOD1Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; MST[NonVoidMethodCallMutator]MSP[] final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public int fn_9 () { int vr_45 = 0 ; MST[InlineConstantMutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.CRCR4Mutator]MSP[]
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ; MST[NonVoidMethodCallMutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; MST[experimental.NakedReceiverMutator]MSP[] if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; MST[VoidMethodCallMutator]MSP[] out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[IncrementsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[NonVoidMethodCallMutator]MSP[] size += vr_2 ; } } @Override
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; MST[rv.CRCR1Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) {
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR1Mutator]MSP[]
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; MST[rv.UOI3Mutator]MSP[] } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[NegateConditionalsMutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ABSMutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ROR2Mutator]MSP[] return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[rv.CRCR1Mutator]MSP[] } return false ; } @Override
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[NonVoidMethodCallMutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; MST[rv.AOR2Mutator]MSP[] size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; MST[PrimitiveReturnsMutator]MSP[] } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { MST[NegateConditionalsMutator]MSP[] return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[rv.ROR4Mutator]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ; MST[rv.UOI4Mutator]MSP[]
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NegateConditionalsMutator]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { MST[NegateConditionalsMutator]MSP[] return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ROR4Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.ABSMutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[NegateConditionalsMutator]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.UOI4Mutator]MSP[] return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR1Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.CRCR1Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOD2Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[NegateConditionalsMutator]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOR3Mutator]MSP[]
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[rv.ROR4Mutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[rv.CRCR6Mutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { MST[NonVoidMethodCallMutator]MSP[] out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[rv.ROR4Mutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR3Mutator]MSP[] return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[InlineConstantMutator]MSP[] } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOD2Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.UOI3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { MST[rv.ROR1Mutator]MSP[] return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[rv.UOI3Mutator]MSP[]
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.ABSMutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; MST[NullReturnValsMutator]MSP[] } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( fn_2 ( vr_10 ) < vr_7 . fn_2 ( vr_10 ) ) { return false ; } } return true ; } @Override public Iterator < vt_1 > iterator () { return new vr_12 <> ( this ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean hasNext () { return vl_3 > 0 || vr_13 . hasNext () ; } @Override public vt_1 vr_11 () { if ( vr_14 . vr_15 != vl_4 ) { throw new fn_4 () ; } if ( vl_3 == 0 ) { vr_10 = vr_13 . vr_11 () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[rv.AOR2Mutator]MSP[] return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; MST[InlineConstantMutator]MSP[] final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean equals ( final Object object ) { if ( object == this ) { MST[rv.ROR5Mutator]MSP[] return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI2Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[NonVoidMethodCallMutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOR3Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; MST[rv.CRCR5Mutator]MSP[] } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[NegateConditionalsMutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.AOR1Mutator]MSP[]
public boolean equals ( final Object object ) { if ( object == this ) { MST[NegateConditionalsMutator]MSP[] return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[ConditionalsBoundaryMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; MST[experimental.MemberVariableMutator]MSP[] return false ; } return false ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; MST[ReturnValsMutator]MSP[] } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ; MST[NonVoidMethodCallMutator]MSP[]
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[ReturnValsMutator]MSP[] } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ; MST[rv.CRCR5Mutator]MSP[]
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ; MST[rv.ABSMutator]MSP[]
public boolean equals ( final Object vr_28 ) { if ( vr_28 instanceof vt_2 == false ) { return false ; } return ( ( vt_2 ) vr_28 ) . vr_3 == vr_3 ; } @Override public int fn_9 () { return vr_3 ; } @Override public Object [] toArray () { final Object [] vr_24 = new Object [ size () ] ; int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[]
} return array ; } @Override public vr_33 < vt_1 > vr_9 () { if ( vr_9 == null ) { vr_9 = vr_34 . <vt_1 > fn_11 ( vl_1 . vr_29 () ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_9 ; } protected void fn_12 ( final tp_1 out ) throws IOException { out . vr_35 ( vl_1 . size () ) ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { out . vr_39 ( vr_37 . vr_17 () ) ; out . vr_35 ( vr_37 . vr_16 () . vr_3 ) ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[experimental.MemberVariableMutator]MSP[] } } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; MST[rv.CRCR5Mutator]MSP[] if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; MST[BooleanTrueReturnValsMutator]MSP[] } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { MST[rv.ROR5Mutator]MSP[] return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[InlineConstantMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; MST[rv.UOI4Mutator]MSP[] size += vr_2 ; } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; MST[rv.CRCR3Mutator]MSP[] final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.AOD1Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; MST[rv.CRCR6Mutator]MSP[] final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; MST[rv.CRCR5Mutator]MSP[] } if ( vr_19 <= 0 ) { return false ; } vr_15 ++ ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.UOI1Mutator]MSP[] } } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[rv.UOI3Mutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; MST[rv.ABSMutator]MSP[] } } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; MST[NonVoidMethodCallMutator]MSP[] vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; MST[rv.CRCR1Mutator]MSP[] } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[InlineConstantMutator]MSP[] } @Override public boolean remove ( final Object object ) {
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; MST[rv.UOI4Mutator]MSP[] } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; MST[rv.UOI1Mutator]MSP[] return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR3Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; MST[ConstructorCallMutator]MSP[] } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[rv.CRCR4Mutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.CRCR5Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public int fn_9 () { int vr_45 = 0 ; for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { MST[rv.ROR1Mutator]MSP[] return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ; MST[rv.UOI3Mutator]MSP[]
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; MST[BooleanFalseReturnValsMutator]MSP[] } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; MST[rv.UOI3Mutator]MSP[] } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.ABSMutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[experimental.NakedReceiverMutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; MST[rv.UOI1Mutator]MSP[] } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[experimental.RemoveIncrementsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
if ( vr_19 < vr_18 . vr_3 ) { vr_18 . vr_3 -= vr_19 ; size -= vr_19 ; } else { vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; MST[rv.UOI1Mutator]MSP[] } return true ; } @Override public boolean fn_7 ( final Collection < ? > vr_5 ) { boolean vr_24 = false ; if ( vr_5 != null ) { final Iterator < ? > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_21 = remove ( vr_22 . vr_11 () , 1 ) ;
vr_24 = vr_24 || vr_21 ; } } return vr_24 ; MST[rv.UOI4Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_5 ) { if ( vr_5 instanceof vl_2 ) { return fn_8 ( ( vl_2 < ? > ) vr_5 ) ; } return fn_8 ( new vr_6 <> ( vr_5 ) ) ; } boolean fn_8 ( final vl_2 < ? > vr_7 ) { boolean vr_24 = false ; final vl_2 < vt_1 > vr_25 = new vr_6 <> () ; final Iterator < vt_1 > vr_22 = vr_9 () . iterator () ;
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.ABSMutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.CRCR5Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI1Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[rv.ROR3Mutator]MSP[] return false ; } vr_15 ++ ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.UOI3Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[MathMutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[NegateConditionalsMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { return false ; } } return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[rv.ROR5Mutator]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
protected vr_1 < vt_1 , vt_2 > fn_1 () { return vl_1 ; } @Override public int size () { return size ; } @Override public boolean isEmpty () { return vl_1 . isEmpty () ; } @Override public int fn_2 ( final Object object ) { final vt_2 vr_2 = vl_1 . get ( object ) ; if ( vr_2 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_2 . vr_3 ; } return 0 ; } @Override public boolean contains ( final Object object ) { return vl_1 . vr_4 ( object ) ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; MST[rv.UOI2Mutator]MSP[] if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[MathMutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[experimental.MemberVariableMutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.UOI1Mutator]MSP[] vr_24 [ vr_22 ++ ] = vr_10 ; } } return vr_24 ; } @Override public < vt_3 > vt_3 [] toArray ( vt_3 [] array ) { final int size = size () ; if ( array . length < size ) { @SuppressWarnings ( lr_1 ) final vt_3 [] vr_31 = ( vt_3 [] ) Array . vr_32 ( array . getClass () . fn_10 () , size ) ;
array = vr_31 ; } int vr_22 = 0 ; MST[rv.CRCR5Mutator]MSP[] final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.ROR4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.AOR2Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[rv.CRCR6Mutator]MSP[] return vr_46 . toString () ; }
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; MST[rv.AOR2Mutator]MSP[] if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; MST[rv.ABSMutator]MSP[] vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { MST[rv.ROR1Mutator]MSP[] final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; MST[experimental.NakedReceiverMutator]MSP[] return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[rv.CRCR3Mutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { MST[rv.ROR5Mutator]MSP[] final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; } @Override
public boolean equals ( final Object object ) { if ( object == this ) { return true ; } if ( object instanceof vl_2 == false ) { return false ; } final vl_2 < ? > vr_7 = ( vl_2 < ? > ) object ; if ( vr_7 . size () != size () ) { return false ; } for ( final vt_1 vr_44 : vl_1 . vr_29 () ) { if ( vr_7 . fn_2 ( vr_44 ) != fn_2 ( vr_44 ) ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } } return true ; } @Override
@Override public boolean add ( final vt_1 object ) { return add ( object , 1 ) ; } @Override public boolean add ( final vt_1 object , final int vr_19 ) { vr_15 ++ ; if ( vr_19 > 0 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; size += vr_19 ; if ( vr_18 == null ) { vl_1 . vr_20 ( object , new vt_2 ( vr_19 ) ) ; return true ; } vr_18 . vr_3 += vr_19 ; return false ; } return false ; MST[rv.CRCR5Mutator]MSP[] } @Override
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { MST[rv.ROR5Mutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
vr_46 . append ( '[' ) ; final Iterator < vt_1 > vr_8 = vr_9 () . iterator () ; while ( vr_8 . hasNext () ) { final Object vr_10 = vr_8 . vr_11 () ; final int vr_2 = fn_2 ( vr_10 ) ; vr_46 . append ( vr_2 ) ; vr_46 . append ( ':' ) ; MST[rv.CRCR1Mutator]MSP[] vr_46 . append ( vr_10 ) ; if ( vr_8 . hasNext () ) { vr_46 . append ( ',' ) ; } } vr_46 . append ( ']' ) ; return vr_46 . toString () ; }
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; MST[rv.UOI3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { vr_15 ++ ; vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } vr_15 ++ ; vl_1 . remove ( object ) ; size -= vr_18 . vr_3 ; return true ; } @Override public boolean remove ( final Object object , final int vr_19 ) { final vt_2 vr_18 = vl_1 . get ( object ) ; if ( vr_18 == null ) { return false ; } if ( vr_19 <= 0 ) { MST[ConditionalsBoundaryMutator]MSP[] return false ; } vr_15 ++ ;
} } protected void fn_13 ( final vr_1 < vt_1 , vt_2 > vl_1 , final tp_2 vr_40 ) throws IOException , vl_6 { this . vl_1 = vl_1 ; final int vr_41 = vr_40 . vr_42 () ; for ( int vr_22 = 0 ; vr_22 < vr_41 ; vr_22 ++ ) { MST[rv.ABSMutator]MSP[] @SuppressWarnings ( lr_1 ) final vt_1 vr_28 = ( vt_1 ) vr_40 . vr_43 () ; final int vr_2 = vr_40 . vr_42 () ; vl_1 . vr_20 ( vr_28 , new vt_2 ( vr_2 ) ) ; size += vr_2 ; } } @Override
public int fn_9 () { int vr_45 = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final vr_36 < vt_1 , vt_2 > vr_37 : vl_1 . vr_38 () ) { final vt_1 vr_44 = vr_37 . vr_17 () ; final vt_2 vr_2 = vr_37 . vr_16 () ; vr_45 += ( vr_44 == null ? 0 : vr_44 . fn_9 () ) ^ vr_2 . vr_3 ; } return vr_45 ; } @Override public String toString () { if ( size () == 0 ) { return lr_2 ; } final StringBuilder vr_46 = new StringBuilder () ;
array = vr_31 ; } int vr_22 = 0 ; final Iterator < vt_1 > vr_8 = vl_1 . vr_29 () . iterator () ; while ( vr_8 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] final vt_1 vr_10 = vr_8 . vr_11 () ; for ( int vr_30 = fn_2 ( vr_10 ) ; vr_30 > 0 ; vr_30 -- ) { @SuppressWarnings ( lr_1 ) final vt_3 vr_31 = ( vt_3 ) vr_10 ; array [ vr_22 ++ ] = vr_31 ; } } while ( vr_22 < array . length ) { array [ vr_22 ++ ] = null ;
public boolean fn_6 ( final Collection < ? extends vt_1 > vr_5 ) { boolean vr_21 = false ; final Iterator < ? extends vt_1 > vr_22 = vr_5 . iterator () ; while ( vr_22 . hasNext () ) { final boolean vr_23 = add ( vr_22 . vr_11 () ) ; vr_21 = vr_21 || vr_23 ; } return vr_21 ; } @Override public void clear () { vr_15 ++ ; MST[experimental.MemberVariableMutator]MSP[] vl_1 . clear () ; size = 0 ; } @Override public boolean remove ( final Object object ) {
