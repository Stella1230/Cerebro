} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.UOI2Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI4Mutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; MST[NonVoidMethodCallMutator]MSP[] Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[NonVoidMethodCallMutator]MSP[] return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.UOI1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ROR2Mutator]MSP[] vr_8 = array ;
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[rv.UOI2Mutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[rv.ROR1Mutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] throw new IllegalArgumentException (
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[rv.ROR5Mutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { MST[rv.ROR5Mutator]MSP[] return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[MathMutator]MSP[] } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.UOI1Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[NonVoidMethodCallMutator]MSP[] throw new IllegalArgumentException (
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ABSMutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[rv.ROR4Mutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOR4Mutator]MSP[] } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[NegateConditionalsMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[rv.ROR2Mutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[NegateConditionalsMutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR6Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; MST[VoidMethodCallMutator]MSP[] } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI2Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[rv.ABSMutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[rv.CRCR1Mutator]MSP[] }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[rv.ROR3Mutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[] throw new IllegalArgumentException (
boolean vr_21 = false ; MST[rv.CRCR5Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[InlineConstantMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR2Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[rv.CRCR5Mutator]MSP[] }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[NonVoidMethodCallMutator]MSP[] } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR1Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR5Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[rv.UOI1Mutator]MSP[] }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; MST[rv.UOI4Mutator]MSP[] } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; MST[InlineConstantMutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; MST[rv.CRCR1Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[rv.ROR4Mutator]MSP[] throw new IllegalArgumentException (
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[NonVoidMethodCallMutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; MST[ReturnValsMutator]MSP[] } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[BooleanTrueReturnValsMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { MST[NegateConditionalsMutator]MSP[] throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[NonVoidMethodCallMutator]MSP[] throw new IllegalArgumentException (
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ROR3Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[rv.ROR5Mutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI3Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI2Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { MST[NonVoidMethodCallMutator]MSP[] final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.UOI1Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[rv.CRCR3Mutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.CRCR1Mutator]MSP[] } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[rv.CRCR3Mutator]MSP[] }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; MST[ReturnValsMutator]MSP[] } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[rv.ROR3Mutator]MSP[] return false ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[IncrementsMutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[rv.UOI3Mutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.UOI4Mutator]MSP[] } return vr_21 ; } @Override
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { MST[NegateConditionalsMutator]MSP[] for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
@Override public int size () { int size = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
if ( vr_2 . contains ( vr_3 ) ) { MST[rv.ROR2Mutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[rv.CRCR6Mutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; MST[NonVoidMethodCallMutator]MSP[] } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[experimental.RemoveIncrementsMutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[InlineConstantMutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.ABSMutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[ReturnValsMutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR4Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[ConditionalsBoundaryMutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[rv.ROR3Mutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[InlineConstantMutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.UOI4Mutator]MSP[] vr_8 = array ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOR2Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.UOI1Mutator]MSP[] vr_8 = array ;
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[rv.ROR3Mutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[rv.CRCR5Mutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[rv.CRCR3Mutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { MST[rv.ROR5Mutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { MST[NegateConditionalsMutator]MSP[] return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI3Mutator]MSP[] } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[rv.CRCR3Mutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[PrimitiveReturnsMutator]MSP[] }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR5Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vl_2 == null ) { MST[NegateConditionalsMutator]MSP[] throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[rv.ROR3Mutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOD2Mutator]MSP[] } return vr_33 ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.ABSMutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[rv.ROR3Mutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; MST[rv.CRCR5Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI1Mutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[NonVoidMethodCallMutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.UOI3Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI3Mutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ABSMutator]MSP[] vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ROR5Mutator]MSP[] vr_8 = array ;
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; MST[NonVoidMethodCallMutator]MSP[] } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.UOI4Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; MST[VoidMethodCallMutator]MSP[] if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[rv.UOI3Mutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[InlineConstantMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[rv.ROR4Mutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; MST[ConstructorCallMutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
@Override MST[experimental.MemberVariableMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[rv.CRCR5Mutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; MST[rv.CRCR5Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.ABSMutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; MST[rv.CRCR1Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[NonVoidMethodCallMutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR6Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[rv.UOI1Mutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.ABSMutator]MSP[] } return vr_33 ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI4Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ROR2Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.OBBN2Mutator]MSP[] } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR2Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.ROR5Mutator]MSP[] } return vr_33 ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[rv.ROR1Mutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.UOI2Mutator]MSP[] vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
@Override MST[experimental.MemberVariableMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[NegateConditionalsMutator]MSP[] vr_8 = array ;
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[NonVoidMethodCallMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR1Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[rv.CRCR6Mutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOR3Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[InlineConstantMutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } return vr_33 ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[rv.CRCR6Mutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[rv.ROR4Mutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[rv.ROR1Mutator]MSP[] throw new IllegalArgumentException (
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[rv.ROR5Mutator]MSP[] throw new IllegalArgumentException (
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[MathMutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_15 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
@Override public int size () { int size = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[rv.CRCR2Mutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.UOI4Mutator]MSP[] } return vr_33 ; }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { MST[rv.ROR5Mutator]MSP[] for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
if ( vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[rv.CRCR1Mutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[ReturnValsMutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.UOI4Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
vl_1 . remove ( vr_15 ) ; MST[NonVoidMethodCallMutator]MSP[] } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[ReturnValsMutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[rv.ROR1Mutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { MST[NegateConditionalsMutator]MSP[] throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[rv.ROR1Mutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI3Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR3Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[experimental.NakedReceiverMutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOD1Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[rv.ABSMutator]MSP[] }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.CRCR5Mutator]MSP[] } return vr_33 ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[rv.ROR2Mutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[rv.ROR1Mutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[InlineConstantMutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[rv.ROR4Mutator]MSP[] return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[rv.UOI1Mutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_15 != null ) { MST[NegateConditionalsMutator]MSP[] for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.CRCR6Mutator]MSP[] } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[rv.UOI2Mutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[IncrementsMutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[ReturnValsMutator]MSP[] } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.UOI1Mutator]MSP[] } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.UOI3Mutator]MSP[] } return vr_33 ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI4Mutator]MSP[] } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; MST[ReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.OBBN1Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI3Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; MST[ReturnValsMutator]MSP[] } @Override public Object [] toArray () {
boolean vr_21 = false ; MST[rv.CRCR6Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[rv.ROR4Mutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.ABSMutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[NegateConditionalsMutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
@Override MST[ConstructorCallMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[rv.UOI4Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; MST[ReturnValsMutator]MSP[] } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[NonVoidMethodCallMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[rv.CRCR3Mutator]MSP[] }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[rv.UOI4Mutator]MSP[] }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException ( MST[ConstructorCallMutator]MSP[]
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.OBBN3Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; MST[rv.UOI1Mutator]MSP[] } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[NegateConditionalsMutator]MSP[] return false ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; MST[VoidMethodCallMutator]MSP[] } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOR1Mutator]MSP[] } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[ReturnValsMutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; MST[NullReturnValsMutator]MSP[] } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; MST[rv.CRCR6Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; MST[NullReturnValsMutator]MSP[] } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
if ( vr_2 . contains ( vr_3 ) ) { MST[rv.ROR1Mutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[InlineConstantMutator]MSP[] }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ROR1Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.OBBN3Mutator]MSP[] } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[ReturnValsMutator]MSP[] }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; MST[NullReturnValsMutator]MSP[] } @Override public Object [] toArray () {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.ABSMutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.UOI4Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI2Mutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; MST[rv.ABSMutator]MSP[] } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ROR4Mutator]MSP[] vr_8 = array ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[PrimitiveReturnsMutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[rv.UOI4Mutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.UOI3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; MST[ArgumentPropagationMutator]MSP[] } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
@Override public int size () { int size = 0 ; MST[InlineConstantMutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[ConditionalsBoundaryMutator]MSP[] vr_8 = array ;
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[NegateConditionalsMutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[rv.ROR3Mutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; MST[EmptyObjectReturnValsMutator]MSP[] } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; MST[ReturnValsMutator]MSP[] } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[rv.CRCR6Mutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.UOI3Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( MST[ConstructorCallMutator]MSP[] lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[rv.ABSMutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[rv.ROR2Mutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[MathMutator]MSP[] } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOR2Mutator]MSP[] } return vr_33 ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI4Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { MST[NonVoidMethodCallMutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[rv.ROR5Mutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[NegateConditionalsMutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[rv.ROR4Mutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[rv.ROR5Mutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[rv.ROR2Mutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOR4Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[rv.UOI2Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.UOI3Mutator]MSP[] vr_8 = array ;
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[rv.CRCR5Mutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[MathMutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[rv.ABSMutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[rv.ROR5Mutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[NonVoidMethodCallMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] vr_8 = array ;
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.OBBN2Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
@Override MST[ConstructorCallMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[rv.CRCR3Mutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[NonVoidMethodCallMutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[rv.CRCR1Mutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; MST[InlineConstantMutator]MSP[] for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; MST[InlineConstantMutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[rv.ROR1Mutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[rv.ABSMutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_2 . contains ( vr_3 ) ) { MST[rv.ROR3Mutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI1Mutator]MSP[] } @Override
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[rv.CRCR5Mutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[rv.UOI2Mutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; MST[rv.UOI1Mutator]MSP[] } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.OBBN1Mutator]MSP[] } return vr_21 ; } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR3Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[rv.ROR1Mutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; MST[rv.CRCR3Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[InlineConstantMutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[rv.CRCR5Mutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOD2Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[rv.CRCR6Mutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { MST[NonVoidMethodCallMutator]MSP[] if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[ReturnValsMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[rv.CRCR5Mutator]MSP[] }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[rv.CRCR6Mutator]MSP[] }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; MST[ReturnValsMutator]MSP[] } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[rv.ROR5Mutator]MSP[] return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[ReturnValsMutator]MSP[] }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[NonVoidMethodCallMutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[rv.ABSMutator]MSP[] } @Override
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; MST[VoidMethodCallMutator]MSP[] fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.UOI2Mutator]MSP[] } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; MST[ReturnValsMutator]MSP[] } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[rv.CRCR1Mutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI1Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[rv.ROR1Mutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.UOI4Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[InlineConstantMutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[rv.ROR4Mutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[rv.ABSMutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR3Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[rv.UOI3Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[rv.UOI3Mutator]MSP[] }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[rv.ROR2Mutator]MSP[] throw new IllegalArgumentException (
@Override MST[ConstructorCallMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; MST[NullReturnValsMutator]MSP[] } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; MST[rv.UOI2Mutator]MSP[] } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR1Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.UOI2Mutator]MSP[] } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[NonVoidMethodCallMutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[rv.CRCR6Mutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[InlineConstantMutator]MSP[] }
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[rv.CRCR1Mutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.UOI2Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vr_15 != null ) { MST[rv.ROR5Mutator]MSP[] for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI1Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; MST[InlineConstantMutator]MSP[] for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ROR5Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[rv.ROR3Mutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.OBBN2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; MST[experimental.MemberVariableMutator]MSP[] } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI4Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[rv.ROR3Mutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[NegateConditionalsMutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.UOI1Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[NegateConditionalsMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.UOI2Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[NonVoidMethodCallMutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[NegateConditionalsMutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ROR1Mutator]MSP[] vr_8 = array ;
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { MST[rv.ROR3Mutator]MSP[] vr_8 = array ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[NonVoidMethodCallMutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; MST[rv.UOI1Mutator]MSP[] } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { MST[rv.ROR2Mutator]MSP[] return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[NegateConditionalsMutator]MSP[] throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[InlineConstantMutator]MSP[] } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[BooleanTrueReturnValsMutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; MST[rv.CRCR3Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[rv.CRCR3Mutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[ReturnValsMutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[InlineConstantMutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; MST[VoidMethodCallMutator]MSP[] } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR4Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[rv.ROR4Mutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[ReturnValsMutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; MST[rv.UOI2Mutator]MSP[] } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; MST[rv.UOI4Mutator]MSP[] } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOD1Mutator]MSP[] } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; MST[rv.CRCR1Mutator]MSP[] } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override MST[experimental.MemberVariableMutator]MSP[] public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[rv.UOI3Mutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[NegateConditionalsMutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[NegateConditionalsMutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[NonVoidMethodCallMutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.UOI2Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { MST[rv.ROR2Mutator]MSP[] return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; MST[VoidMethodCallMutator]MSP[] } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR5Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[rv.ROR5Mutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[InlineConstantMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR2Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { MST[rv.ROR5Mutator]MSP[] throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; MST[rv.UOI2Mutator]MSP[] }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; MST[rv.UOI3Mutator]MSP[] } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[rv.CRCR6Mutator]MSP[] }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.OBBN1Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; MST[ConstructorCallMutator]MSP[] } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
if ( vr_15 != null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[NegateConditionalsMutator]MSP[] } return vr_33 ; }
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; MST[NullReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; MST[rv.CRCR5Mutator]MSP[] } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; MST[rv.UOI1Mutator]MSP[] } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { MST[rv.ROR5Mutator]MSP[] final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; MST[rv.ABSMutator]MSP[] } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[rv.ROR5Mutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.AOR3Mutator]MSP[] } return vr_33 ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; MST[NonVoidMethodCallMutator]MSP[] } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.ABSMutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; MST[InlineConstantMutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.CRCR3Mutator]MSP[] } return vr_33 ; }
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; MST[rv.CRCR1Mutator]MSP[] } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
vl_1 . remove ( vr_15 ) ; } public vr_1 < vt_1 > fn_15 () { return new vr_30 <> ( this ) ; } public List < vr_1 < vt_1 > > fn_4 () { return vr_31 . vr_32 ( vl_1 ) ; MST[EmptyObjectReturnValsMutator]MSP[] } protected vr_23 < vt_1 > fn_12 () { return vl_2 ; } @Override public boolean equals ( final Object vr_3 ) { if ( vr_3 instanceof vr_1 ) { final vr_1 < ? > vr_15 = ( vr_1 < ? > ) vr_3 ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; MST[rv.CRCR1Mutator]MSP[] }
final Object [] vr_8 = new Object [ size () ] ; MST[NonVoidMethodCallMutator]MSP[] int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { MST[NegateConditionalsMutator]MSP[] vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vr_2 . contains ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { MST[rv.ROR5Mutator]MSP[] throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[rv.ROR1Mutator]MSP[] return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { MST[rv.ROR2Mutator]MSP[] return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[rv.UOI4Mutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.UOI3Mutator]MSP[] } return vr_21 ; } @Override
if ( vr_2 . contains ( vr_3 ) ) { MST[rv.ROR4Mutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; MST[rv.ABSMutator]MSP[] } return vr_21 ; } @Override
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; MST[rv.UOI2Mutator]MSP[] } @Override
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[rv.OBBN3Mutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { MST[rv.ROR2Mutator]MSP[] return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vr_2 . contains ( vr_3 ) ) { MST[NegateConditionalsMutator]MSP[] return true ; } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
if ( vl_2 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[ReturnValsMutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { MST[NonVoidMethodCallMutator]MSP[] return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
boolean vr_21 = false ; MST[InlineConstantMutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { MST[rv.ROR4Mutator]MSP[] if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( MST[ConstructorCallMutator]MSP[] lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { throw new IllegalArgumentException (
if ( vl_2 == null ) { MST[rv.ROR5Mutator]MSP[] throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { MST[rv.ROR2Mutator]MSP[] return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; MST[rv.CRCR6Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[rv.UOI1Mutator]MSP[] } return vr_33 ; }
boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; MST[rv.UOI3Mutator]MSP[] } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[rv.ROR4Mutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
boolean vr_21 = false ; MST[rv.CRCR3Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_7 ( vr_18 ) ; } return vr_21 ; } @Override public boolean fn_8 ( final Collection < ? > vr_16 ) { if ( vr_22 . isEmpty ( vr_16 ) ) { return false ; } boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_8 ( vr_16 ) ; } return vr_21 ; } @Override
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; MST[ReturnValsMutator]MSP[] } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR4Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
if ( vl_2 == null ) { throw new fn_3 ( MST[ConstructorCallMutator]MSP[] lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.ROR3Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; MST[rv.AOR1Mutator]MSP[] } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[rv.CRCR3Mutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; MST[InlineConstantMutator]MSP[] } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
if ( vr_15 != null ) { for ( final vr_1 < vt_1 > vr_24 : fn_4 () ) { final Collection < vt_1 > vr_25 = vr_22 . vr_26 ( vr_24 , vr_15 ) ; if ( vr_25 . size () > 0 ) { if ( this . vl_2 == null ) { throw new fn_3 ( lr_4 ) ; } fn_12 () . fn_13 ( this , vr_24 , vr_15 , vr_25 ) ; if ( vr_22 . vr_26 ( vr_24 , vr_15 ) . size () > 0 ) { MST[rv.ROR3Mutator]MSP[] throw new IllegalArgumentException (
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[rv.CRCR4Mutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
@Override public int size () { int size = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; MST[ReturnValsMutator]MSP[] }
@Override public int size () { int size = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } return vr_33 ; }
@Override public int size () { int size = 0 ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { size += vr_2 . size () ; } return size ; } @Override public boolean isEmpty () { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { if ( vr_2 . isEmpty () == false ) { return false ; } } return true ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean contains ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_2 : vl_1 ) {
final Object [] vr_8 = new Object [ size () ] ; int vr_9 = 0 ; for ( final Iterator < vt_1 > vr_10 = iterator () ; vr_10 . hasNext () ; vr_9 ++ ) { MST[experimental.RemoveIncrementsMutator]MSP[] vr_8 [ vr_9 ] = vr_10 . vr_11 () ; } return vr_8 ; } @Override @SuppressWarnings ( lr_1 ) public < vt_2 > vt_2 [] toArray ( final vt_2 [] array ) { final int size = size () ; Object [] vr_8 = null ; if ( array . length >= size ) { vr_8 = array ;
if ( vr_2 . contains ( vr_3 ) ) { return true ; MST[BooleanFalseReturnValsMutator]MSP[] } } return false ; } @Override public Iterator < vt_1 > iterator () { if ( vl_1 . isEmpty () ) { return vr_4 . <vt_1 > fn_1 () ; } final vr_5 < vt_1 > vr_6 = new vr_5 <> () ; for ( final vr_1 < vt_1 > vr_2 : vl_1 ) { vr_6 . vr_7 ( vr_2 . iterator () ) ; } return vr_6 ; } @Override public Object [] toArray () {
lr_5 ) ; } } } vl_1 . add ( vr_15 ) ; } } public void fn_11 ( final vr_1 < vt_1 > vr_27 , final vr_1 < vt_1 > vr_28 ) { fn_11 ( vr_27 ) ; fn_11 ( vr_28 ) ; } public void fn_11 ( final vr_1 < vt_1 > ... vr_29 ) { if ( vr_29 != null ) { for ( final vr_1 < vt_1 > vr_15 : vr_29 ) { MST[rv.UOI1Mutator]MSP[] fn_11 ( vr_15 ) ; } } } public void fn_14 ( final vr_1 < vt_1 > vr_15 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; MST[rv.UOI3Mutator]MSP[] } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
for ( final Object vr_2 : vr_16 ) { if ( contains ( vr_2 ) == false ) { return false ; } } return true ; } @Override public boolean fn_6 ( final Collection < ? extends vt_1 > vr_16 ) { if ( vl_2 == null ) { throw new fn_3 ( lr_3 ) ; } return vl_2 . fn_6 ( this , vl_1 , vr_16 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_7 ( final vr_17 < ? super vt_1 > vr_18 ) { if ( vr_19 . vr_20 ( vr_18 ) ) { return false ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; MST[MathMutator]MSP[] } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
} else { vr_8 = ( Object [] ) Array . vr_12 ( array . getClass () . fn_2 () , size ) ; MST[rv.UOI4Mutator]MSP[] } int vr_13 = 0 ; for ( final Collection < vt_1 > vr_2 : vl_1 ) { for ( final vt_1 vr_14 : vr_2 ) { vr_8 [ vr_13 ++ ] = vr_14 ; } } if ( vr_8 . length > size ) { vr_8 [ size ] = null ; } return ( vt_2 [] ) vr_8 ; } @Override public boolean add ( final vt_1 vr_3 ) {
if ( vl_2 == null ) { throw new fn_3 ( lr_2 ) ; } return vl_2 . add ( this , vl_1 , vr_3 ) ; } @Override public boolean remove ( final Object vr_3 ) { for ( final vr_1 < vt_1 > vr_15 : fn_4 () ) { if ( vr_15 . contains ( vr_3 ) ) { return vr_15 . remove ( vr_3 ) ; } } return false ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_5 ( final Collection < ? > vr_16 ) { if ( vr_16 == null ) { return false ; }
return vr_15 . size () == this . size () && vr_15 . fn_5 ( this ) ; MST[rv.CRCR5Mutator]MSP[] } return false ; } @Override public int fn_16 () { int vr_33 = 0 ; for ( final vt_1 vr_14 : this ) { vr_33 += vr_14 == null ? 0 : vr_14 . fn_16 () ; } return vr_33 ; }
public boolean fn_9 ( final Collection < ? > vr_16 ) { boolean vr_21 = false ; MST[rv.CRCR1Mutator]MSP[] for ( final Collection < vt_1 > vr_2 : vl_1 ) { vr_21 |= vr_2 . fn_9 ( vr_16 ) ; } return vr_21 ; } @Override public void clear () { for ( final Collection < vt_1 > vr_16 : vl_1 ) { vr_16 . clear () ; } } public void fn_10 ( final vr_23 < vt_1 > vl_2 ) { this . vl_2 = vl_2 ; } public synchronized void fn_11 ( final vr_1 < vt_1 > vr_15 ) {
