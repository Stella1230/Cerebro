public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR1Mutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI2Mutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI1Mutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI3Mutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[ReturnValsMutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; MST[ReturnValsMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[ReturnValsMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.ABSMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.ABSMutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[NonVoidMethodCallMutator]MSP[] } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; MST[NullReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI1Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI2Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.UOI4Mutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR3Mutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI4Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI3Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; MST[ConstructorCallMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NullReturnValsMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[ReturnValsMutator]MSP[] }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[rv.UOI2Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NullReturnValsMutator]MSP[] } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[rv.UOI4Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[ConstructorCallMutator]MSP[] }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR3Mutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR5Mutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR5Mutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[InlineConstantMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[InlineConstantMutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI1Mutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[ConstructorCallMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI4Mutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NullReturnValsMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI3Mutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[rv.UOI2Mutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.ABSMutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[ReturnValsMutator]MSP[] } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[NullReturnValsMutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[rv.ABSMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI1Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[NullReturnValsMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[NonVoidMethodCallMutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR2Mutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[ReturnValsMutator]MSP[] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[PrimitiveReturnsMutator]MSP[] } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[experimental.NakedReceiverMutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; MST[ReturnValsMutator]MSP[] } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR4Mutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI3Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI4Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; MST[rv.UOI2Mutator]MSP[] return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[rv.UOI3Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[rv.UOI1Mutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[ReturnValsMutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; MST[NullReturnValsMutator]MSP[] }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; MST[rv.ABSMutator]MSP[] } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; MST[ReturnValsMutator]MSP[] } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[ArgumentPropagationMutator]MSP[] } @Override
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[rv.CRCR6Mutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; MST[ConstructorCallMutator]MSP[] } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; MST[PrimitiveReturnsMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override
public boolean fn_3 ( final int vr_2 , final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; } @Override public void clear () { throw fn_2 () ; } @Override public vt_1 get ( final int vr_2 ) { return fn_4 () . get ( vr_2 ) ; } @Override public int indexOf ( final Object object ) { return fn_4 () . indexOf ( object ) ; MST[ReturnValsMutator]MSP[] } @Override public Iterator < vt_1 > iterator () { return vr_4 . vr_5 ( fn_4 () . iterator () ) ; } @Override
final List < vt_1 > vr_11 = fn_4 () . fn_12 ( vr_9 , vr_10 ) ; return new vr_1 <> ( vr_11 ) ; } @Override public void remove () { throw fn_2 () ; } @Override public void add ( final Object object ) { throw fn_2 () ; } @Override public boolean fn_13 () { return true ; MST[rv.CRCR6Mutator]MSP[] } @Override public int fn_14 () { return size () ; } private static tp_1 fn_2 () { return new tp_1 ( lr_1 ) ; }
public int fn_5 ( final Object object ) { return fn_4 () . fn_5 ( object ) ; } @Override public vr_6 < vt_1 > fn_6 () { return new fn_7 ( fn_4 () . fn_6 ( 0 ) ) ; MST[ConstructorCallMutator]MSP[] } @Override public vr_6 < vt_1 > fn_6 ( final int vr_2 ) { return new fn_7 ( fn_4 () . fn_6 ( vr_2 ) ) ; } @Override public vt_1 remove ( final int vr_2 ) { throw fn_2 () ; } @Override public boolean remove ( final Object object ) { throw fn_2 () ; } @Override
public boolean fn_8 ( final vr_7 < ? super vt_1 > vr_8 ) { throw fn_2 () ; } @Override public boolean fn_9 ( final Collection < ? > vr_3 ) { throw fn_2 () ; } @Override public boolean fn_10 ( final Collection < ? > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 fn_11 ( final int vr_2 , final vt_1 object ) { return fn_4 () . fn_11 ( vr_2 , object ) ; } @Override public List < vt_1 > fn_12 ( final int vr_9 , final int vr_10 ) {
public static < vt_1 > vr_1 < vt_1 > fn_1 ( final List < vt_1 > list ) { return new vr_1 <> ( list ) ; } @Override public boolean add ( final vt_1 object ) { throw fn_2 () ; } @Override public void add ( final int vr_2 , final vt_1 object ) { throw fn_2 () ; } @Override public boolean fn_3 ( final Collection < ? extends vt_1 > vr_3 ) { throw fn_2 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override
