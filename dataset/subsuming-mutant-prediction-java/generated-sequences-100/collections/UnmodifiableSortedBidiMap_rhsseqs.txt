throw new fn_2 () ; } @Override public void fn_4 ( final vr_7 < ? extends vt_1 , ? extends vt_2 > vr_8 ) { throw new fn_2 () ; } @Override public vt_2 remove ( final Object vr_5 ) { throw new fn_2 () ; } @Override public vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > fn_5 () { final vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > vr_11 = super . fn_5 () ; return vr_12 . vr_13 ( vr_11 ) ; MST[ArgumentPropagationMutator]MSP[N] } @Override public vr_9 < vt_1 > fn_6 () {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[NullReturnValsMutator]MSP[N] } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
throw new fn_2 () ; } @Override public void fn_4 ( final vr_7 < ? extends vt_1 , ? extends vt_2 > vr_8 ) { throw new fn_2 () ; } @Override public vt_2 remove ( final Object vr_5 ) { throw new fn_2 () ; } @Override public vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > fn_5 () { final vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > vr_11 = super . fn_5 () ; MST[NonVoidMethodCallMutator]MSP[N] return vr_12 . vr_13 ( vr_11 ) ; } @Override public vr_9 < vt_1 > fn_6 () {
throw new fn_2 () ; } @Override public void fn_4 ( final vr_7 < ? extends vt_1 , ? extends vt_2 > vr_8 ) { throw new fn_2 () ; } @Override public vt_2 remove ( final Object vr_5 ) { throw new fn_2 () ; } @Override public vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > fn_5 () { final vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > vr_11 = super . fn_5 () ; return vr_12 . vr_13 ( vr_11 ) ; MST[EmptyObjectReturnValsMutator]MSP[N] } @Override public vr_9 < vt_1 > fn_6 () {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR3Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR1Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR5Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
throw new fn_2 () ; } @Override public void fn_4 ( final vr_7 < ? extends vt_1 , ? extends vt_2 > vr_8 ) { throw new fn_2 () ; } @Override public vt_2 remove ( final Object vr_5 ) { throw new fn_2 () ; } @Override public vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > fn_5 () { final vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > vr_11 = super . fn_5 () ; return vr_12 . vr_13 ( vr_11 ) ; MST[ReturnValsMutator]MSP[N] } @Override public vr_9 < vt_1 > fn_6 () {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[ReturnValsMutator]MSP[N] } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[NegateConditionalsMutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; MST[ConstructorCallMutator]MSP[N] } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
throw new fn_2 () ; } @Override public void fn_4 ( final vr_7 < ? extends vt_1 , ? extends vt_2 > vr_8 ) { throw new fn_2 () ; } @Override public vt_2 remove ( final Object vr_5 ) { throw new fn_2 () ; } @Override public vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > fn_5 () { final vr_9 < vr_7 . vr_10 < vt_1 , vt_2 > > vr_11 = super . fn_5 () ; return vr_12 . vr_13 ( vr_11 ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public vr_9 < vt_1 > fn_6 () {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR2Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
public static < vt_1 , vt_2 > vr_1 < vt_1 , vt_2 > fn_1 ( final vr_1 < vt_1 , ? extends vt_2 > vr_2 ) { if ( vr_2 instanceof vl_1 ) { MST[rv.ROR4Mutator]MSP[N] @SuppressWarnings ( lr_1 ) final vr_1 < vt_1 , vt_2 > vr_3 = ( vr_1 < vt_1 , vt_2 > ) vr_2 ; return vr_3 ; } return new vr_4 <> ( vr_2 ) ; } @Override public void clear () { throw new fn_2 () ; } @Override public vt_2 fn_3 ( final vt_1 vr_5 , final vt_2 vr_6 ) {
