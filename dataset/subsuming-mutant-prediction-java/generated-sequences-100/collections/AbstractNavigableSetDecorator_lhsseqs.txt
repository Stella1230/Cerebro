@Override protected vr_1 < vt_1 > fn_1 () { return ( vr_1 < vt_1 > ) super . fn_1 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_1 fn_2 ( final vt_1 vr_2 ) { return fn_1 () . fn_2 ( vr_2 ) ; } @Override public vt_1 floor ( final vt_1 vr_2 ) { return fn_1 () . floor ( vr_2 ) ; } @Override public vt_1 fn_3 ( final vt_1 vr_2 ) { return fn_1 () . fn_3 ( vr_2 ) ; } @Override public vt_1 fn_4 ( final vt_1 vr_2 ) {
@Override protected vr_1 < vt_1 > fn_1 () { return ( vr_1 < vt_1 > ) super . fn_1 () ; MST[NullReturnValsMutator]MSP[] } @Override public vt_1 fn_2 ( final vt_1 vr_2 ) { return fn_1 () . fn_2 ( vr_2 ) ; } @Override public vt_1 floor ( final vt_1 vr_2 ) { return fn_1 () . floor ( vr_2 ) ; } @Override public vt_1 fn_3 ( final vt_1 vr_2 ) { return fn_1 () . fn_3 ( vr_2 ) ; } @Override public vt_1 fn_4 ( final vt_1 vr_2 ) {
@Override protected vr_1 < vt_1 > fn_1 () { return ( vr_1 < vt_1 > ) super . fn_1 () ; MST[ReturnValsMutator]MSP[] } @Override public vt_1 fn_2 ( final vt_1 vr_2 ) { return fn_1 () . fn_2 ( vr_2 ) ; } @Override public vt_1 floor ( final vt_1 vr_2 ) { return fn_1 () . floor ( vr_2 ) ; } @Override public vt_1 fn_3 ( final vt_1 vr_2 ) { return fn_1 () . fn_3 ( vr_2 ) ; } @Override public vt_1 fn_4 ( final vt_1 vr_2 ) {
