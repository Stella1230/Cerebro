@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[ConstructorCallMutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[InlineConstantMutator]MSP[]
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[rv.ABSMutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[PrimitiveReturnsMutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; MST[InlineConstantMutator]MSP[] for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[NegateConditionalsMutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.ABSMutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.UOI3Mutator]MSP[] } return vr_8 ; } @Override
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[rv.UOI2Mutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; MST[rv.CRCR6Mutator]MSP[] for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI3Mutator]MSP[] } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[rv.ROR5Mutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI2Mutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; MST[ArgumentPropagationMutator]MSP[] boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[rv.ROR1Mutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[rv.CRCR3Mutator]MSP[]
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[rv.CRCR6Mutator]MSP[]
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.OBBN3Mutator]MSP[] } return vr_8 ; } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; MST[ArgumentPropagationMutator]MSP[] return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR6Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[ReturnValsMutator]MSP[] } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[rv.ROR5Mutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR1Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
return new fn_23 () ; } @Override public boolean equals ( final Object vr_28 ) { if ( this == vr_28 ) { return true ; } if ( vr_28 instanceof vr_18 ) { return fn_19 () . equals ( ( ( vr_18 < ? , ? > ) vr_28 ) . fn_19 () ) ; } return false ; } @Override public int fn_24 () { return fn_1 () . fn_24 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public String toString () { return fn_1 () . toString () ; } protected Collection < vt_2 > fn_25 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; MST[rv.CRCR3Mutator]MSP[] for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[rv.UOI1Mutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI2Mutator]MSP[] } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; MST[ArgumentPropagationMutator]MSP[] boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR3Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[InlineConstantMutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR6Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[InlineConstantMutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.ABSMutator]MSP[] } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { MST[rv.ROR5Mutator]MSP[] vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI4Mutator]MSP[] } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[NonVoidMethodCallMutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[rv.UOI3Mutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; MST[rv.CRCR5Mutator]MSP[] for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
protected vr_1 < vt_1 , ? extends Collection < vt_2 > > fn_1 () { return vl_1 ; MST[NullReturnValsMutator]MSP[] } @SuppressWarnings ( lr_1 ) protected void fn_2 ( final vr_1 < vt_1 , ? extends Collection < vt_2 > > vl_1 ) { this . vl_1 = ( vr_1 < vt_1 , Collection < vt_2 > > ) vl_1 ; } @Override public boolean fn_3 ( final Object vr_2 ) { return fn_1 () . fn_3 ( vr_2 ) ; } @Override public boolean fn_4 ( final Object vr_3 ) { return fn_5 () . contains ( vr_3 ) ; }
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[ReturnValsMutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[rv.CRCR2Mutator]MSP[]
} return false ; } return vr_4 . add ( vr_3 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.OBBN2Mutator]MSP[] } return vr_8 ; } @Override
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[rv.ROR4Mutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.ABSMutator]MSP[] } return vr_8 ; } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI1Mutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { MST[NonVoidMethodCallMutator]MSP[] vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.UOI4Mutator]MSP[] } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_8 ; } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
return new fn_23 () ; } @Override public boolean equals ( final Object vr_28 ) { if ( this == vr_28 ) { return true ; } if ( vr_28 instanceof vr_18 ) { return fn_19 () . equals ( ( ( vr_18 < ? , ? > ) vr_28 ) . fn_19 () ) ; } return false ; } @Override public int fn_24 () { return fn_1 () . fn_24 () ; MST[ReturnValsMutator]MSP[] } @Override public String toString () { return fn_1 () . toString () ; } protected Collection < vt_2 > fn_25 () {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.UOI1Mutator]MSP[] } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_8 ; } @Override
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[experimental.MemberVariableMutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
protected vr_1 < vt_1 , ? extends Collection < vt_2 > > fn_1 () { return vl_1 ; MST[ReturnValsMutator]MSP[] } @SuppressWarnings ( lr_1 ) protected void fn_2 ( final vr_1 < vt_1 , ? extends Collection < vt_2 > > vl_1 ) { this . vl_1 = ( vr_1 < vt_1 , Collection < vt_2 > > ) vl_1 ; } @Override public boolean fn_3 ( final Object vr_2 ) { return fn_1 () . fn_3 ( vr_2 ) ; } @Override public boolean fn_4 ( final Object vr_3 ) { return fn_5 () . contains ( vr_3 ) ; }
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR5Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[ReturnValsMutator]MSP[] } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; MST[ArgumentPropagationMutator]MSP[] if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[MathMutator]MSP[] } return vr_8 ; } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI3Mutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[ReturnValsMutator]MSP[]
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR3Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[rv.UOI4Mutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.OBBN1Mutator]MSP[] } return vr_8 ; } @Override
return new fn_23 () ; } @Override public boolean equals ( final Object vr_28 ) { if ( this == vr_28 ) { return true ; } if ( vr_28 instanceof vr_18 ) { return fn_19 () . equals ( ( ( vr_18 < ? , ? > ) vr_28 ) . fn_19 () ) ; } return false ; } @Override public int fn_24 () { return fn_1 () . fn_24 () ; MST[PrimitiveReturnsMutator]MSP[] } @Override public String toString () { return fn_1 () . toString () ; } protected Collection < vt_2 > fn_25 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[rv.ROR3Mutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; MST[NonVoidMethodCallMutator]MSP[] return true ;
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { MST[NonVoidMethodCallMutator]MSP[] size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
} return false ; } return vr_4 . add ( vr_3 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; MST[ReturnValsMutator]MSP[] } @Override public Collection < vt_2 > fn_5 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; MST[rv.CRCR1Mutator]MSP[] for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { MST[NegateConditionalsMutator]MSP[] vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[NegateConditionalsMutator]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[rv.UOI2Mutator]MSP[] } return vr_8 ; } @Override
return new fn_23 () ; } @Override public boolean equals ( final Object vr_28 ) { if ( this == vr_28 ) { return true ; } if ( vr_28 instanceof vr_18 ) { return fn_19 () . equals ( ( ( vr_18 < ? , ? > ) vr_28 ) . fn_19 () ) ; } return false ; } @Override public int fn_24 () { return fn_1 () . fn_24 () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public String toString () { return fn_1 () . toString () ; } protected Collection < vt_2 > fn_25 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[BooleanFalseReturnValsMutator]MSP[]
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; MST[NonVoidMethodCallMutator]MSP[] } return vr_8 ; } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { MST[rv.ROR2Mutator]MSP[] vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR1Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[rv.CRCR5Mutator]MSP[]
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ; MST[rv.CRCR4Mutator]MSP[]
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
final Collection < vt_2 > vr_11 = vl_3 ; return vr_11 != null ? vr_11 : ( vl_3 = new fn_13 () ) ; } @Override public void clear () { fn_1 () . clear () ; } @Override public boolean fn_14 ( final vt_1 vr_2 , final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; if ( vr_4 == null ) { vr_4 = fn_15 () ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_4 . add ( vr_3 ) ) { vl_1 . fn_14 ( vr_2 , vr_4 ) ; return true ;
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { MST[NonVoidMethodCallMutator]MSP[] vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; MST[rv.CRCR5Mutator]MSP[] for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
} return false ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_16 ( final vr_1 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . vr_15 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI1Mutator]MSP[] } @Override
if ( vr_4 . isEmpty () ) { fn_1 () . remove ( vr_2 ) ; } return vr_8 ; } @Override public boolean isEmpty () { return fn_1 () . isEmpty () ; } @Override public vr_9 < vt_1 > fn_12 () { return fn_1 () . fn_12 () ; } @Override public int size () { int size = 0 ; for ( final Collection < vt_2 > vr_10 : fn_1 () . fn_5 () ) { MST[NonVoidMethodCallMutator]MSP[] size += vr_10 . size () ; } return size ; } @Override public Collection < vt_2 > fn_5 () {
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[ReturnValsMutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
public boolean fn_16 ( final vr_18 < ? extends vt_1 , ? extends vt_2 > vl_1 ) { vr_12 . vr_13 ( vl_1 , lr_2 ) ; boolean vr_8 = false ; for ( final vr_1 . vr_5 < ? extends vt_1 , ? extends vt_2 > vr_14 : vl_1 . fn_7 () ) { vr_8 |= fn_14 ( vr_14 . vr_16 () , vr_14 . vr_17 () ) ; } return vr_8 ; MST[rv.UOI4Mutator]MSP[] } @Override public vr_19 < vt_1 > fn_17 () { if ( vl_4 == null ) {
@Override public boolean fn_6 ( final Object vr_2 , final Object vr_3 ) { final Collection < vt_2 > vr_4 = fn_1 () . get ( vr_2 ) ; return vr_4 != null && vr_4 . contains ( vr_3 ) ; } @Override public Collection < vr_5 < vt_1 , vt_2 > > fn_7 () { return vl_2 != null ? vl_2 : ( vl_2 = new fn_8 () ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public Collection < vt_2 > get ( final vt_1 vr_2 ) { return fn_9 ( vr_2 ) ; }
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[rv.ROR1Mutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[NonVoidMethodCallMutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
if ( vr_10 != null ) { vr_39 = vr_10 . size () ; } return vr_39 ; } @Override protected Iterator < vr_19 . vr_5 < vt_1 > > fn_32 () { final tp_1 vr_40 = new tp_1 () ; return vr_31 . vr_41 ( vl_1 . vr_15 () . iterator () , vr_40 ) ; } @Override public vt_1 fn_33 () { return vr_42 . vr_16 () ; } @Override public int fn_31 () { return vr_42 . vr_17 () . size () ; } @Override MST[experimental.MemberVariableMutator]MSP[]
if ( vr_10 != null ) { vr_39 = vr_10 . size () ; } return vr_39 ; } @Override protected Iterator < vr_19 . vr_5 < vt_1 > > fn_32 () { final tp_1 vr_40 = new tp_1 () ; return vr_31 . vr_41 ( vl_1 . vr_15 () . iterator () , vr_40 ) ; } @Override public vt_1 fn_33 () { return vr_42 . vr_16 () ; } @Override public int fn_31 () { return vr_42 . vr_17 () . size () ; } @Override MST[NonVoidMethodCallMutator]MSP[]
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[NegateConditionalsMutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[rv.ROR5Mutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[rv.ROR4Mutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[rv.ROR3Mutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[rv.ROR2Mutator]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { return null ; MST[ReturnValsMutator]MSP[] } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
protected Iterator < ? extends vr_5 < vt_1 , vt_2 > > fn_34 ( final int vr_39 ) { if ( ! vr_43 . hasNext () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return null ; } final vt_1 vr_2 = vr_43 . vr_44 () ; final vr_45 < vt_2 , vr_5 < vt_1 , vt_2 > > vr_46 = vr_47 -> new fn_35 ( vr_2 , vr_47 ) ; return new vr_48 <> ( new fn_26 ( vr_2 ) , vr_46 ) ; } @Override public int size () { return vr_29 . this . size () ; } @Override
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; MST[NullReturnValsMutator]MSP[] } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; MST[ReturnValsMutator]MSP[] } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[] } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return vr_29 . this . size () ; } @Override public void clear () { vr_29 . this . clear () ; } @Override public void remove () { iterator . remove () ; if ( fn_5 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } } @Override public boolean hasNext () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[] } @Override public vt_2 vr_44 () { return iterator . vr_44 () ; } @Override public vr_9 < vr_1 . vr_5 < vt_1 , Collection < vt_2 > > > vr_15 () {
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[InlineConstantMutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR5Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[InlineConstantMutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[rv.ROR5Mutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; MST[NullReturnValsMutator]MSP[] } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[NegateConditionalsMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR4Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[NegateConditionalsMutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[rv.CRCR1Mutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[PrimitiveReturnsMutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_4 == null ) { return vr_31 . vr_32 ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR2Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[NegateConditionalsMutator]MSP[] return vr_6 . vr_36 . toArray () ; } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ; vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_21 ( final Collection < ? extends vt_2 > vr_30 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; MST[NonVoidMethodCallMutator]MSP[] return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return fn_1 () . get ( vr_2 ) ; MST[ReturnValsMutator]MSP[] } @Override public boolean add ( final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ; vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_21 ( final Collection < ? extends vt_2 > vr_30 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ;
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_31 . vr_32 ; }
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; MST[NonVoidMethodCallMutator]MSP[] if ( vr_4 == null ) { return vr_6 . vr_36 . toArray () ; } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; MST[NonVoidMethodCallMutator]MSP[] return vr_4 == null || vr_4 . isEmpty () ; } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[NegateConditionalsMutator]MSP[] return vr_31 . vr_32 ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR5Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[ReturnValsMutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR3Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[NegateConditionalsMutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[ReturnValsMutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; MST[ConstructorCallMutator]MSP[] } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.CRCR2Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_31 . vr_32 ; }
return fn_1 () . get ( vr_2 ) ; MST[EmptyObjectReturnValsMutator]MSP[] } @Override public boolean add ( final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ; vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_21 ( final Collection < ? extends vt_2 > vr_30 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ;
return new fn_26 ( vr_2 ) ; MST[ReturnValsMutator]MSP[] } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return vr_6 . vr_36 . toArray () ; MST[ReturnValsMutator]MSP[] } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[NegateConditionalsMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.ROR5Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[rv.CRCR6Mutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[rv.CRCR5Mutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[rv.ROR5Mutator]MSP[] return vr_6 . vr_36 . toArray () ; } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return vr_31 . vr_32 ; MST[NullReturnValsMutator]MSP[] }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; MST[NonVoidMethodCallMutator]MSP[] return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return vr_6 . vr_36 . toArray () ; MST[NullReturnValsMutator]MSP[] } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return fn_1 () . get ( vr_2 ) ; MST[NonVoidMethodCallMutator]MSP[] } @Override public boolean add ( final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ; vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_21 ( final Collection < ? extends vt_2 > vr_30 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[] return vr_6 . vr_36 . toArray () ; } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.ROR1Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[BooleanTrueReturnValsMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return vr_31 . vr_32 ; MST[ReturnValsMutator]MSP[] }
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[rv.CRCR3Mutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return vr_6 . vr_36 . toArray () ; MST[NonVoidMethodCallMutator]MSP[] } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[] } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . fn_29 ( vr_35 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; } return vr_34 ; } @Override public Object [] toArray () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[] return vr_6 . vr_36 . toArray () ; } return vr_4 . toArray () ; } @Override @SuppressWarnings ( lr_1 )
return new fn_26 ( vr_2 ) ; } @Override public int size () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null ? 0 : vr_4 . size () ; } @Override public boolean contains ( final Object vr_28 ) { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 != null && vr_4 . contains ( vr_28 ) ; MST[InlineConstantMutator]MSP[] } @Override public boolean fn_27 ( final Collection < ? > vr_30 ) { final Collection < vt_2 > vr_4 = fn_25 () ;
vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . fn_21 ( vr_30 ) ; } @Override public void clear () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 != null ) { vr_4 . clear () ; vr_29 . this . remove ( vr_2 ) ; } } @Override public Iterator < vt_2 > iterator () { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { MST[rv.ROR5Mutator]MSP[] return vr_31 . vr_32 ; }
return vr_4 != null && vr_4 . fn_27 ( vr_30 ) ; } @Override public boolean isEmpty () { final Collection < vt_2 > vr_4 = fn_25 () ; return vr_4 == null || vr_4 . isEmpty () ; MST[rv.CRCR4Mutator]MSP[] } @Override public boolean remove ( final Object vr_33 ) { final Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { return false ; } final boolean vr_34 = vr_4 . remove ( vr_33 ) ; if ( vr_4 . isEmpty () ) { vr_29 . this . remove ( vr_2 ) ; }
return fn_1 () . get ( vr_2 ) ; MST[ArgumentPropagationMutator]MSP[] } @Override public boolean add ( final vt_2 vr_3 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ; vr_29 . this . vl_1 . fn_14 ( vr_2 , vr_4 ) ; } return vr_4 . add ( vr_3 ) ; } @Override public boolean fn_21 ( final Collection < ? extends vt_2 > vr_30 ) { Collection < vt_2 > vr_4 = fn_25 () ; if ( vr_4 == null ) { vr_4 = fn_15 () ;
