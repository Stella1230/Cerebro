@Override public boolean fn_1 () { return iterator . hasNext () ; MST[NonVoidMethodCallMutator]MSP[S] } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; } @Override public tp_1 nextElement () { return iterator . vr_1 () ; MST[NullReturnValsMutator]MSP[S] } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; } @Override public tp_1 nextElement () { return iterator . vr_1 () ; MST[ReturnValsMutator]MSP[N] } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; MST[experimental.MemberVariableMutator]MSP[N] }
@Override public boolean fn_1 () { return iterator . hasNext () ; MST[ReturnValsMutator]MSP[N] } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; MST[BooleanTrueReturnValsMutator]MSP[S] } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; MST[NullReturnValsMutator]MSP[S] } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; MST[BooleanFalseReturnValsMutator]MSP[S] } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
@Override public boolean fn_1 () { return iterator . hasNext () ; } @Override public tp_1 nextElement () { return iterator . vr_1 () ; } public Iterator < ? extends tp_1 > fn_2 () { return iterator ; MST[ReturnValsMutator]MSP[N] } public void fn_3 ( final Iterator < ? extends tp_1 > iterator ) { this . iterator = iterator ; }
