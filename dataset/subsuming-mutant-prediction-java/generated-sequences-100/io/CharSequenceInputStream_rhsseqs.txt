if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.ABSMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.ABSMutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[InlineConstantMutator]MSP[N] }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI3Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[rv.ROR3Mutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI4Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ABSMutator]MSP[N] } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.ROR4Mutator]MSP[N] this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR6Mutator]MSP[N] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[rv.CRCR5Mutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[rv.UOI2Mutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.CRCR1Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[rv.CRCR3Mutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOD1Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[NegateConditionalsMutator]MSP[N] } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR3Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR4Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { MST[rv.ROR4Mutator]MSP[N] if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { MST[rv.UOI3Mutator]MSP[N] if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NegateConditionalsMutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[ConstructorCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOR2Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[ReturnValsMutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[rv.CRCR6Mutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI2Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[rv.CRCR2Mutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI2Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.OBBN3Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[rv.ABSMutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[ReturnValsMutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.CRCR5Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI2Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ROR5Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.UOI1Mutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[NegateConditionalsMutator]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ABSMutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ROR2Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[rv.ROR4Mutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR5Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; MST[NonVoidMethodCallMutator]MSP[N] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOD2Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] this . vr_1 . rewind () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR5Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR1Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI1Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[rv.CRCR4Mutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; MST[rv.CRCR1Mutator]MSP[N] } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) { MST[rv.ROR2Mutator]MSP[N]
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[NonVoidMethodCallMutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[rv.UOI1Mutator]MSP[N] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI3Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[rv.ROR5Mutator]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOD2Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.UOI2Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[rv.CRCR2Mutator]MSP[N] }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOR3Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[InlineConstantMutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR5Mutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[rv.ROR3Mutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR4Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI3Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.UOI4Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI1Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.UOI4Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.ABSMutator]MSP[S] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.CRCR5Mutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI1Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOD1Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.CRCR2Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOR2Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ; MST[rv.CRCR1Mutator]MSP[N]
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.CRCR6Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[rv.CRCR1Mutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI1Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[rv.UOI4Mutator]MSP[N] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[N] this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; MST[NonVoidMethodCallMutator]MSP[N] this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOR1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.ABSMutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOR3Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOR2Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.UOI3Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR3Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.UOI1Mutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_3 ( lr_1 ) ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[ConditionalsBoundaryMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ROR2Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOR1Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOD2Mutator]MSP[S] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI4Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR1Mutator]MSP[S] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR5Mutator]MSP[S] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[rv.UOI3Mutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI1Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[rv.CRCR6Mutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.UOI4Mutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[N] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOR3Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[NegateConditionalsMutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[InlineConstantMutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ABSMutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ROR1Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ROR5Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR6Mutator]MSP[S] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR2Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[rv.CRCR5Mutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.UOI2Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.CRCR6Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI2Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.CRCR2Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI3Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.ABSMutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[rv.CRCR1Mutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI3Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; MST[rv.CRCR3Mutator]MSP[N] while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.CRCR4Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOR4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI4Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI2Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI1Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI3Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.CRCR1Mutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ; MST[NonVoidMethodCallMutator]MSP[S]
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI4Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[ArgumentPropagationMutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR5Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR4Mutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[rv.CRCR3Mutator]MSP[N] }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ABSMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.UOI1Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[NonVoidMethodCallMutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR5Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[MathMutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[rv.ABSMutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI1Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI2Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] throw new fn_3 ( lr_1 ) ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[rv.CRCR3Mutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[rv.CRCR2Mutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ROR2Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ROR1Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ; MST[experimental.MemberVariableMutator]MSP[N]
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[NonVoidMethodCallMutator]MSP[S] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[rv.UOI2Mutator]MSP[N] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[MathMutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR2Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[rv.UOI3Mutator]MSP[N] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ; MST[rv.CRCR5Mutator]MSP[N]
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOR2Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; MST[InlineConstantMutator]MSP[N] while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[rv.CRCR4Mutator]MSP[N] }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[rv.UOI4Mutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[experimental.NakedReceiverMutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOR1Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.UOI2Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR3Mutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[NonVoidMethodCallMutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.UOI4Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ROR1Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOD2Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOR1Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[S] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.CRCR3Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.OBBN2Mutator]MSP[S] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[NonVoidMethodCallMutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI1Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.CRCR4Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOD1Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[BooleanFalseReturnValsMutator]MSP[N] }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[InlineConstantMutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOR4Mutator]MSP[S] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOR2Mutator]MSP[S] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { MST[rv.UOI4Mutator]MSP[N] if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ABSMutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI1Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[rv.ROR2Mutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[ReturnValsMutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOD1Mutator]MSP[S] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ; MST[NonVoidMethodCallMutator]MSP[N]
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.ABSMutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[rv.ROR1Mutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI1Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[rv.ROR5Mutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[InlineConstantMutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI2Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[rv.UOI4Mutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.ROR2Mutator]MSP[N] this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[S] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[rv.CRCR1Mutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[rv.CRCR5Mutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR5Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[InlineConstantMutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOD2Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[MathMutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR1Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ABSMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { MST[rv.UOI1Mutator]MSP[N] if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[S] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOR4Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ; MST[InlineConstantMutator]MSP[N]
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.ROR3Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOR4Mutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR2Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.CRCR3Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[NegateConditionalsMutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI3Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOR3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.UOI2Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI1Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.CRCR5Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[rv.UOI2Mutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI3Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[MathMutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.ABSMutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; MST[NonVoidMethodCallMutator]MSP[N] this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[ConditionalsBoundaryMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[rv.CRCR3Mutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOR1Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ; MST[rv.CRCR6Mutator]MSP[N]
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOR2Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[NegateConditionalsMutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOR4Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.UOI3Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[InlineConstantMutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[NegateConditionalsMutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI2Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI3Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI4Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[MathMutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[rv.CRCR1Mutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.ABSMutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[rv.CRCR6Mutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[ReturnValsMutator]MSP[N] } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[rv.CRCR2Mutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ROR3Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOR1Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI1Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.OBBN1Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ABSMutator]MSP[N] } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[ReturnValsMutator]MSP[N] }
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.UOI4Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[NonVoidMethodCallMutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[rv.ROR1Mutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR2Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[InlineConstantMutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[rv.CRCR4Mutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[experimental.MemberVariableMutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; MST[experimental.NakedReceiverMutator]MSP[N] this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI4Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.UOI4Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.UOI1Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[NonVoidMethodCallMutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[rv.UOI3Mutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI2Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.CRCR3Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; MST[rv.ABSMutator]MSP[N] this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI4Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.UOI4Mutator]MSP[N] this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[rv.CRCR5Mutator]MSP[N] }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[InlineConstantMutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[PrimitiveReturnsMutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR2Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[rv.ROR2Mutator]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ABSMutator]MSP[S] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[MathMutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; MST[NonVoidMethodCallMutator]MSP[S] vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOD2Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[experimental.NakedReceiverMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ROR4Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR3Mutator]MSP[S] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI2Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.ABSMutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[NonVoidMethodCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[rv.ROR2Mutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.ROR4Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[rv.ROR4Mutator]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; MST[NonVoidMethodCallMutator]MSP[N] this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; MST[rv.UOI1Mutator]MSP[N] this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI3Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.ROR5Mutator]MSP[N] this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR3Mutator]MSP[N] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; MST[rv.CRCR6Mutator]MSP[N] } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.ABSMutator]MSP[N] this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOD2Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; MST[ConstructorCallMutator]MSP[N] }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; MST[rv.CRCR5Mutator]MSP[N] while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.AOR1Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.ROR3Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NegateConditionalsMutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.UOI2Mutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[rv.CRCR4Mutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOD1Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { MST[rv.UOI3Mutator]MSP[N] return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR1Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[ReturnValsMutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; MST[rv.UOI1Mutator]MSP[N] } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.CRCR5Mutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ; MST[rv.CRCR3Mutator]MSP[N]
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { MST[rv.UOI2Mutator]MSP[N] this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.CRCR6Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[MathMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[ConditionalsBoundaryMutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI3Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { MST[rv.CRCR2Mutator]MSP[N] if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[InlineConstantMutator]MSP[N] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; MST[rv.AOR4Mutator]MSP[N] vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[InlineConstantMutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR1Mutator]MSP[S] break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOD1Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { MST[rv.UOI2Mutator]MSP[N] if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.AOR3Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ROR4Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[rv.AOR3Mutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.ROR1Mutator]MSP[S] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.ABSMutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[NegateConditionalsMutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR1Mutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.ABSMutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[ConstructorCallMutator]MSP[S] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { MST[RemoveConditionalMutator_EQUAL_ELSE]MSP[N] throw new fn_3 ( lr_1 ) ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI3Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; MST[PrimitiveReturnsMutator]MSP[N] } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[experimental.MemberVariableMutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI4Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[rv.CRCR6Mutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[NonVoidMethodCallMutator]MSP[N] return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
this . vr_1 . vr_25 ( 0 ) ; MST[InlineConstantMutator]MSP[S] fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; MST[rv.CRCR5Mutator]MSP[N] if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[rv.CRCR4Mutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; MST[rv.CRCR5Mutator]MSP[N] } } @Override public boolean fn_11 () { return true ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; MST[rv.CRCR4Mutator]MSP[N] } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; MST[NonVoidMethodCallMutator]MSP[N] this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; MST[rv.CRCR6Mutator]MSP[N] }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.UOI4Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.ROR4Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.UOI2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.ROR3Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
for (; ; ) { if ( this . vr_1 . vr_13 () ) { return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; MST[ArgumentPropagationMutator]MSP[N] } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.ABSMutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[rv.ROR5Mutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOR4Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.AOR3Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR4Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { MST[rv.ROR5Mutator]MSP[N] throw new fn_3 ( lr_1 ) ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.AOD1Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; MST[rv.CRCR6Mutator]MSP[N] } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[rv.UOI2Mutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.UOI4Mutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; MST[rv.CRCR4Mutator]MSP[S] vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; MST[rv.CRCR1Mutator]MSP[N] while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; MST[experimental.MemberVariableMutator]MSP[N] this . vr_24 = this . vr_1 . vr_23 () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.AOR2Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + MST[rv.UOI4Mutator]MSP[N] lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; MST[rv.UOI3Mutator]MSP[N] vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; MST[rv.UOI2Mutator]MSP[N] } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[NegateConditionalsMutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
while ( vr_19 > 0 && fn_6 () > 0 ) { MST[rv.UOI3Mutator]MSP[N] this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { MST[NonVoidMethodCallMutator]MSP[N] this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; MST[rv.CRCR6Mutator]MSP[N] while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[rv.ROR4Mutator]MSP[N] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; vr_14 += vr_15 ; MST[rv.ABSMutator]MSP[N] } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
for (; ; ) { if ( this . vr_1 . vr_13 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] return this . vr_1 . get () & 0xFF ; } fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } } } @Override public int fn_2 ( final byte [] vr_10 ) throws IOException { return fn_2 ( vr_10 , 0 , vr_10 . length ) ; } @Override public long fn_5 ( long vr_19 ) throws IOException { long vr_20 = 0 ;
final int vr_15 = vr_16 . vr_17 ( this . vr_1 . vr_18 () , vr_12 ) ; this . vr_1 . get ( vr_10 , vr_11 , vr_15 ) ; vr_11 += vr_15 ; vr_12 -= vr_15 ; MST[MathMutator]MSP[N] vr_14 += vr_15 ; } else { fn_1 () ; if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { break; } } } return vr_14 == 0 && ! this . vr_6 . vr_13 () ? vl_2 : vr_14 ; } @Override public int fn_2 () throws IOException {
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[S] throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
private void fn_1 () throws vl_1 { this . vr_1 . vr_2 () ; final tp_1 vr_3 = this . vr_4 . vr_5 ( this . vr_6 , this . vr_1 , true ) ; if ( vr_3 . vr_7 () ) { MST[RemoveConditionalMutator_EQUAL_IF]MSP[N] vr_3 . vr_8 () ; } this . vr_1 . vr_9 () ; } @Override public int fn_2 ( final byte [] vr_10 , int vr_11 , int vr_12 ) throws IOException { if ( vr_10 == null ) { throw new fn_3 ( lr_1 ) ; }
if ( vr_12 < 0 || ( vr_11 + vr_12 ) > vr_10 . length ) { throw new fn_4 ( lr_2 + vr_10 . length + lr_3 + vr_11 + lr_4 + vr_12 ) ; } if ( vr_12 == 0 ) { return 0 ; } if ( ! this . vr_1 . vr_13 () && ! this . vr_6 . vr_13 () ) { MST[rv.ROR3Mutator]MSP[N] return vl_2 ; } int vr_14 = 0 ; while ( vr_12 > 0 ) { if ( this . vr_1 . vr_13 () ) {
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; MST[InlineConstantMutator]MSP[N] this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
while ( vr_19 > 0 && fn_6 () > 0 ) { this . fn_2 () ; vr_19 -- ; vr_20 ++ ; } return vr_20 ; } @Override public int fn_6 () throws IOException { return this . vr_1 . vr_18 () + this . vr_6 . vr_18 () ; MST[ReturnValsMutator]MSP[N] } @Override public void fn_7 () throws IOException { } @Override public synchronized void fn_8 ( final int vr_21 ) { this . vr_22 = this . vr_6 . vr_23 () ; this . vr_24 = this . vr_1 . vr_23 () ;
this . vr_6 . fn_8 () ; this . vr_1 . fn_8 () ; } @Override public synchronized void fn_9 () throws IOException { if ( this . vr_22 != vl_3 ) { if ( this . vr_6 . vr_23 () != 0 ) { this . vr_4 . fn_9 () ; this . vr_6 . rewind () ; this . vr_1 . rewind () ; this . vr_1 . vr_25 ( 0 ) ; MST[rv.CRCR6Mutator]MSP[N] while( this . vr_6 . vr_23 () < this . vr_22 ) { this . vr_1 . rewind () ;
this . vr_1 . vr_25 ( 0 ) ; fn_1 () ; } } if ( this . vr_6 . vr_23 () != this . vr_22 ) { MST[rv.UOI1Mutator]MSP[N] throw new fn_10 ( lr_5 + vr_6 . vr_23 () + lr_6 + lr_7 + this . vr_22 ) ; } this . vr_1 . vr_23 ( this . vr_24 ) ; this . vr_22 = vl_3 ; this . vr_24 = vl_3 ; } } @Override public boolean fn_11 () { return true ; }
