@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[ReturnValsMutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[rv.CRCR2Mutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[PrimitiveReturnsMutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[rv.CRCR3Mutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[rv.CRCR5Mutator]MSP[S] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[rv.CRCR6Mutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[rv.CRCR4Mutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[InlineConstantMutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.CRCR1Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.CRCR3Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[ConditionalsBoundaryMutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOD1Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[InlineConstantMutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ABSMutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ROR4Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.CRCR5Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ROR1Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[InlineConstantMutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ROR3Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[ConditionalsBoundaryMutator]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOR4Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ROR5Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[NonVoidMethodCallMutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.UOI1Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[NegateConditionalsMutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[MathMutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.UOI3Mutator]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ROR2Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[PrimitiveReturnsMutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[RemoveConditionalMutator_ORDER_IF]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[ReturnValsMutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[InlineConstantMutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.UOI2Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.UOI4Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.UOI3Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[rv.CRCR6Mutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOR1Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOR2Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[NegateConditionalsMutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[rv.CRCR5Mutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[rv.CRCR3Mutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; MST[rv.CRCR1Mutator]MSP[S] } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOR3Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.CRCR3Mutator]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[ReturnValsMutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.CRCR5Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.CRCR1Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.CRCR6Mutator]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; MST[InlineConstantMutator]MSP[N] } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[rv.CRCR1Mutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[rv.CRCR2Mutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[rv.CRCR5Mutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[rv.CRCR6Mutator]MSP[S] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; MST[rv.CRCR4Mutator]MSP[N] } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.CRCR6Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ROR5Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; MST[rv.AOD2Mutator]MSP[N] if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[RemoveConditionalMutator_ORDER_ELSE]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ROR2Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ABSMutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.UOI1Mutator]MSP[S] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { MST[rv.ROR4Mutator]MSP[N] return - 1 ; } else if ( vr_3 > 0 ) { return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ROR1Mutator]MSP[S] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.ROR3Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.UOI4Mutator]MSP[N] return 1 ; } else { return 0 ; } }
@Override public int fn_1 ( final tp_1 vr_1 , final tp_1 vr_2 ) { final long vr_3 = vr_1 . vr_4 () - vr_2 . vr_4 () ; if ( vr_3 < 0 ) { return - 1 ; } else if ( vr_3 > 0 ) { MST[rv.UOI2Mutator]MSP[N] return 1 ; } else { return 0 ; } }
